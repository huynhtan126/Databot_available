
Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Point Fields 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Point type exposes the following members. 
Fields 
  	Name	Description 
EPSILON_SQUARED A boundary value for comparing if two points are similar. HASH_SEED	A default seed value for creating hash codes. 
X	The X-coordinate of the point. 
Y	The Y-coordinate of the point. 
Z	The Z-coordinate of the point. 
See Also 
Point Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..EPSILON_SQUARED Field 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

A boundary value for comparing if two points are similar. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static readonly double EPSILON_SQUARED 
Visual Basic 
Public Shared ReadOnly EPSILON_SQUARED As Double 
Field Value 
Type: Double 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..HASH_SEED Field 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A default seed value for creating hash codes. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public static readonly int HASH_SEED 
Visual Basic 
Public Shared ReadOnly HASH_SEED As Integer 
Field Value 
Type: Int32 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	3 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..X Field 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The X-coordinate of the point. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double X 
Visual Basic 
Public X As Double 
Field Value 
Type: Double 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	4 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Y Field 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Y-coordinate of the point. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Y 
Visual Basic 
Public Y As Double 
Field Value 
Type: Double 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	5 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Z Field 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Z-coordinate of the point. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Z 
Visual Basic 
Public Z As Double 
Field Value 
Type: Double 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	6 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Point Methods 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Point type exposes the following members. 
Methods 
  	Name	Description 
AreEqual	Compares two points and tells whether they are equal. CompareTo	Compares two points. To use binarysearch somekind of sorting 
should be used. 
Equals	Returns true if the current object and the given object are equal. 
(Overrides Object..::..Equals(Object).) 
Returns a hash code for the point. Notice, in extremely rare cases, you might not get the same hash code for two points even though they are considered equal! This should, however, happen only in extremely rare cases! 
(Overrides Object..::..GetHashCode()()()().) 
ToString	Formats the point into a string. 
(Overrides Object..::..ToString()()()().) 
Translate	Translates the point using the given vector. 
Zero	Zeros all the members of the point. 
See Also 
Point Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	7 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..AreEqual Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Compares two points and tells whether they are equal. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool AreEqual( 
Point Point1, 
Point Point2 
) 
Visual Basic 
Public Shared Function AreEqual (  
Point1 As Point, 
Point2 As Point 
) As Boolean 
Parameters 

Point1 
Type: Tekla.Structures.Geometry3d..::..Point The first point to be compared. 

Point2 
Type: Tekla.Structures.Geometry3d..::..Point The second point to be compared. 

Return Value 

Type: Boolean 
True if the points are equal, false otherwise. 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	8 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..CompareTo Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Compares two points. To use binarysearch somekind of sorting should be used. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public int CompareTo( 
Object obj 
) 
Visual Basic 
Public Function CompareTo (  
obj As Object 
) As Integer 
Parameters 

obj 
Type: System..::..Object The point to be compared. 

Return Value 

Type: Int32 
0 if both are equal, -1 if this point is before, 1 if this point is after. 

Implements 

IComparable..::..CompareTo(Object) 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	9 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Equals Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the current object and the given object are equal. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Equals( 
Object obj 
) 
Visual Basic 
Public Overrides Function Equals (  
obj As Object 
) As Boolean 
Parameters 

obj 
Type: System..::..Object 
The object we wish to check the equality with. 

Return Value 

Type: Boolean 
True if the given object equals the current object. 
See Also 
Point Class 
Point Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	10 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..GetHashCode Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a hash code for the point. Notice, in extremely rare cases, you might not get the same hash code for two points even though they are considered equal! This should, however, happen only in extremely rare cases! 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public override int GetHashCode() 
Visual Basic 
Public Overrides Function GetHashCode As Integer 
Return Value 

Type: Int32 
The hash code for the point. 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	11 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..ToString Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Formats the point into a string. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override string ToString() 
Visual Basic 
Public Overrides Function ToString As String 
Return Value 

Type: String 
The string that represents the point. 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	12 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Translate Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Translates the point using the given vector. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public virtual void Translate( 
double X, 
double Y, 
double Z 
) 
Visual Basic 
Public Overridable Sub Translate (  
X As Double, 
Y As Double, 
Z As Double 
) 
Parameters 

X 
Type: System..::..Double 
The X-translation to be used. 

Y 
Type: System..::..Double 
The Y-translation to be used. 

Z 
Type: System..::..Double 
The Z-translation to be used. 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 


See Also	13 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	14 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Zero Method 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Zeros all the members of the point. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Zero() 
Visual Basic 
Public Sub Zero 
See Also 
Point Class 
Point Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	15 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Point Operators 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Point type exposes the following members. 
Operators 
  	Name	Description 
Addition	Returns the sum of the given two points. 
Equality	Compares the given two points for similarity. Inequality	Compares if the two given points are not similar. Subtraction Returns the difference of the given two points. 
See Also 
Point Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	16 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Addition Operator 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the sum of the given two points. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Point operator +( 
Point p1, 
Point p2 
) 
Visual Basic 
Public Shared Operator + (  
p1 As Point, 
p2 As Point 
) As Point 
Parameters 

p1 
Type: Tekla.Structures.Geometry3d..::..Point The first point to be used. 

p2 
Type: Tekla.Structures.Geometry3d..::..Point The second point to be used. 

Return Value 

Type: Point 
The sum of the given two points. 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	17 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Equality Operator 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Compares the given two points for similarity. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public static bool operator ==( 
Point p1, 
Point p2 
) 
Visual Basic 
Public Shared Operator = (  
p1 As Point, 
p2 As Point 
) As Boolean 
Parameters 

p1 
Type: Tekla.Structures.Geometry3d..::..Point The first point to be used. 

p2 
Type: Tekla.Structures.Geometry3d..::..Point The second point to be used. 

Return Value 

Type: Boolean 
True if the given two points are similar. False otherwise. 
See Also 
Point Class 
Point Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	18 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Inequality Operator 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Compares if the two given points are not similar. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool operator !=( 
Point p1, 
Point p2 
) 
Visual Basic 
Public Shared Operator <> (  
p1 As Point, 
p2 As Point 
) As Boolean 
Parameters 

p1 
Type: Tekla.Structures.Geometry3d..::..Point The first point to be used. 

p2 
Type: Tekla.Structures.Geometry3d..::..Point The second point to be used. 

Return Value 

Type: Boolean 
True if the given two points are not similar. False otherwise. 
See Also 
Point Class 
Point Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	19 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Point..::..Subtraction Operator 
Point Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the difference of the given two points. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Point operator -( 
Point p1, 
Point p2 
) 
Visual Basic 
Public Shared Operator - (  
p1 As Point, 
p2 As Point 
) As Point 
Parameters 

p1 
Type: Tekla.Structures.Geometry3d..::..Point The first point to be used. 

p2 
Type: Tekla.Structures.Geometry3d..::..Point The second point to be used. 

Return Value 

Type: Point 
The difference of the given two points. 
See Also 
Point Class 
Point Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	20 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PolyLine class represents a line that consists of one or more line segments. To create a polyline, you have to give a list of the points that will form the polyline. The first point in the list will be connected with the second point in the list, the second point in the list will be connected with the third point in the list, etc. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class PolyLine 
Visual Basic 
<SerializableAttribute> 
Public Class PolyLine 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Geometry3d..::..PolyLine 
See Also 
PolyLine Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	21 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine Members 
PolyLine Class  Constructors  Methods  Operators  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyLine type exposes the following members. 
Constructors 
  	Name	Description 
PolyLine Instantiates a polyline with the given Points. Methods 
  	Name	Description 
Equals	Returns true if the objects are equal. (Overrides Object..::..Equals(Object).) 
Returns a hash code for a polyline. Notice, in extremely rare cases, you might not get the same hash code for two polylines even 
though they are considered equal! This should, however, happen only in extremely rare cases! 
(Overrides Object..::..GetHashCode()()()().) 
Length	Returns the length of a polyline. 
Operators 
  	Name	Description 
Equality	Checks the equality of two polylines. 
Inequality Checks the inequality of two polylines. 
Properties 
  	Name	Description 
Points	The points the polyline consists of. 




Properties	22 


Point Fields 

See Also 
PolyLine Class Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	23 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine Constructor 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a polyline with the given Points. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolyLine( 
IEnumerable Points 
) 
Visual Basic 
Public Sub New (  
Points As IEnumerable 
) 
Parameters 

Points 
Type: System.Collections..::..IEnumerable 
A list of the points that will form the polyline. 
See Also 
PolyLine Class 
PolyLine Members  Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

    





See Also	24 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine Methods 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyLine type exposes the following members. 
Methods 
  	Name	Description 
Equals	Returns true if the objects are equal. (Overrides Object..::..Equals(Object).) 
Returns a hash code for a polyline. Notice, in extremely rare cases, you might not get the same hash code for two polylines even 
though they are considered equal! This should, however, happen only in extremely rare cases! 
(Overrides Object..::..GetHashCode()()()().) 
Length	Returns the length of a polyline. 
See Also 
PolyLine Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	25 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine..::..Equals Method 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns true if the objects are equal. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Equals( 
Object O 
) 
Visual Basic 
Public Overrides Function Equals (  
O As Object 
) As Boolean 
Parameters 

O 
Type: System..::..Object 
The object that equality is wished to be checked with. 

Return Value 

Type: Boolean 
True if the objects are equal. 
See Also 
PolyLine Class 
PolyLine Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	26 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine..::..GetHashCode Method 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a hash code for a polyline. Notice, in extremely rare cases, you might not get the same hash code for two polylines even though they are considered equal! This should, however, happen only in extremely rare cases! 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public override int GetHashCode() 
Visual Basic 
Public Overrides Function GetHashCode As Integer 
Return Value 

Type: Int32 
The hash code for the polyline. 
See Also 
PolyLine Class 
PolyLine Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	27 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine..::..Length Method 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the length of a polyline. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Length() 
Visual Basic 
Public Function Length As Double 
Return Value 

Type: Double 
The length of the polyline. 
See Also 
PolyLine Class 
PolyLine Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	28 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine Operators 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyLine type exposes the following members. 
Operators 
  	Name	Description 
Equality	Checks the equality of two polylines. Inequality Checks the inequality of two polylines. 
See Also 
PolyLine Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	29 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine..::..Equality Operator 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Checks the equality of two polylines. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool operator ==( 
PolyLine PolyLine1, 
PolyLine PolyLine2 
) 
Visual Basic 
Public Shared Operator = (  
PolyLine1 As PolyLine, 
PolyLine2 As PolyLine 
) As Boolean 
Parameters 

PolyLine1 
Type: Tekla.Structures.Geometry3d..::..PolyLine 
The first polyline to be used. 

PolyLine2 
Type: Tekla.Structures.Geometry3d..::..PolyLine 
The second polyline to be used. 

Return Value 

Type: Boolean 
True if the two polylines are equal. False otherwise. 
See Also 
PolyLine Class 
PolyLine Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	30 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine..::..Inequality Operator 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Checks the inequality of two polylines. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool operator !=( 
PolyLine PolyLine1, 
PolyLine PolyLine2 
) 
Visual Basic 
Public Shared Operator <> (  
PolyLine1 As PolyLine, 
PolyLine2 As PolyLine 
) As Boolean 
Parameters 

PolyLine1 
Type: Tekla.Structures.Geometry3d..::..PolyLine 
The first polyline to be used. 

PolyLine2 
Type: Tekla.Structures.Geometry3d..::..PolyLine 
The second polyline to be used. 

Return Value 

Type: Boolean 
True if the two polylines are not equal. False otherwise. 
See Also 
PolyLine Class 
PolyLine Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	31 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine Properties 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyLine type exposes the following members. 
Properties 
  	Name	Description 
Points	The points the polyline consists of. See Also 
PolyLine Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	32 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyLine..::..Points Property 
PolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The points the polyline consists of. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Points { get; set; } 
Visual Basic 
Public Property Points As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
PolyLine Class 
PolyLine Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	33 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Projection Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Projection class contains methods for calculating the projection of geometric objects on other geometric objects. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public static class Projection 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Projection 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Geometry3d..::..Projection 
See Also 
Projection Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	34 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Projection Members 
Projection Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Projection type exposes the following members. 
Methods 
  	Name	Description 
LineSegmentToPlane Returns a new line segment which is a projection of the 
given line segment onto the given plane. 
LineToPlane	Returns a new line which is a projection of the given line 
onto the given plane. 
PointToLine	Returns a new point which is a projection of the given 
point onto the given line. 
PointToPlane	Returns a new point which is a projection of the given 
point onto the given plane. 
See Also 
Projection Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	35 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Projection Methods 
Projection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Projection type exposes the following members. 
Methods 
  	Name	Description 
LineSegmentToPlane Returns a new line segment which is a projection of the 
given line segment onto the given plane. 
LineToPlane	Returns a new line which is a projection of the given line 
onto the given plane. 
PointToLine	Returns a new point which is a projection of the given 
point onto the given line. 
PointToPlane	Returns a new point which is a projection of the given 
point onto the given plane. 
See Also 
Projection Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	36 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Projection..::..LineSegmentToPlane Method 
Projection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new line segment which is a projection of the given line segment onto the given plane. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public static LineSegment LineSegmentToPlane( 
LineSegment LineSegment, 
GeometricPlane Plane 
) 
Visual Basic 
Public Shared Function LineSegmentToPlane (  
LineSegment As LineSegment, 
Plane As GeometricPlane 
) As LineSegment 
Parameters 

LineSegment 
Type: Tekla.Structures.Geometry3d..::..LineSegment 
The line segment to be used. 

Plane 
Type: Tekla.Structures.Geometry3d..::..GeometricPlane The plane to be used. 

Return Value 

Type: LineSegment 
The new projection line segment. 
See Also 
Projection Class 
Projection Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	37 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Projection..::..LineToPlane Method 
Projection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new line which is a projection of the given line onto the given plane. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public static Line LineToPlane( 
Line Line, 
GeometricPlane Plane 
) 
Visual Basic 
Public Shared Function LineToPlane (  
Line As Line, 
Plane As GeometricPlane 
) As Line 
Parameters 

Line 
Type: Tekla.Structures.Geometry3d..::..Line The line to be used. 

Plane 
Type: Tekla.Structures.Geometry3d..::..GeometricPlane The plane to be used. 

Return Value 

Type: Line 
The new projection line. 
See Also 
Projection Class 
Projection Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	38 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Projection..::..PointToLine Method 
Projection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new point which is a projection of the given point onto the given line. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public static Point PointToLine( 
Point Point, 
Line Line 
) 
Visual Basic 
Public Shared Function PointToLine (  
Point As Point, 
Line As Line 
) As Point 
Parameters 

Point 
Type: Tekla.Structures.Geometry3d..::..Point The point to be used. 

Line 
Type: Tekla.Structures.Geometry3d..::..Line The line to be used. 

Return Value 

Type: Point 
The new projection point. 
See Also 
Projection Class 
Projection Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	39 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Projection..::..PointToPlane Method 
Projection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new point which is a projection of the given point onto the given plane. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public static Point PointToPlane( 
Point Point, 
GeometricPlane Plane 
) 
Visual Basic 
Public Shared Function PointToPlane (  
Point As Point, 
Plane As GeometricPlane 
) As Point 
Parameters 

Point 
Type: Tekla.Structures.Geometry3d..::..Point The point to be used. 

Plane 
Type: Tekla.Structures.Geometry3d..::..GeometricPlane The plane to be used. 

Return Value 

Type: Point 
The new projection point. 
See Also 
Projection Class 
Projection Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	40 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Vector class defines a direction and magnitude from the current origin. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class Vector : Point 
Visual Basic 
<SerializableAttribute> 
Public Class Vector 
Inherits Point 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Geometry3d..::..Point 
        Tekla.Structures.Geometry3d..::..Vector 
See Also 
Vector Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	41 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector Members 
Vector Class  Constructors  Methods  Operators  Fields  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Vector type exposes the following members. 
Constructors 
  	Name	Description 
Vector()()()()	Instantiates a zero length vector. 
Vector(Point)	Instatiates a new vector with the given point. 
Vector(Double, Double, Double)  Instantiates a vector with the given coordinates. Methods 
  	Name	Description 
Compares two points. To use binarysearch somekind of sorting should be used. 
(Inherited from Point.) 
Cross(Vector)	Returns a new cross product vector of the current vector and 
the given vector. 
Cross(Vector, 
Vector)	Returns a new cross product vector of the given two vectors. 
Dot(Vector)	Returns a dot product of the current vector and the given 
vector. 
Dot(Vector, Vector) Returns a dot product of the given two vectors. 
Returns true if the current object and the given object are equal. 
(Inherited from Point.) 
GetAngleBetween	Gets the angle (in radians) between the current vector and 
the given vector. 
GetHashCode	Returns a hash code for the point. Notice, in extremely rare 
cases, you might not get the same hash code for two points even though they are considered equal! This should, however, happen only in extremely rare cases! 

Methods	42 


Point Fields 
(Inherited from Point.) 
GetLength	Gets the length (magnitude) of a vector. 
GetNormal	Returns a new normalized equivalent of the current vector. Normalize()()()()	Normalizes the vector using the length 1.0 (the length of a 
unit vector). 
Normalize(Double)	Normalizes the vector using the given length. 
Formats the 3D vector into a string with fixed decimals, in the following way: "(X, Y, Z)". 
(Overrides Point..::..ToString()()()().) 
Translate	Translates the point using the given vector. 
(Inherited from Point.) 
Zero	Zeros all the members of the point. 
(Inherited from Point.) 
Operators 
  	Name	Description 
Multiply(Double, 
Vector) 
Multiply(Vector, Double) 


Calculates the multiplication of the given vector with the given scalar. 
Fields 
  	Name	Description 
X	The X-coordinate of the point. (Inherited from Point.) 
Y	The Y-coordinate of the point. (Inherited from Point.) 
Z	The Z-coordinate of the point. (Inherited from Point.) 
See Also 
Vector Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	43 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector Constructor 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Vector()()()()	Instantiates a zero length vector. 
Vector(Point)	Instatiates a new vector with the given point. 
Vector(Double, Double, Double)  Instantiates a vector with the given coordinates. See Also 
Vector Class 
Vector Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	44 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector Constructor 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a zero length vector. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector() 
Visual Basic 
Public Sub New 
See Also 
Vector Class 
Vector Members 
Vector Overload 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	45 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector Constructor (Point) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Instatiates a new vector with the given point. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public Vector( 
Point Point 
) 
Visual Basic 
Public Sub New (  
Point As Point 
) 
Parameters 

Point 
Type: Tekla.Structures.Geometry3d..::..Point The point to be used. 
See Also 
Vector Class 
Vector Members 
Vector Overload 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	46 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector Constructor (Double, Double, Double) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a vector with the given coordinates. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector( 
double X, 
double Y, 
double Z 
) 
Visual Basic 
Public Sub New (  
X As Double, 
Y As Double, 
Z As Double 
) 
Parameters 

X 
Type: System..::..Double 
The X-coordinate to be used. 

Y 
Type: System..::..Double 
The Y-coordinate to be used. 

Z 
Type: System..::..Double 
The Z-coordinate to be used. 
See Also 
Vector Class 
Vector Members 
Vector Overload Tekla.Structures.Geometry3d Namespace 

See Also	47 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	48 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector Fields 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Vector type exposes the following members. 
Fields 
  	Name	Description 
X	The X-coordinate of the point. (Inherited from Point.) 
Y	The Y-coordinate of the point. (Inherited from Point.) 
Z	The Z-coordinate of the point. (Inherited from Point.) 
See Also 
Vector Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	49 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector Methods 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Vector type exposes the following members. 
Methods 
  	Name	Description 
Compares two points. To use binarysearch somekind of sorting should be used. 
(Inherited from Point.) 
Cross(Vector)	Returns a new cross product vector of the current vector and 
the given vector. 
Cross(Vector, 
Vector)	Returns a new cross product vector of the given two vectors. 
Dot(Vector)	Returns a dot product of the current vector and the given 
vector. 
Dot(Vector, Vector) Returns a dot product of the given two vectors. 
Returns true if the current object and the given object are equal. 
(Inherited from Point.) 
GetAngleBetween	Gets the angle (in radians) between the current vector and 
the given vector. 
Returns a hash code for the point. Notice, in extremely rare cases, you might not get the same hash code for two points even though they are considered equal! This should, however, happen only in extremely rare cases! 
(Inherited from Point.) 
GetLength	Gets the length (magnitude) of a vector. 
GetNormal	Returns a new normalized equivalent of the current vector. Normalize()()()()	Normalizes the vector using the length 1.0 (the length of a 
unit vector). 
Normalize(Double)	Normalizes the vector using the given length. 
ToString	Formats the 3D vector into a string with fixed decimals, in 
the following way: "(X, Y, Z)". 

Methods	50 


Point Fields 
(Overrides Point..::..ToString()()()().) Translate	Translates the point using the given vector. 
(Inherited from Point.) 
Zero	Zeros all the members of the point. 
(Inherited from Point.) 
See Also 
Vector Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	51 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Cross Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Cross(Vector)	Returns a new cross product vector of the current vector and 
the given vector. 
Cross(Vector, 
Vector)	Returns a new cross product vector of the given two vectors. 
See Also 
Vector Class 
Vector Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	52 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Cross Method (Vector) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new cross product vector of the current vector and the given vector. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public Vector Cross( 
Vector Vector 
) 
Visual Basic 
Public Function Cross (  
Vector As Vector 
) As Vector 
Parameters 

Vector 
Type: Tekla.Structures.Geometry3d..::..Vector The vector to be used. 

Return Value 

Type: Vector 
The new cross product vector. 
See Also 
Vector Class 
Vector Members 
Cross Overload Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	53 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Cross Method (Vector, Vector) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new cross product vector of the given two vectors. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Vector Cross( 
Vector Vector1, 
Vector Vector2 
) 
Visual Basic 
Public Shared Function Cross (  
Vector1 As Vector, 
Vector2 As Vector 
) As Vector 
Parameters 

Vector1 
Type: Tekla.Structures.Geometry3d..::..Vector The first vector to be used. 

Vector2 
Type: Tekla.Structures.Geometry3d..::..Vector The second vector to be used. 

Return Value 

Type: Vector 
The new cross product vector. 
See Also 
Vector Class 
Vector Members 
Cross Overload Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	54 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Dot Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Dot(Vector)	Returns a dot product of the current vector and the given 
vector. 
Dot(Vector, 
Vector)	Returns a dot product of the given two vectors. 
See Also 
Vector Class 
Vector Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	55 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Dot Method (Vector) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a dot product of the current vector and the given vector. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Dot( 
Vector Vector 
) 
Visual Basic 
Public Function Dot (  
Vector As Vector 
) As Double Parameters 

Vector 
Type: Tekla.Structures.Geometry3d..::..Vector The vector to be used. 

Return Value 

Type: Double 
The dot product of the vectors. 
See Also 
Vector Class 
Vector Members 
Dot Overload Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	56 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Dot Method (Vector, Vector) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a dot product of the given two vectors. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static double Dot( 
Vector Vector1, 
Vector Vector2 
) 
Visual Basic 
Public Shared Function Dot (  
Vector1 As Vector, 
Vector2 As Vector 
) As Double 
Parameters 

Vector1 
Type: Tekla.Structures.Geometry3d..::..Vector The first vector to be used. 

Vector2 
Type: Tekla.Structures.Geometry3d..::..Vector The second vector to be used. 

Return Value 

Type: Double 
The dot product of the vectors. 
See Also 
Vector Class 
Vector Members 
Dot Overload Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	57 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..GetAngleBetween Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the angle (in radians) between the current vector and the given vector. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public double GetAngleBetween( 
Vector Vector 
) 
Visual Basic 
Public Function GetAngleBetween (  
Vector As Vector 
) As Double 
Parameters 

Vector 
Type: Tekla.Structures.Geometry3d..::..Vector The vector to be used. 

Return Value 

Type: Double 
The angle between the vectors in radians. 
See Also 
Vector Class 
Vector Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	58 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..GetLength Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the length (magnitude) of a vector. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double GetLength() Visual Basic 
Public Function GetLength As Double 
Return Value 

Type: Double 
The vector's length. 
See Also 
Vector Class 
Vector Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	59 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..GetNormal Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new normalized equivalent of the current vector. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector GetNormal() Visual Basic 
Public Function GetNormal As Vector 
Return Value 

Type: Vector 
The normalized equivalent of the current vector. 
See Also 
Vector Class 
Vector Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	60 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Normalize Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Normalize()()()()	Normalizes the vector using the length 1.0 (the length of a 
unit vector). 
Normalize(Double) Normalizes the vector using the given length. 
See Also 
Vector Class 
Vector Members 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	61 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Normalize Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Normalizes the vector using the length 1.0 (the length of a unit vector). Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Normalize() Visual Basic 
Public Function Normalize As Double 
Return Value 

Type: Double 
The normalized vector's length. 
See Also 
Vector Class 
Vector Members 
Normalize Overload Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	62 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Normalize Method (Double) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Normalizes the vector using the given length. 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Normalize( 
double NewLength 
) 
Visual Basic 
Public Function Normalize (  
NewLength As Double 
) As Double 
Parameters 

NewLength 
Type: System..::..Double 
The length to be used. 

Return Value 

Type: Double 
The normalized vector's length. 
See Also 
Vector Class 
Vector Members 
Normalize Overload Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	63 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..ToString Method 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Formats the 3D vector into a string with fixed decimals, in the following way: "(X, Y, Z)". 
Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public override string ToString() 
Visual Basic 
Public Overrides Function ToString As String 
Return Value 

Type: String 
The string that represents the vector. 
See Also 
Vector Class 
Vector Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	64 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector Operators 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Operators 
  	Name	Description 
Multiply(Double, 
Vector) 
Multiply(Vector, Double) 


Calculates the multiplication of the given vector with the given scalar. 
See Also 
Vector Class 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	65 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Multiply Operator 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Multiply(Double, 
Vector) 
Multiply(Vector, Double) 


Calculates the multiplication of the given vector with the given scalar. 
See Also 
Vector Class 
Vector Members Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	66 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Multiply Operator (Double, Vector) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Calculates the multiplication of the given vector with the given scalar. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Vector operator *( 
double Multiplier, 
Vector Vector 
) 
Visual Basic 
Public Shared Operator * (  
Multiplier As Double, 
Vector As Vector 
) As Vector 
Parameters 

Multiplier 
Type: System..::..Double 
The scalar to multiply the vector with. 

Vector 
Type: Tekla.Structures.Geometry3d..::..Vector The vector to be multiplied. 

Return Value 

Type: Vector 
The new vector that is the multiplication of the vector and the scalar. 
See Also 
Vector Class 
Vector Members 
Multiply Overload 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	67 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Vector..::..Multiply Operator (Vector, Double) 
Vector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Calculates the multiplication of the given vector with the given scalar. Namespace:  Tekla.Structures.Geometry3d 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Vector operator *( 
Vector Vector, 
double Multiplier 
) 
Visual Basic 
Public Shared Operator * (  
Vector As Vector, 
Multiplier As Double 
) As Vector 
Parameters 

Vector 
Type: Tekla.Structures.Geometry3d..::..Vector The vector to be multiplied. 

Multiplier 
Type: System..::..Double 
The scalar to multiply the vector with. 

Return Value 

Type: Vector 
The new vector that is the multiplication of the vector and the scalar. 
See Also 
Vector Class 
Vector Members 
Multiply Overload 
Tekla.Structures.Geometry3d Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	68 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Tekla.Structures.Model Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Model namespace includes the functionality to insert, select, modify or delete objects inside a Tekla Structures model. The namespace also includes possibilites to query different kind of data from the current model instance, such as information about the currently selected objects. The namespace offers the functionality through .NET remoting and the COM interface. 
Classes 
  	Class	Description 
The Assembly class defines a single manufacturing unit: objects that are bolted or welded together in the workshop. An assembly has a main part and secondary 
Assembly 




BaseComponent 


assemblables attached to it. The number of secondaries is limited to 2048. Hierarchical assemblies can also 
have subassemblies attached to them and they can have a parent assembly instance. 
The BaseComponent class is an abstract base class that represents generic components. The generic components derived from the base component are the component, the connection, the detail and the seam. 
The BaseRebarGroup class is an abstract base class that represents reinforcing bar group classes. The 
reinforcing bar groups derived from the base group are the rebar group, the circled rebar group and the curved rebar group. 
BaseWeld	The BaseWeld abstract class defines a weld between 
two model objects. 
Beam	The Beam class represents a single beam in the model. 
A beam has a single start and end point. 
BoltArray	The BoltArray class defines a bolt group with an array 
shape. 
BoltCircle	The BoltCircle class defines a bolt group with a circle 
shape. 
The BoltGroup class is an abstract base class for all bolt shapes, such as array, circle and XY list. See the Tekla 
BoltGroup 


Structures help file for further information about the attributes. 

Classes	69 





BoltXYList 


Boolean 



Point Fields 
The BoltXYList class defines a bolt group with an XY list shape. The bolt group is the most generic one of the bolt groups. 
The Boolean class is an abstract base class for boolean operations such as a part cut, an add, a fitting or a cut plane. 
The BooleanPart class represents a part cut or an add. This means that a model object is, for example, cut with a part instance to create a void to the father part. Typically the operative part is deleted after the operation. 
Brep	The Brep class represents a single brep in the model. A 
brep has a single start and end point. 
Chamfer	The Chamfer class defines how the corners of a 
polybeam or a contour plate are rounded. CircleRebarGroup	The CircleRebarGroup class represents a group of 
reinforcing bars which have a circular shape. 
The ClashCheckData class presents information about the detected clash. It is instantiated inside the onClashDetected method. The objects store the identifiers and type of the clash to be passed on to event subscribers. 
ClashCheckHandler	The ClashCheckHandler class contains clash check 
methods. 
The Component class represents a component. A component is a modelling tool that typically assembles multiple parts to build some type of a structure, for 
Component 





ComponentInput 


example a hall macro or at a smaller scale a reinforcement component (a macro). Also, a custom part is a component. 
The ComponentInput class handles the input of component objects and positions. A component has one component input. The component input must include all the needed input objects and points in the correct order. For example, an input with a point and a part is 
different from an input of a part and a point. The maximum number of different input items in the collection is 10. 
The Connection class represents a connection. A connection is something that connects two or more 
parts together. 
Contour	The Contour class defines a possibly chamfered contour. 
Contours must not have loops. 
ContourPlate	The ContourPlate class represents a part made with a 
contour, such as, a concrete slab. 
ContourPoint 

Classes	70 


Point Fields 
The ContourPoint class defines a point with possible chamfering information, used, for example, to define a contour plate. 
The ControlCircle class defines a user defined (not magnetic) circle helping in modeling work. If there are duplicated input points or 3 input points are in a line, ControlCircle.Insert() will return false. ControlCircle.Select() will return the center point of the circle to Point1. 
ControlLine	The ControlLine class defines a user defined (possibly 
magnetic) line helping in modeling work. 
ControlPlane	The ControlPlane class defines a user defined (possibly 
magnetic) plane helping in modeling work. 
ControlPoint	The ControlPoint class defines a user defined point 
helping in modeling work. 
CurvedRebarGroup	The CurvedRebarGroup class represents a group of 
reinforcing bars which have a curved shape. 
The CustomPart class represents a custom part object in the Tekla Structures model. A custom part is a 
CustomPart 



CutPlane 


DeformingData 


modeling tool that typically assembles multiple parts to build some type of a beam-like structure, for example a tapered beam or a sandwich panel. 
The CutPlane class defines how the end of a part is cut with a plane. A cut plane differs from a fitting because a cut can never extend the boundaries of the original part. 
The DeformingData class holds information about the deforming of parts. Deformed parts are parts that have been warped, cambered or shortened. 
The Detail class represents a detail. A detail is different from a connection since the detail only connects to one part. 
EdgeChamfer	The EdgeChamfer class defines how the part edge is 
chamfered. 
Events	The Events class allows the user to register event 
listeners for model events. 
The Fitting class defines how the part end fits to a 
Fitting 


Grid 


plane. A fitting can make the part either longer or shorter. 
The Grid class defines a user defined (possibly magnetic) set of planes helping in modeling work. A grid has grid plane instances as children. 
The GridPlane class defines a user defined (possibly magnetic) plane helping in modeling work. A grid plane must always belong to a father grid instance. 
HierarchicDefinition	The HierarchicDefinition class defines a hierarchy structure. This hierarchy structure can be instantiated 

Classes	71 


Point Fields 
and extended by hierarchical objects. 
The HierarchicObject class defines an object in a tree-structured hierarchy. The hierarchy structure is defined by hierarchical definitions which the hierarchical objects instantiate. Hierarchical objects may contain other hierarchical objects, thus forming a sub-hierarchy, or model objects. 
InputItem	The InputItem class is used to store input objects and 
positions. 
Load	The Load class is an abstract base class for all loads. 
LoadArea	The LoadArea class defines a linearly-distributed force 
bound by a triangle or a quadrangle. 
The LoadGroup class implements grouping functionality related to all loads. Each load should be assigned to a load group. Each load group contains loads caused by the same action and to which you want to refer collectively. 

Tekla Structures assumes that all loads in a group 

  
LoadGroup 


Have the same partial safety and other combination factors 
 Have the same action direction 
 Occur at the same time and all together 
You may create new load groups, modify existing ones and delete load groups via the .NET interface. You may also change the assigned load group of a load and list all the load groups found in the model via the ModelObjectSelector interface. The model always has at least one load group. 
LoadLine	The LoadLine class defines a linearly-distributed force 
or torsion. 
LoadPoint	The LoadPoint class defines a concentrated force or a 
bending moment. 
The LoadTemperature class defines a temperature change in a part, or a temperature difference between two part surfaces. 
LoadUniform	The LoadUniform class defines a uniformly-distributed 
force bounded by a polygon. 
The LogicalWeld class represents a group of welds in 
the model. A logical weld contains a list of children welds. The primary properties need to be the same in all the children welds. 
Material	The Material class represents a single material that 
parts can be made of. 


Classes	72 


Point Fields 
The Model class represents a single model open in Tekla Structures. Before interaction with the model, the user will have to create one instance of this class. 
ModelHandler	The ModelHandler class provides information about the 
currently open Tekla Structures model. 
ModelInfo	The ModelInfo class provides information about the 
currently open Tekla Structures model. 
The ModelObject class is an abstract base class for all 
ModelObject 


ModelObjectEnumerator 


model objects, such as parts, bolts, welds and reinforcements. 
The ModelObjectEnumerator class provides the means to iterate through model object instances in the current model. 
The ModelObjectSelector class can be used to make different model object selections from the current model. 
NumberingSeries	The NumberingSeries class describes how an object is 
to be numbered. 
Object	The Object class is an abstract base class for all the 
objects Tekla Structures has. 
The Offset class defines the offset value of start points and end points. The offset is the distance from the current work plane in the three global directions. 
Part	The Part class represents a part in the model. A part can 
be either a beam, a polybeam or a contour plate. 
Phase	The Phase class defines a model object phase. 
PhaseCollection	The PhaseCollection class handles the collection of the 
model phases. 
Plane	The Plane class defines a plane in space using an origin, 
an X-axis and a Y-axis. 
PolyBeam	The PolyBeam class represents a continuous beam with 
a contour as input. 
Polygon	The Polygon class represents a polygon object that has 
its corners at the given points. 
The PolygonWeld class represents a polygon weld in the model. A polygon weld has a main part and a secondary part. 
PolymeshObjectBase	This class is an abstract class for model objects that 
have surfaces (polymeshes) as their geometries. 
Position	The Position class defines how a part is positioned 
relative to the input. 
PourBreak	The PourBreak class represents a pour break in a 
model. 
PourObject 

Classes	73 


Point Fields 
The PourObject class represents a pour object in the model. 
Profile	The Profile class defines the form of a cross section. 
ProjectInfo	The ProjectInfo class provides project information about 
the currently open Tekla Structures model. 
The RebarGeometry class represents a single physical reinforcing bar - the building block of a mesh, a rebar group and even a single rebar. It contains the physical reinforcing bar points in 3D space. 
RebarGroup	The RebarGroup class represents a group of reinforcing 
bars. 
The RebarHookData class defines the hook at the end of a reinforcing bar. Hooks are used for anchoring purposes. 
RebarMesh	The RebarMesh class represents a reinforcement mesh. RebarSplice	The RebarSplice class represents a splice between two 
reinforcements. 
RebarStrand	The RebarStrand class represents prestressed strands 
for concrete parts. 
The ReferenceModel class contains methods related to 
ReferenceModel 


ReferenceModelObject 


reference models. A reference model is a reference of an external model. 
The ReferenceModelObject class contains methods related to reference model objects. A reference model object is a subobject of a reference model. 
The Reinforcement class represents a reinforcement in the model. A reinforcement can either be a mesh, a single rebar, a rebar group or a strand. 
Seam	The Seam class represents a seam. A seam is something 
that connects a main part to other parts along an edge. SingleRebar	The SingleRebar class represents a single reinforcing 
bar. 
The Solid class represents the physical object in the model created by a part instance. A solid instance can be used to query the actual geometry of the part and intersect that geometry with, for example, lines and planes. 
StrandUnbondingData	The StrandUnbondingData class represents the 
unbonding of a rebar strand. 
The SurfaceObject class represents a surface object in the model. Currently this class only support dynamic surfaces whose geometries are determined by the parts 
SurfaceObject 


or pours they associate to. It is not allowed to modify the geometry of a dynamic surface on Open API. The polymesh setter of this class throws . 

Classes	74 





SurfaceTreatment 



Task 







TaskDependency 



Point Fields 
The SurfaceTreatment class defines a layer above a building element defining what a surface looks like. The surface could for example have a tiled look. 
The Task class defines a single building site task. It may contain parts, assemblies or other tasks. Tasks may 
have a hierarchy between them i.e. there are other 
tasks as subtasks for a parent task. Tasks may also depend on each other, have resources assigned to them or have a single worktype. 
The TaskDependency class represents a dependency between two task objects. Each task may depend on many other tasks, but between two specific tasks only one type of a dependency may exist. 

There are four types of dependencies: 

 FINISH_TO_FINISH (FF) 
 FINISH_TO_START (FS) 
 START_TO_FINISH (SF) 
 START_TO_START (SS) 
TaskWorktype	The TaskWorktype class defines a single worktype for a task object. Each task may belong to only one worktype. 
The TransformationPlane class describes a transformation from global model coordinates to local and back to global. 
Weld	The Weld class represents a normal weld in the model. 
A normal weld has a main part and a secondary part. WorkPlaneHandler	The WorkPlaneHandler class contains methods for 
getting and setting the current transformation plane. 
Structures 
  	Structure	Description 
ReferenceModel..::..Revision	Reference model revision. 
Interfaces 
  	Interface	Description 
IAssemblable The IAssemblable interface dictates which model objects are 
capabable of belonging to an assembly at the leaf level. 
Delegates 
  	Delegate	Description 
Events..::..ClashCheckDoneDelegate	The delegate to use for clash check 
completion. 
Events..::..ClashDetectedDelegate 

Delegates	75 


Point Fields 
The delegate to use for clash detection. Encapsulates any method that takes a clash check data object as a parameter. 
Events..::..ModelChangedDelegate	The delegate to use for database 
commit. 
Events..::..ModelLoadDelegate	The delegate to use for model load. Events..::..ModelSaveAsDelegate	The delegate to use for model save as. Events..::..ModelSaveDelegate	The delegate to use for model save. Events..::..NumberingDelegate	The delegate to use for numbering. Events..::..SelectionChangeDelegate	The delegate to use for selection 
change. Events..::..TeklaStructuresExitDelegate	The delegate to use for Tekla Structures 
exit. 
Enumerations 
  	Enumeration	Description 
Assembly..::..AssemblyTypeEnum	The assembly types. 
The different ways to 
BaseRebarGroup..::..ExcludeTypeEnum 


exclude reinforcing bars from the group. 
The ways to distribute the reinforcing bars with different spacings. 
BaseWeld..::..WeldContourEnum	The weld contour. 
BaseWeld..::..WeldElectrodeClassificationEnum	The weld electrode 
classification. BaseWeld..::..WeldFinishEnum	The weld finish. 
BaseWeld..::..WeldIntermittentTypeEnum	Weld intermittent 
types. BaseWeld..::..WeldNDTInspectionEnum	The weld NDT 
inspection level. BaseWeld..::..WeldPlacementTypeEnum	Weld placement 
types. BaseWeld..::..WeldPreparationTypeEnum	Weld preparation 
types. BaseWeld..::..WeldProcessTypeEnum	The weld process 
type. BaseWeld..::..WeldTypeEnum	The weld types. 
Beam..::..BeamTypeEnum	The beam types. The 
strip and pad footings are valid only if the material type of the 
Enumerations	76 


Point Fields 
beam is concrete. BoltGroup..::..BoltHoleTypeEnum	The hole type. 
BoltGroup..::..BoltRotateSlotsEnum	The rotation of the 
slots (the holes). BoltGroup..::..BoltThreadInMaterialEnum	The thread in the 
material. BoltGroup..::..BoltTypeEnum	The type of the bolt. 
Defines the boolean operation: an add or a cut. 
Chamfer..::..ChamferTypeEnum	The basic shape type 
of the chamfer. CircleRebarGroup..::..CircleRebarGroupStirrupTypeEnum	The different stirrup 
types. 
An enumeration for the different clash types. 
ContourPlate..::..ContourPlateTypeEnum	The contour plate 
types. ControlCircle..::..ControlCircleColorEnum	The different circle 
colors. ControlLine..::..ControlLineColorEnum	The different line 
colors. EdgeChamfer..::..ChamferEndTypeEnum	The end type of the 
edge chamfer. 
Defines the different types of classification hierarchies. 
InputItem..::..InputTypeEnum	Defines the type of 
the input. Load..::..LoadAttachmentEnum	The load attachment. 
Load..::..LoadPartNamesEnum	The load part names. 
Load..::..LoadSpanningEnum	The load spanning. 
LoadArea..::..AreaLoadFormEnum	The area load form. 
The possible display colors for loads in a load group. 
LoadGroup..::..LoadGroupDirection	The possible 
directions. LoadGroup..::..LoadGroupType	The possible types for 
load groups. LoadLine..::..LineLoadFormEnum	The line load form. 
ModelObject..::..ModelObjectEnum 

Enumerations	77 


Point Fields 
All possible concrete model object subclasses are 
defined here. This enumeration can be used to fetch certain types of objects from the Tekla Structures model. 
ModelObjectEnumerator..::..EnumeratorTypeEnum	The types of enumerator available. 
Part..::..CastUnitTypeEnum	The cast unit types. 
PolyBeam..::..PolyBeamTypeEnum	The polybeam types. 
Position..::..DepthEnum	The position in the 
depth sense. Position..::..PlaneEnum	The position in the 
plane sense. Position..::..RotationEnum	The position in the 
rotational sense. RebarGroup..::..RebarGroupStirrupTypeEnum	The different stirrup 
types. RebarHookData..::..RebarHookShapeEnum	The different hook 
shapes. RebarMesh..::..RebarMeshCrossBarLocationEnum	The ways to locate 
the crossing bars. 
The ways to distribute the reinforcing bars 
RebarMesh..::..RebarMeshSpacingMethodEnum 


with different spacings. 
The different types of reinforcement 
meshes. 
RebarSplice..::..RebarSpliceBarPositionsEnum	The bar group positions in the splice. 
RebarSplice..::..RebarSpliceTypeEnum	The splice types. 
ReferenceModel..::..VisibilityEnum	The visibility type. 
Reinforcement..::..RebarOffsetTypeEnum	The different types of 
offsets. Solid..::..SolidCreationTypeEnum	The creation type of 
the solid. SurfaceTreatment..::..SurfaceColorEnum	The different 
surfacing colors. SurfaceTreatment..::..SurfaceTypeEnum	The different 
surfacing types. 
Enumerations	78 


Point Fields 
TaskDependency..::..DependencyTypeEnum	The task dependency 
types. Weld..::..WeldPositionEnum	The weld position. 

Copyright  © Tekla 2013. All rights reserved. 












































Enumerations	79 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Assembly class defines a single manufacturing unit: objects that are bolted or welded together in the workshop. An assembly has a main part and secondary assemblables attached to it. The number of secondaries is limited to 2048. Hierarchical assemblies can also have subassemblies attached to them and they can have a parent assembly instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Assembly : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Assembly 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam beam1 = new Beam(new Point(0,0,0), new Point(1000,0,0));            Beam beam2 = new Beam(new Point(0,0,0), new Point(0,0,1000)); 
           beam1.Profile.ProfileString = "380*380";            beam1.Material.MaterialString = "K40-1"; 
           beam2.Profile.ProfileString = "380*380";            beam2.Material.MaterialString = "K40-1"; 
           beam1.Insert(); 
           beam2.Insert(); 
           Assembly assembly = beam1.GetAssembly(); 

Examples	80 


Point Fields 
           assembly.Add(beam2); 
if(!assembly.Modify()) 
               Console.WriteLine("Assembly Modify Failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Assembly 
See Also 
Assembly Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
































See Also	81 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Assembly Members 
Assembly Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Assembly type exposes the following members. 
Constructors 
  	Name	Description 
Assembly Creates a new assembly instance. 
Methods 
  	Name	Description 
Adds an array list of given assemblable instances to the assembly. For assemblies use Add(Assembly Assembly). Notice that adding other than assembly instances will actually assume that you are adding objects to a cast unit assembly. 
Add(Assembly)	Adds a new subassembly for the assembly instance. 
Adds the given assemblable instance to the assembly. Notice that adding other than assembly instances will assume that you are adding objects to a cast unit assembly. 
CompareTo(Object)	Compares Identifiers of model objects. 
(Inherited from ModelObject.) CompareTo(Assembly)	Compares the instantiated assembly with another 
one. 
Delete	Explodes the assembly instance. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 


Methods	82 


Point Fields 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly instance the assembly 
belongs to (null if none). 
GetAssemblyType	Returns the type of the assembly. 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetMainPart	Selects and returns the main part of the assembly 
or null if none. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 

Methods	83 




GetReportProperty(String, String%) 


GetSecondaries 



Point Fields 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Selects and returns all the secondary assemblables belonging to the assembly. The method replaces the old GetObjects() method. Notice that the number of secondaries is limited to 2048. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetSubAssemblies	Selects and returns a list of subassemblies 
belonging to the assembly. 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	At the moment assemblies cannot be inserted. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the assembly instance in the model. 
(Overrides ModelObject..::..Modify()()()().) 
Removes the given instance from the assembly. Before removing steel parts from an assembly all 
Remove 


connecting workshop welds and bolts must be deleted. 
Selects the assembly instance from the model. The identifier of the instance must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetMainPart	Sets the main part of the assembly. 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 


Sets an integer property for the model object. (Inherited from ModelObject.) 

Methods	84 




SetUserProperty(String, String) 



Point Fields 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AssemblyNumber Defines the numbering in the assembly sense. If the members 
are empty and zero, the main part attributes are used. Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the assembly. 
See Also 
Assembly Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	85 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly Constructor 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new assembly instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly() 
Visual Basic 
Public Sub New 
See Also 
Assembly Class 
Assembly Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	86 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Assembly Methods 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Assembly type exposes the following members. 
Methods 
  	Name	Description 
Adds an array list of given assemblable instances to the assembly. For assemblies use Add(Assembly Assembly). Notice that adding other than assembly instances will actually assume that you are adding objects to a cast unit assembly. 
Add(Assembly)	Adds a new subassembly for the assembly instance. 
Adds the given assemblable instance to the assembly. Notice that adding other than assembly instances will assume that you are adding objects to a cast unit assembly. 
CompareTo(Object)	Compares Identifiers of model objects. 
(Inherited from ModelObject.) CompareTo(Assembly)	Compares the instantiated assembly with another 
one. 
Delete	Explodes the assembly instance. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly instance the assembly 
belongs to (null if none). 
Methods	87 


Point Fields 
GetAssemblyType	Returns the type of the assembly. 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetMainPart	Selects and returns the main part of the assembly 
or null if none. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSecondaries	Selects and returns all the secondary assemblables belonging to the assembly. The method replaces the 
old GetObjects() method. Notice that the number of 

Methods	88 


Point Fields 
secondaries is limited to 2048. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetSubAssemblies	Selects and returns a list of subassemblies 
belonging to the assembly. 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	At the moment assemblies cannot be inserted. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the assembly instance in the model. 
(Overrides ModelObject..::..Modify()()()().) 
Removes the given instance from the assembly. Before removing steel parts from an assembly all 
Remove 


connecting workshop welds and bolts must be deleted. 
Selects the assembly instance from the model. The identifier of the instance must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetMainPart	Sets the main part of the assembly. 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 





Methods	89 


Point Fields 

See Also 
Assembly Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	90 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Add Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Adds an array list of given assemblable instances to the assembly. For assemblies use Add(Assembly Assembly). 
Notice that adding other than assembly instances will actually 
assume that you are adding objects to a cast unit assembly. Add(Assembly)	Adds a new subassembly for the assembly instance. 
Adds the given assemblable instance to the assembly. Notice 
Add(IAssemblable) 


that adding other than assembly instances will assume that you are adding objects to a cast unit assembly. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	91 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Add Method (ArrayList) 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Adds an array list of given assemblable instances to the assembly. For assemblies use Add(Assembly Assembly). Notice that adding other than assembly instances will actually assume that you are adding objects to a cast unit assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Add( 
ArrayList Assemblables 
) 
Visual Basic 
Public Function Add (  
Assemblables As ArrayList 
) As Boolean 
Parameters 

Assemblables 
Type: System.Collections..::..ArrayList 
A list of assemblables to add to the assembly. 

Return Value 

Type: Boolean 
True on success, otherwise false. 
See Also 
Assembly Class 
Assembly Members 
Add Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	92 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Add Method (Assembly) 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a new subassembly for the assembly instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Add( 
Assembly Assembly 
) 
Visual Basic 
Public Function Add (  
Assembly As Assembly 
) As Boolean 
Parameters 

Assembly 
Type: Tekla.Structures.Model..::..Assembly 
The assembly instance to be added. 

Return Value 

Type: Boolean 
True if the subassembly was successfully added. 
See Also 
Assembly Class 
Assembly Members 
Add Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	93 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Add Method (IAssemblable) 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Adds the given assemblable instance to the assembly. Notice that adding other than assembly instances will assume that you are adding objects to a cast unit assembly. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Add( 
IAssemblable Object 
) 
Visual Basic 
Public Function Add (  
Object As IAssemblable 
) As Boolean 
Parameters 

Object 
Type: Tekla.Structures.Model..::..IAssemblable The part instance to add to the assembly. 

Return Value 

Type: Boolean 
True on success, otherwise false. 
See Also 
Assembly Class 
Assembly Members 
Add Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	94 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..CompareTo Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
CompareTo(Object)	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
CompareTo(Assembly) Compares the instantiated assembly with another one. 
See Also 
Assembly Class 
Assembly Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	95 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..CompareTo Method (Assembly) 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Compares the instantiated assembly with another one. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CompareTo( 
Assembly AssemblyToCompare 
) 
Visual Basic 
Public Function CompareTo (  
AssemblyToCompare As Assembly 
) As Boolean 
Parameters 

AssemblyToCompare 
Type: Tekla.Structures.Model..::..Assembly 
The assembly to compare with. 

Return Value 

Type: Boolean 
True if there are no differences, false otherwise. 
Remarks 
If the numbering hasn't been performed the function will also return false. 
See Also 
Assembly Class 
Assembly Members 
CompareTo Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	96 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Delete Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Explodes the assembly instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	97 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..GetAssembly Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns the assembly instance the assembly belongs to (null if none). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly GetAssembly() 
Visual Basic 
Public Function GetAssembly As Assembly 
Return Value 

Type: Assembly 
The assembly instance or null. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	98 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..GetAssemblyType Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the type of the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly..::..AssemblyTypeEnum GetAssemblyType() 
Visual Basic 
Public Function GetAssemblyType As Assembly..::..AssemblyTypeEnum 
Return Value 
Type: Assembly..::..AssemblyTypeEnum The type of the assembly. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	99 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..GetMainPart Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects and returns the main part of the assembly or null if none. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject GetMainPart() 
Visual Basic 
Public Function GetMainPart As ModelObject 
Return Value 

Type: ModelObject 
The main part of the assembly or null. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	100 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..GetSecondaries Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects and returns all the secondary assemblables belonging to the assembly. The method replaces the old GetObjects() method. Notice that the number of secondaries is limited to 2048. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetSecondaries() 
Visual Basic 
Public Function GetSecondaries As ArrayList 
Return Value 

Type: ArrayList 
An array list containing all the secondary assemblables belonging to the assembly. 
See Also 
Assembly Class 
Assembly Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	101 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..GetSubAssemblies Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects and returns a list of subassemblies belonging to the assembly. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetSubAssemblies() 
Visual Basic 
Public Function GetSubAssemblies As ArrayList 
Return Value 

Type: ArrayList 
A list of subassemblies. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	102 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Insert Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

At the moment assemblies cannot be inserted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
False. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	103 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Modify Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the assembly instance in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	104 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Remove Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Removes the given instance from the assembly. Before removing steel parts from an assembly all connecting workshop welds and bolts must be deleted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Remove( 
ModelObject Object 
) 
Visual Basic 
Public Function Remove (  
Object As ModelObject 
) As Boolean 
Parameters 

Object 
Type: Tekla.Structures.Model..::..ModelObject The model object to remove from the assembly. 

Return Value 

Type: Boolean 
True if successfully removed. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	105 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Select Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the assembly instance from the model. The identifier of the instance must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	106 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..SetMainPart Method 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the main part of the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetMainPart( 
Part Part 
) 
Visual Basic 
Public Function SetMainPart (  
Part As Part 
) As Boolean 
Parameters 

Part 
Type: Tekla.Structures.Model..::..Part 
The part to set as the main part of the assembly. 

Return Value 

Type: Boolean 
True if the part was valid. 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	107 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Assembly Properties 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Assembly type exposes the following members. 
Properties 
  	Name	Description 
AssemblyNumber Defines the numbering in the assembly sense. If the members 
are empty and zero, the main part attributes are used. Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the assembly. 
See Also 
Assembly Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	108 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..AssemblyNumber Property 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines the numbering in the assembly sense. If the members are empty and zero, the main part attributes are used. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public NumberingSeries AssemblyNumber { get; set; } 
Visual Basic 
Public Property AssemblyNumber As NumberingSeries 
Get 
Set 
Property Value 

Type: NumberingSeries 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	109 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Assembly..::..Name Property 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Assembly Class 
Assembly Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	110 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Assembly..::..AssemblyTypeEnum Enumeration 
Assembly Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The assembly types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum AssemblyTypeEnum 
Visual Basic 
Public Enumeration AssemblyTypeEnum 
Members 
Member name	Value		Description 
STEEL_ASSEMBLY	0	The steel assembly type. 
PRECAST_ASSEMBLY	1	The precast assembly type. IN_SITU_ASSEMBLY	2	The in-situ assembly type. TIMBER_ASSEMBLY	3	The timber assembly type. UNKNOWN_ASSEMBLY 4	The unknown assembly type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	111 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The BaseComponent class is an abstract base class that represents generic components. The generic components derived from the base component are the component, the connection, the detail and the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class BaseComponent : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class BaseComponent 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseComponent 
                Tekla.Structures.Model..::..Component 
                Tekla.Structures.Model..::..Connection 
                Tekla.Structures.Model..::..CustomPart 
                Tekla.Structures.Model..::..Detail 
                Tekla.Structures.Model..::..Seam 
See Also 
BaseComponent Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	112 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent Members 
BaseComponent 
Class  Constructors  Methods  Fields  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseComponent type exposes the following members. 
Constructors 
  	Name	Description 
BaseComponent Creates a base component instance with default attributes. Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAttribute(String, 
Double%)	Retrieves the attribute with the given name. 
GetAttribute(String, Int32%)	Retrieves the attribute with the given name. GetAttribute(String, 
String%)	Retrieves the attribute with the given name. 
GetChildren	Returns an enumerator of all the children model 
objects. 


Methods	113 






GetCoordinateSystem 


GetDoubleReportProperties 


GetDoubleUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. 

Methods	114 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 



Point Fields 
(Inherited from ModelObject.) 

Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
Modify	Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. SetAttribute(String, Int32)	Sets the attribute's value to the given value. SetAttribute(String, String)	Sets the attribute's value to the given value. 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Fields 
  	Name	Description 
ClassFromAttributeFile	A constant integer defining that the class is to be read from the attribute file. The class must be set to this constant value before inserting 

Fields	115 


Point Fields 
the component. 
A constant string defining that the connection code is to be read from the attribute file. The connection code must be set to this constant value before inserting the component. 
CUSTOM_OBJECT_NUMBER	The component number to be used when 
calling a custom component. 
The component number to be used when 
PLUGIN_OBJECT_NUMBER 


calling a plug-in or a type derived from the connection base. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
Name	The name of the component. The name identifies custom components or 
plug-ins. 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
See Also 
BaseComponent Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	116 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent Constructor 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a base component instance with default attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseComponent() 
Visual Basic 
Public Sub New 
See Also 
BaseComponent Class 
BaseComponent Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	117 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent Fields 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseComponent type exposes the following members. 
Fields 
  	Name	Description 
A constant integer defining that the class is to be read from the attribute file. The class must 
ClassFromAttributeFile 


be set to this constant value before inserting 
the component. 
A constant string defining that the connection code is to be read from the attribute file. The connection code must be set to this constant value before inserting the component. 
CUSTOM_OBJECT_NUMBER	The component number to be used when 
calling a custom component. 
The component number to be used when 
PLUGIN_OBJECT_NUMBER 

See Also 
BaseComponent Class Tekla.Structures.Model Namespace 


calling a plug-in or a type derived from the connection base. 

Copyright  © Tekla 2013. All rights reserved. 










See Also	118 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..ClassFromAttributeFile Field 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A constant integer defining that the class is to be read from the attribute file. The class must be set to this constant value before inserting the component. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const int ClassFromAttributeFile 
Visual Basic 
Public Const ClassFromAttributeFile As Integer 
Field Value 
Type: Int32 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	119 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..ConnectionCodeFromAttributeFile Field 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A constant string defining that the connection code is to be read from the attribute file. The connection code must be set to this constant value before inserting the component. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const string ConnectionCodeFromAttributeFile 
Visual Basic 
Public Const ConnectionCodeFromAttributeFile As String 
Field Value 
Type: String 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	120 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..CUSTOM_OBJECT_NUMBER Field 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The component number to be used when calling a custom component. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const int CUSTOM_OBJECT_NUMBER 
Visual Basic 
Public Const CUSTOM_OBJECT_NUMBER As Integer 
Field Value 
Type: Int32 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	121 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..PLUGIN_OBJECT_NUMBER Field 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The component number to be used when calling a plug-in or a type derived from the connection base. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const int PLUGIN_OBJECT_NUMBER 
Visual Basic 
Public Const PLUGIN_OBJECT_NUMBER As Integer 
Field Value 
Type: Int32 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	122 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent Methods 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseComponent type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAttribute(String, 
Double%)	Retrieves the attribute with the given name. 
GetAttribute(String, Int32%)	Retrieves the attribute with the given name. GetAttribute(String, 
String%)	Retrieves the attribute with the given name. 
GetChildren 

Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple 

Methods	123 







GetDoubleUserProperties 



Point Fields 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 


Methods	124 





Insert 



Point Fields 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
Modify	Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. SetAttribute(String, Int32)	Sets the attribute's value to the given value. SetAttribute(String, String)	Sets the attribute's value to the given value. 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
BaseComponent Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	125 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..GetAttribute Method 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetAttribute(String, Double%)	Retrieves the attribute with the given name. GetAttribute(String, Int32%)	Retrieves the attribute with the given name. GetAttribute(String, String%)	Retrieves the attribute with the given name. 
See Also 
BaseComponent Class 
BaseComponent Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	126 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..GetAttribute Method (String, Double%) 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves the attribute with the given name. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetAttribute( 
string AttrName, 
ref double DValue 
) 
Visual Basic 
Public Function GetAttribute (  
AttrName As String, 
ByRef DValue As Double 
) As Boolean 
Parameters 

AttrName 
Type: System..::..String 
The name of the attribute. 

DValue 
Type: System..::..Double% 
A double for the return value. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
BaseComponent Class BaseComponent Members GetAttribute Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	127 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..GetAttribute Method (String, Int32%) 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves the attribute with the given name. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetAttribute( 
string AttrName, 
ref int Value 
) 
Visual Basic 
Public Function GetAttribute (  
AttrName As String, 
ByRef Value As Integer 
) As Boolean 
Parameters 

AttrName 
Type: System..::..String 
The name of the attribute. 

Value 
Type: System..::..Int32% 
An integer for the return value. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
BaseComponent Class BaseComponent Members GetAttribute Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	128 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..GetAttribute Method (String, String%) 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves the attribute with the given name. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetAttribute( 
string AttrName, 
ref string StrValue 
) 
Visual Basic 
Public Function GetAttribute (  
AttrName As String, 
ByRef StrValue As String 
) As Boolean 
Parameters 

AttrName 
Type: System..::..String 
The name of the attribute. 

StrValue 
Type: System..::..String% 
A string for the return value. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
BaseComponent Class BaseComponent Members GetAttribute Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	129 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..LoadAttributesFromFile Method BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool LoadAttributesFromFile( 
string Filename 
) 
Visual Basic 
Public Function LoadAttributesFromFile (  
Filename As String 
) As Boolean 
Parameters 

Filename 
Type: System..::..String 
The name of the file. 

Return Value 

Type: Boolean 
True if a file name is specified. 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	130 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..SetAttribute Method 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
SetAttribute(String, Double)	Sets the attribute's value to the given value. SetAttribute(String, Int32)	Sets the attribute's value to the given value. SetAttribute(String, String)	Sets the attribute's value to the given value. 
See Also 
BaseComponent Class 
BaseComponent Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	131 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..SetAttribute Method (String, Double) 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the attribute's value to the given value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void SetAttribute( 
string AttrName, 
double DValue 
) 
Visual Basic 
Public Sub SetAttribute (  
AttrName As String, 
DValue As Double 
) 
Parameters 

AttrName 
Type: System..::..String 
The name of the attribute. 

DValue 
Type: System..::..Double 
The double value of the attribute. 
See Also 
BaseComponent Class 
BaseComponent Members 
SetAttribute Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	132 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..SetAttribute Method (String, Int32) 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the attribute's value to the given value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void SetAttribute( 
string AttrName, 
int Value 
) 
Visual Basic 
Public Sub SetAttribute (  
AttrName As String, 
Value As Integer 
) 
Parameters 

AttrName 
Type: System..::..String 
The name of the attribute. 

Value 
Type: System..::..Int32 
The integer value of the attribute. 
See Also 
BaseComponent Class 
BaseComponent Members 
SetAttribute Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	133 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseComponent..::..SetAttribute Method (String, String) 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the attribute's value to the given value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void SetAttribute( 
string AttrName, 
string StrValue 
) 
Visual Basic 
Public Sub SetAttribute (  
AttrName As String, 
StrValue As String 
) 
Parameters 

AttrName 
Type: System..::..String 
The name of the attribute. 

StrValue 
Type: System..::..String 
The string value of the attribute. See Also 
BaseComponent Class 
BaseComponent Members 
SetAttribute Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	134 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent Properties 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseComponent type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
Name	The name of the component. The name identifies custom components or 
plug-ins. 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
See Also 
BaseComponent Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	135 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent..::..Name Property 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The name of the component. The name identifies custom components or plug-ins. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	136 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseComponent..::..Number Property 
BaseComponent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Number { get; set; } 
Visual Basic 
Public Property Number As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
BaseComponent Class BaseComponent Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	137 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The BaseRebarGroup class is an abstract base class that represents reinforcing bar group classes. The reinforcing bar groups derived from the base group are the rebar group, the circled rebar group and the curved rebar group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class BaseRebarGroup : Reinforcement 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class BaseRebarGroup 
Inherits Reinforcement 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..BaseRebarGroup 
                    Tekla.Structures.Model..::..CircleRebarGroup 
                    Tekla.Structures.Model..::..CurvedRebarGroup 
                    Tekla.Structures.Model..::..RebarGroup 
See Also 
BaseRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	138 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup Members 
BaseRebarGroup Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseRebarGroup type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 


Delete 


Equals 



GetAllReportProperties 





GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value 
must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value 
must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. (Inherited from ModelObject.) 

Methods	139 











GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string 
property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to 
GetIntegerReportProperties 




GetIntegerUserProperties 



GetNumberOfRebars 


fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. (Inherited from 
Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
GetRebarGeometries	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These 
objects contain physical points in the 3D space of each reinforcing bar. 


Methods	140 


Point Fields 








GetRebarGeometriesWithoutClashes 







GetReportProperty(String, Double%) 



GetReportProperty(String, Int32%) 



GetReportProperty(String, String%) 





(Inherited from Reinforcement.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These 
objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. 
(Inherited from 
Reinforcement.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing 
starts from the start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D 
space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from 
Reinforcement.) 
GetSingleRebarWithoutClash	Returns a single rebar inside the rebar group located by the 
given index. The indexing 
starts from the start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points 


Methods	141 















GetSolid 




GetStringReportProperties 



GetStringUserProperties 



Point Fields 
in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from 
Reinforcement.) 
Method for getting the solid information of the reinforcement. 
(Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to 
fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. (Inherited from ModelObject.) 
Retrieves a double property 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


Insert 



IsGeometryValid 


for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Tells whether the geometry of a reinforcement object is valid or not. 
(Inherited from 
Reinforcement.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Select	Selects the model object 
instance from the model database. 

Methods	142 






SetDynamicStringProperty 



SetLabel 



SetPhase 



Point Fields 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


model object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. EndHook	The hook at the end of the reinforcing bar. 
EndPoint	The end point of the direction in which the bars are 
distributed. 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
ExcludeType	Defines which bars to omit from the group. The 
options are: 


Properties	143 









Father 


FromPlaneOffset 



Point Fields 
 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Overrides Reinforcement..::..FromPlaneOffset.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only one value that defines the number of the reinforcing bars. 
SpacingType	The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 


Properties	144 


Point Fields 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE StartFromPlaneOffset	The start offset value from the part surface. 
StartHook	The hook at the beginning of the reinforcing bar. StartPoint	The start point of the direction in which the bars are 
distributed. 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or 
StartPointOffsetType 


StartPointOffsetValue 


OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
See Also 
BaseRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





























See Also	145 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup Methods 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseRebarGroup type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 


Delete 


Equals 



GetAllReportProperties 





GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value 
must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value 
must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. (Inherited from ModelObject.) 

Methods	146 











GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string 
property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to 
GetIntegerReportProperties 




GetIntegerUserProperties 



GetNumberOfRebars 


fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. (Inherited from 
Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
GetRebarGeometries	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These 
objects contain physical points in the 3D space of each reinforcing bar. 


Methods	147 


Point Fields 








GetRebarGeometriesWithoutClashes 







GetReportProperty(String, Double%) 



GetReportProperty(String, Int32%) 



GetReportProperty(String, String%) 





(Inherited from Reinforcement.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These 
objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. 
(Inherited from 
Reinforcement.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing 
starts from the start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D 
space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from 
Reinforcement.) 
GetSingleRebarWithoutClash	Returns a single rebar inside the rebar group located by the 
given index. The indexing 
starts from the start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points 


Methods	148 















GetSolid 




GetStringReportProperties 



GetStringUserProperties 



Point Fields 
in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from 
Reinforcement.) 
Method for getting the solid information of the reinforcement. 
(Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to 
fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. (Inherited from ModelObject.) 
Retrieves a double property 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


Insert 



IsGeometryValid 


for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Tells whether the geometry of a reinforcement object is valid or not. 
(Inherited from 
Reinforcement.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Select	Selects the model object 
instance from the model database. 

Methods	149 






SetDynamicStringProperty 



SetLabel 



SetPhase 



Point Fields 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 

See Also 
BaseRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


model object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 




















See Also	150 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup Properties 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseRebarGroup type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. EndHook	The hook at the end of the reinforcing bar. 
EndPoint	The end point of the direction in which the bars are 
distributed. 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 




ExcludeType 




Father 

FromPlaneOffset 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 

Properties	151 


Point Fields 
The offset value from the part surface applied in both sides. 
(Overrides Reinforcement..::..FromPlaneOffset.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only 
Spacings 


one value that defines the number of the reinforcing bars. 
The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
StartFromPlaneOffset	The start offset value from the part surface. 
StartHook	The hook at the beginning of the reinforcing bar. StartPoint	The start point of the direction in which the bars are 
distributed. 
StartPointOffsetType	Gets or sets the type of the start point offset is either 
OFFSET_TYPE_LEG_LENGTH or 

Properties	152 







StartPointOffsetValue 



Point Fields 
OFFSET_TYPE_COVER_THICKNESS. (Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
See Also 
BaseRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	153 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..EndFromPlaneOffset Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The end offset value from the part surface. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EndFromPlaneOffset { get; set; } 
Visual Basic 
Public Property EndFromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	154 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup..::..EndHook Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hook at the end of the reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData EndHook { get; set; } 
Visual Basic 
Public Property EndHook As RebarHookData 
Get 
Set 
Property Value 

Type: RebarHookData 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	155 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup..::..EndPoint Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The end point of the direction in which the bars are distributed. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; set; } 
Visual Basic 
Public Property EndPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	156 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..ExcludeType Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseRebarGroup..::..ExcludeTypeEnum ExcludeType { get; set; } 
Visual Basic 
Public Property ExcludeType As BaseRebarGroup..::..ExcludeTypeEnum 
Get 
Set 
Property Value 

Type: BaseRebarGroup..::..ExcludeTypeEnum 
See Also 
BaseRebarGroup Class 
BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	157 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..FromPlaneOffset Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The offset value from the part surface applied in both sides. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override double FromPlaneOffset { get; set; } 
Visual Basic 
Public Overrides Property FromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	158 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup..::..Size Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The size of the reinforcement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Size { get; set; } 
Visual Basic 
Public Property Size As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	159 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup..::..Spacings Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only one value that defines the number of the reinforcing bars. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Spacings { get; set; } 
Visual Basic 
Public Property Spacings As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	160 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..SpacingType Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseRebarGroup..::..RebarGroupSpacingTypeEnum SpacingType { get; set; } 
Visual Basic 
Public Property SpacingType As BaseRebarGroup..::..RebarGroupSpacingTypeEnum 
Get 
Set 
Property Value 

Type: BaseRebarGroup..::..RebarGroupSpacingTypeEnum 
See Also 
BaseRebarGroup Class 
BaseRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	161 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..StartFromPlaneOffset Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The start offset value from the part surface. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double StartFromPlaneOffset { get; set; } 
Visual Basic 
Public Property StartFromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	162 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup..::..StartHook Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hook at the beginning of the reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData StartHook { get; set; } 
Visual Basic 
Public Property StartHook As RebarHookData 
Get 
Set 
Property Value 

Type: RebarHookData 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	163 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseRebarGroup..::..StartPoint Property 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The start point of the direction in which the bars are distributed. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; set; } 
Visual Basic 
Public Property StartPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
BaseRebarGroup Class BaseRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	164 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..ExcludeTypeEnum Enumeration BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The different ways to exclude reinforcing bars from the group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ExcludeTypeEnum 
Visual Basic 
Public Enumeration ExcludeTypeEnum 
Members 
Member name	Value	Description 
EXCLUDE_TYPE_NONE 1	All the reinforcing bars are included. EXCLUDE_TYPE_FIRST	2	The first reinforcing bar is not to be created to the 
group. 
EXCLUDE_TYPE_LAST	3	The last reinforcing bar is not to be created to the 
group. 
EXCLUDE_TYPE_BOTH	4	The first and last reinforcing bars are not to be 
created to the group. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	165 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseRebarGroup..::..RebarGroupSpacingTypeEnum Enumeration 
BaseRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ways to distribute the reinforcing bars with different spacings. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarGroupSpacingTypeEnum 
Visual Basic 
Public Enumeration RebarGroupSpacingTypeEnum 
Members 
Member name	Value	Description 
SPACING_TYPE_UNDEFINED	0	The undefined spacing 
type. SPACING_TYPE_EXACT_SPACINGS	1	The bars are distributed 
using the spacing values. 
Equal distribution by the number of reinforcing bars. 
SPACING_TYPE_TARGET_SPACE	3	Equal distribution by the 
target spacing value. 
Distribution by the exact 
SPACING_TYPE_EXACT_SPACE_FLEX_AT_START	4 


SPACING_TYPE_EXACT_SPACE_FLEX_AT_END	5 


spacing value with a flexible first space. 
Distribution by the exact spacing value with a flexible last space. 
Distribution by the exact spacing value with flexible first and last spaces. 
SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 7	Distribution by the exact 
spacing value with a 

Members	166 


Point Fields 
flexible middle space. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	167 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The BaseWeld abstract class defines a weld between two model objects. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class BaseWeld : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class BaseWeld 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseWeld 
                Tekla.Structures.Model..::..LogicalWeld 
                Tekla.Structures.Model..::..PolygonWeld 
                Tekla.Structures.Model..::..Weld 
See Also 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	168 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld Members 
BaseWeld Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseWeld type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


GetDoubleUserProperties 

GetDynamicStringProperty 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 

Methods	169 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

GetWeldGeometries 

Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 

Methods	170 








Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
AngleBelow	Gets or sets the angle below. 
AroundWeld	Gets or sets a value indicating whether the weld is an 
around weld (true) or an edge weld (false). 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
ContourAbove	Gets or sets the contour above. ContourBelow	Gets or sets the contour below. EffectiveThroatAbove	Gets or sets the effective throat above. 
EffectiveThroatBelow	Gets or sets the effective throat below. ElectrodeClassification	Gets or sets the weld electrode classification. ElectrodeCoefficient	Gets or sets the electrode strength coefficient. ElectrodeStrength	Gets or sets the electrode strength. 
FinishAbove	Gets or sets the finish above. 


Properties	171 


Point Fields 
FinishBelow	Gets or sets the finish below. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IncrementAmountAbove Gets or sets the increment amount above. 
IncrementAmountBelow Gets or sets the increment amount below. IntermittentType	Gets or sets the weld intermittent type. 
LengthAbove	Gets or sets the length above. 
LengthBelow	Gets or sets the length below. 
MainObject	Gets or sets the main part of the weld. NDTInspection	Gets or sets the NDT inspection level. 
PitchAbove	Gets or sets the pitch above. 
PitchBelow	Gets or sets the pitch below. 
Placement	Gets or sets the weld placement. 
PrefixAboveLine	Gets or sets the size prefix above the line. PrefixBelowLine	Gets or sets the size prefix below the line. Preparation	Gets or sets the weld preparation. 
ProcessType	Gets or sets the process type. 
ReferenceText	Gets or sets the reference text. 
RootFaceAbove	Gets or sets the root face above. 
RootFaceBelow	Gets or sets the root face below. 
RootOpeningAbove	Gets or sets the root opening above. RootOpeningBelow	Gets or sets the root opening below. SecondaryObject	Gets or sets the secondary part of the weld. ShopWeld	Gets or sets a value indicating whether the weld is a 
shop weld (true) or a site weld (false). 
SizeAbove	Gets or sets the size above. 
SizeBelow	Gets or sets the size below. 
Standard	Obsolete. 
Gets or sets the weld detail/standard. 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
TypeAbove	Gets or sets the type above. 
TypeBelow	Gets or sets the type below. 
WeldNumber	Gets the weld number. 
WeldNumberPrefix	Gets or sets the weld number prefix. 
See Also 
BaseWeld Class 
Tekla.Structures.Model Namespace 

See Also	172 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	173 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld Methods 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseWeld type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


GetDoubleUserProperties 

GetDynamicStringProperty 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 

Methods	174 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

GetWeldGeometries 

Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 

Methods	175 








Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
BaseWeld Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	176 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..GetSolid Method 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Method for getting the weld solid. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid() 
Visual Basic 
Public Function GetSolid As Solid 
Return Value 
Type: Solid Weld solid. 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	177 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..GetWeldGeometries Method 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetWeldGeometries() 
Visual Basic 
Public Function GetWeldGeometries As ArrayList 
Return Value 

Type: ArrayList 
An array list that contains weld seam specific WeldGeometry objects. 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	178 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld Properties 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BaseWeld type exposes the following members. 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
AngleBelow	Gets or sets the angle below. 
AroundWeld	Gets or sets a value indicating whether the weld is an 
around weld (true) or an edge weld (false). 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
ContourAbove	Gets or sets the contour above. ContourBelow	Gets or sets the contour below. EffectiveThroatAbove	Gets or sets the effective throat above. 
EffectiveThroatBelow	Gets or sets the effective throat below. ElectrodeClassification	Gets or sets the weld electrode classification. ElectrodeCoefficient	Gets or sets the electrode strength coefficient. ElectrodeStrength	Gets or sets the electrode strength. 
FinishAbove	Gets or sets the finish above. 
FinishBelow	Gets or sets the finish below. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IncrementAmountAbove Gets or sets the increment amount above. 
IncrementAmountBelow Gets or sets the increment amount below. IntermittentType	Gets or sets the weld intermittent type. 
LengthAbove	Gets or sets the length above. 
LengthBelow	Gets or sets the length below. 
MainObject	Gets or sets the main part of the weld. 

Properties	179 


Point Fields 
NDTInspection	Gets or sets the NDT inspection level. 
PitchAbove	Gets or sets the pitch above. 
PitchBelow	Gets or sets the pitch below. 
Placement	Gets or sets the weld placement. 
PrefixAboveLine	Gets or sets the size prefix above the line. PrefixBelowLine	Gets or sets the size prefix below the line. Preparation	Gets or sets the weld preparation. 
ProcessType	Gets or sets the process type. 
ReferenceText	Gets or sets the reference text. 
RootFaceAbove	Gets or sets the root face above. 
RootFaceBelow	Gets or sets the root face below. 
RootOpeningAbove	Gets or sets the root opening above. RootOpeningBelow	Gets or sets the root opening below. SecondaryObject	Gets or sets the secondary part of the weld. ShopWeld	Gets or sets a value indicating whether the weld is a 
shop weld (true) or a site weld (false). 
SizeAbove	Gets or sets the size above. 
SizeBelow	Gets or sets the size below. 
Standard	Obsolete. 
Gets or sets the weld detail/standard. 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
TypeAbove	Gets or sets the type above. 
TypeBelow	Gets or sets the type below. 
WeldNumber	Gets the weld number. 
WeldNumberPrefix	Gets or sets the weld number prefix. 
See Also 
BaseWeld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	180 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..AngleAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the angle above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double AngleAbove { get; set; } 
Visual Basic 
Public Property AngleAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	181 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..AngleBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the angle below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double AngleBelow { get; set; } 
Visual Basic 
Public Property AngleBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	182 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..AroundWeld Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets a value indicating whether the weld is an around weld (true) or an edge weld (false). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AroundWeld { get; set; } 
Visual Basic 
Public Property AroundWeld As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	183 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..ConnectAssemblies Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool ConnectAssemblies { get; set; } 
Visual Basic 
Public Property ConnectAssemblies As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	184 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..ContourAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the contour above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldContourEnum ContourAbove { get; set; } 
Visual Basic 
Public Property ContourAbove As BaseWeld..::..WeldContourEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldContourEnum 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	185 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..ContourBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the contour below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldContourEnum ContourBelow { get; set; } 
Visual Basic 
Public Property ContourBelow As BaseWeld..::..WeldContourEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldContourEnum 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	186 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..EffectiveThroatAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the effective throat above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EffectiveThroatAbove { get; set; } 
Visual Basic 
Public Property EffectiveThroatAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	187 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..EffectiveThroatBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the effective throat below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EffectiveThroatBelow { get; set; } 
Visual Basic 
Public Property EffectiveThroatBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	188 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..ElectrodeClassification Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the weld electrode classification. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldElectrodeClassificationEnum ElectrodeClassification { get; set; } 
Visual Basic 
Public Property ElectrodeClassification As BaseWeld..::..WeldElectrodeClassificationEnum Get 
Set 
Property Value 

Type: BaseWeld..::..WeldElectrodeClassificationEnum 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	189 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..ElectrodeCoefficient Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the electrode strength coefficient. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ElectrodeCoefficient { get; set; } 
Visual Basic 
Public Property ElectrodeCoefficient As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	190 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..ElectrodeStrength Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the electrode strength. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ElectrodeStrength { get; set; } 
Visual Basic 
Public Property ElectrodeStrength As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	191 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..FinishAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the finish above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldFinishEnum FinishAbove { get; set; } 
Visual Basic 
Public Property FinishAbove As BaseWeld..::..WeldFinishEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldFinishEnum 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	192 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..FinishBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the finish below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldFinishEnum FinishBelow { get; set; } 
Visual Basic 
Public Property FinishBelow As BaseWeld..::..WeldFinishEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldFinishEnum 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	193 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..IncrementAmountAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the increment amount above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int IncrementAmountAbove { get; set; } 
Visual Basic 
Public Property IncrementAmountAbove As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	194 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..IncrementAmountBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the increment amount below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int IncrementAmountBelow { get; set; } 
Visual Basic 
Public Property IncrementAmountBelow As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	195 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..IntermittentType Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the weld intermittent type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldIntermittentTypeEnum IntermittentType { get; set; } 
Visual Basic 
Public Property IntermittentType As BaseWeld..::..WeldIntermittentTypeEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldIntermittentTypeEnum 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when provided value is not defined in the 
WeldIntermittentTypeEnum. 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	196 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..LengthAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the length above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LengthAbove { get; set; } 
Visual Basic 
Public Property LengthAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	197 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..LengthBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the length below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LengthBelow { get; set; } 
Visual Basic 
Public Property LengthBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	198 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..MainObject Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the main part of the weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject MainObject { get; set; } 
Visual Basic 
Public Property MainObject As ModelObject 
Get 
Set 
Property Value 

Type: ModelObject 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	199 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..NDTInspection Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the NDT inspection level. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldNDTInspectionEnum NDTInspection { get; set; } 
Visual Basic 
Public Property NDTInspection As BaseWeld..::..WeldNDTInspectionEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldNDTInspectionEnum 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	200 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..PitchAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the pitch above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double PitchAbove { get; set; } 
Visual Basic 
Public Property PitchAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	201 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..PitchBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the pitch below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double PitchBelow { get; set; } 
Visual Basic 
Public Property PitchBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	202 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..Placement Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the weld placement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldPlacementTypeEnum Placement { get; set; } 
Visual Basic 
Public Property Placement As BaseWeld..::..WeldPlacementTypeEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldPlacementTypeEnum 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when provided value is not defined in the 
WeldPlacementTypeEnum. 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	203 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..PrefixAboveLine Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the size prefix above the line. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PrefixAboveLine { get; set; } 
Visual Basic 
Public Property PrefixAboveLine As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	204 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..PrefixBelowLine Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the size prefix below the line. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PrefixBelowLine { get; set; } 
Visual Basic 
Public Property PrefixBelowLine As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	205 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..Preparation Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the weld preparation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldPreparationTypeEnum Preparation { get; set; } 
Visual Basic 
Public Property Preparation As BaseWeld..::..WeldPreparationTypeEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldPreparationTypeEnum 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when provided value is not defined in the 
WeldPreparationTypeEnum. 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	206 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..ProcessType Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the process type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldProcessTypeEnum ProcessType { get; set; } 
Visual Basic 
Public Property ProcessType As BaseWeld..::..WeldProcessTypeEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldProcessTypeEnum 
See Also 
BaseWeld Class 
BaseWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	207 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..ReferenceText Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the reference text. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ReferenceText { get; set; } 
Visual Basic 
Public Property ReferenceText As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	208 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..RootFaceAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the root face above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RootFaceAbove { get; set; } 
Visual Basic 
Public Property RootFaceAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	209 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..RootFaceBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the root face below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RootFaceBelow { get; set; } 
Visual Basic 
Public Property RootFaceBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	210 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..RootOpeningAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the root opening above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RootOpeningAbove { get; set; } 
Visual Basic 
Public Property RootOpeningAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	211 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..RootOpeningBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the root opening below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RootOpeningBelow { get; set; } 
Visual Basic 
Public Property RootOpeningBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	212 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..SecondaryObject Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the secondary part of the weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject SecondaryObject { get; set; } 
Visual Basic 
Public Property SecondaryObject As ModelObject 
Get 
Set 
Property Value 

Type: ModelObject 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	213 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..ShopWeld Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool ShopWeld { get; set; } 
Visual Basic 
Public Property ShopWeld As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	214 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..SizeAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the size above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SizeAbove { get; set; } 
Visual Basic 
Public Property SizeAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	215 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..SizeBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the size below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SizeBelow { get; set; } 
Visual Basic 
Public Property SizeBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	216 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..Standard Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the weld detail/standard. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported anymore.")] 
public string Standard { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported anymore.")>  
Public Property Standard As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	217 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..StitchWeld Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use IntermittentType instead.")] 
public bool StitchWeld { get; set; } 
Visual Basic 
<ObsoleteAttribute("Use IntermittentType instead.")>  
Public Property StitchWeld As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	218 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..TypeAbove Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the type above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldTypeEnum TypeAbove { get; set; } 
Visual Basic 
Public Property TypeAbove As BaseWeld..::..WeldTypeEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldTypeEnum 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	219 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..TypeBelow Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the type below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld..::..WeldTypeEnum TypeBelow { get; set; } 
Visual Basic 
Public Property TypeBelow As BaseWeld..::..WeldTypeEnum 
Get 
Set 
Property Value 

Type: BaseWeld..::..WeldTypeEnum 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	220 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..WeldNumber Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the weld number. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int WeldNumber { get; } 
Visual Basic 
Public ReadOnly Property WeldNumber As Integer 
Get 
Property Value 
Type: Int32 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	221 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldNumberPrefix Property 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the weld number prefix. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string WeldNumberPrefix { get; set; } 
Visual Basic 
Public Property WeldNumberPrefix As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BaseWeld Class 
BaseWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	222 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldContourEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld contour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldContourEnum 
Visual Basic 
Public Enumeration WeldContourEnum 
Members 
Member name	Value		Description WELD_CONTOUR_NONE	0	No contour. WELD_CONTOUR_FLUSH	1	The flush contour. WELD_CONTOUR_CONVEX	2	The convex contour. WELD_CONTOUR_CONCAVE 3	The concave contour. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	223 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldElectrodeClassificationEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld electrode classification. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldElectrodeClassificationEnum 
Visual Basic 
Public Enumeration WeldElectrodeClassificationEnum 
Members 
Member name	Value	Description 
WELD_ELECTRODE_CLASSIFICATION_NONE	0	No electrode classification. WELD_ELECTRODE_CLASSIFICATION_35	1	The electrode classification 
35. WELD_ELECTRODE_CLASSIFICATION_42	2	The electrode classification 
42. WELD_ELECTRODE_CLASSIFICATION_50	3	The electrode classification 
50. WELD_ELECTRODE_CLASSIFICATION_E60XX 4	The electrode classification 
E60XX. 
WELD_ELECTRODE_CLASSIFICATION_E70XX 5	The electrode classification 
E70XX. 
WELD_ELECTRODE_CLASSIFICATION_E80XX 6	The electrode classification 
E80XX. 
WELD_ELECTRODE_CLASSIFICATION_E90XX 7	The electrode classification 
E90XX. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	224 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..WeldFinishEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld finish. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldFinishEnum 
Visual Basic 
Public Enumeration WeldFinishEnum 
Members 
Member name	Value		Description WELD_FINISH_NONE	0	No weld finish. 
WELD_FINISH_GRIND	1	The grind finish. 
WELD_FINISH_MACHINE	2	The machine finish. WELD_FINISH_CHIP	3	The chip finish. 
WELD_FINISH_FINISHED_WELD	4	The normally treated finish. WELS_FINISH_SMOOTH_TRANSITION 5	The smooth transition finish. See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	225 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldIntermittentTypeEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Weld intermittent types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldIntermittentTypeEnum 
Visual Basic 
Public Enumeration WeldIntermittentTypeEnum 
Members 
Member name	Value		Description 
CONTINUOUS	0	Continuous. 
CHAIN_INTERMITTENT	1	Chain intermittent. STAGGERED_INTERMITTENT 2	Staggered intermittent. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	226 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldNDTInspectionEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld NDT inspection level. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldNDTInspectionEnum 
Visual Basic 
Public Enumeration WeldNDTInspectionEnum 
Members 
Member name	Value		Description WELD_NDT_INSPECTION_NONE 0	No NDT inspection level. 
WELD_NDT_INSPECTION_A	1	The NDT inspection level A. WELD_NDT_INSPECTION_B	2	The NDT inspection level B. WELD_NDT_INSPECTION_C	3	The NDT inspection level C. WELD_NDT_INSPECTION_D	4	The NDT inspection level D. WELD_NDT_INSPECTION_E	5	The NDT inspection level E. See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	227 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldPlacementTypeEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Weld placement types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldPlacementTypeEnum 
Visual Basic 
Public Enumeration WeldPlacementTypeEnum 
Members 
Member name	Value		Description PLACEMENT_AUTO	0	Auto placement. 
PLACEMENT_MAIN	1	Main part placement. PLACEMENT_SECONDARY 2	Secondary part placement. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	228 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldPreparationTypeEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Weld preparation types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldPreparationTypeEnum 
Visual Basic 
Public Enumeration WeldPreparationTypeEnum 
Members 
Member name	Value		Description PREPARATION_NONE	0	No preparation. 
PREPARATION_AUTO	1	Auto preparation. PREPARATION_MAIN	2	Main part preparation. PREPARATION_SECONDARY 3	Secondary part preparation. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	229 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BaseWeld..::..WeldProcessTypeEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld process type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldProcessTypeEnum 
Visual Basic 
Public Enumeration WeldProcessTypeEnum 
Members 
Member name	Value	Description 
WELD_PROCESS_NONE	0	No process type. 
WELD_PROCESS_SMAW	1	The shielded metal arc (SMAW) process type. WELD_PROCESS_SAW	2	The submerged arc (SAW) process type. WELD_PROCESS_GMAW 3	The gas metal arc (GMAW) process type. WELD_PROCESS_FCAW	4	The flux cored arc (FCAW) process type. WELD_PROCESS_ESW	5	The electroslag (ESW) process type. WELD_PROCESS_EGW	6	The electrogas (EGW) process type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	230 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BaseWeld..::..WeldTypeEnum Enumeration 
BaseWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldTypeEnum 
Visual Basic 
Public Enumeration WeldTypeEnum 
Members 
Member name	Value	De 
WELD_TYPE_NONE	0	No we 
WELD_TYPE_EDGE_FLANGE	1	The e 
weld. 
The sq 
WELD_TYPE_SQUARE_GROOVE_SQUARE_BUTT	2 


WELD_TYPE_BEVEL_GROOVE_SINGLE_V_BUTT	3 


WELD_TYPE_BEVEL_GROOVE_SINGLE_BEVEL_BUTT	4 


WELD_TYPE_SINGLE_V_BUTT_WITH_BROAD_ROOT_FACE	5 


WELD_TYPE_SINGLE_BEVEL_BUTT_WITH_BROAD_ROOT_FACE	6 


WELD_TYPE_U_GROOVE_SINGLE_U_BUTT	7 


Members	231 


(squar 
weld. 
The b (singl weld. 
The b (singl weld. 
The si weld  root fa 
The si butt w broad 
The U (singl weld. 


Point Fields 
The J- (singl weld. 
WELD_TYPE_BEVEL_BACKING	9	The b 
weld. WELD_TYPE_FILLET	10	The fil 
WELD_TYPE_PLUG	11	The pl 
WELD_TYPE_SPOT	12	The sp 
WELD_TYPE_SEAM	13	The se 
WELD_TYPE_SLOT	14	The sl 
The flare-b weld. 
WELD_TYPE_FLARE_V_GROOVE	16	The fl 
weld. WELD_TYPE_CORNER_FLANGE	17	The co 
weld. 
The p penet 
WELD_TYPE_PARTIAL_PENETRATION_SINGLE_BEVEL_BUTT_PLUS_FILLET 18 


(singl 
+ fille 
The p penet (squar fillet)  
WELD_TYPE_MELT_THROUGH	20	The m 
weld. 
The st 
STEEP_FLANKED_BEVEL_GROOVE_SINGLE_V_BUTT	21 


bevel  single 
The st bevel  single weld. 
WELD_TYPE_EDGE	23	The e 
WELD_TYPE_ISO_SURFACING	24	The IS 
weld. WELD_TYPE_FOLD	25	The fo 
WELD_TYPE_INCLINED	26	The in 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	232 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Beam class represents a single beam in the model. A beam has a single start and end point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Beam : Part 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Beam 
Inherits Part 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point point = new Point(0, 0, 0); 
           Point point2 = new Point(1000, 0, 0); 
           Beam beam = new Beam(); 
           beam.StartPoint = point; 
           beam.EndPoint = point2; 
           beam.Profile.ProfileString = "HEA400";            beam.Finish = "PAINT"; 
           beam.StartPointOffset = new Offset(); 
           beam.EndPointOffset = new Offset(); 
bool result = false; 
           result = beam.Insert(); 
       } 
} 





Examples	233 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Part 
                Tekla.Structures.Model..::..Beam 
See Also 
Beam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	234 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Beam Members 
Beam Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Beam type exposes the following members. 
Constructors 
  	Name	Description 
Beam()()()()	Initializes a new instance of the Beam class. 
The start and end points are in the origin. Beam(Beam..::..BeamTypeEnum)	Initializes a new instance of the Beam class by 
using the defined type. 
Beam(Point, Point)	Initializes a new instance of the Beam class 
with the given start and end points. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the beam instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
GetAllReportProperties	Retrieves all properties for the 
model object in one hashtable. Type for the returned value must be checked using type casting. 

Methods	235 







GetAllUserProperties 



GetAssembly 


GetBolts 


GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Returns the assembly that the part belongs to. 
(Inherited from Part.) 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 

GetHierarchicObjects 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 

Methods	236 









GetIntegerReportProperties 



Point Fields 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 



GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Returns an enumerator of all the pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) GetStringReportProperties	Retrieves multiple string report 
properties for the model object. It is faster to fetch multiple properties at 
Methods	237 







GetStringUserProperties 


GetSurfaceObjects 


GetSurfaceTreatments 



Point Fields 
once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
Returns an enumerator of all the connected surface treatments. (Inherited from Part.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 



SetLabel 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the beam into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing beam in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a beam from the model database. The beam identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 


Methods	238 


Point Fields 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
EndPoint	Gets or sets the end point of the beam. 
EndPointOffset	Gets or sets the beam's end point offset. 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Profile	Gets or sets the profile of the part. 
(Inherited from Part.) 

Properties	239 


Point Fields 
StartPoint	Gets or sets the start point of the beam. 
StartPointOffset	Gets or sets the beam's start point offset. 
Type	Gets the read-only type of the beam. The default type for a new 
beam instance is beam. 
See Also 
Beam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	240 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Beam Constructor 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Beam()()()()	Initializes a new instance of the Beam class. 
The start and end points are in the origin. Beam(Beam..::..BeamTypeEnum)	Initializes a new instance of the Beam class by 
using the defined type. 
Beam(Point, Point)	Initializes a new instance of the Beam class 
with the given start and end points. 
See Also 
Beam Class 
Beam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	241 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam Constructor 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Beam class. The start and end points are in the origin. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Beam() 
Visual Basic 
Public Sub New 
See Also 
Beam Class 
Beam Members 
Beam Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	242 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam Constructor (Beam..::..BeamTypeEnum) 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Beam class by using the defined type. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Beam( 
Beam..::..BeamTypeEnum beamType 
) 
Visual Basic 
Public Sub New (  
beamType As Beam..::..BeamTypeEnum 
) 
Parameters 

beamType 
Type: Tekla.Structures.Model..::..Beam..::..BeamTypeEnum 
The type of the beam. 
See Also 
Beam Class 
Beam Members 
Beam Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	243 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam Constructor (Point, Point) 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Beam class with the given start and end points. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Beam( 
Point startPoint, 
Point endPoint 
) 
Visual Basic 
Public Sub New (  
startPoint As Point, 
endPoint As Point 
) 
Parameters 

startPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The start point for the beam. 

endPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The end point for the beam. 
See Also 
Beam Class 
Beam Members 
Beam Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	244 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Beam Methods 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Beam type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetAssembly 

GetBolts 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the beam instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Returns the assembly that the part belongs to. 
(Inherited from Part.) 

Methods	245 








GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for 
the model object. 

Methods	246 


Point Fields 
(Inherited from ModelObject.) GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 



GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Returns an enumerator of all the pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 



GetStringUserProperties 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
GetSurfaceTreatments	Returns an enumerator of all the 
connected surface treatments. 

Methods	247 


Point Fields 



GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 





(Inherited from Part.) 
Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the beam into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing beam in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a beam from the model database. The beam identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, String)	Sets a string property for the model 
object. 

Methods	248 


Point Fields 
(Inherited from ModelObject.) 
See Also 
Beam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	249 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..Delete Method 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the beam instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	250 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..Insert Method 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the beam into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	251 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..Modify Method 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing beam in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	252 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..Select Method 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a beam from the model database. The beam identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	253 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Beam Properties 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Beam type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
EndPoint	Gets or sets the end point of the beam. 
EndPointOffset	Gets or sets the beam's end point offset. 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Properties	254 


Point Fields 
Profile	Gets or sets the profile of the part. 
(Inherited from Part.) 
StartPoint	Gets or sets the start point of the beam. 
StartPointOffset	Gets or sets the beam's start point offset. 
Type	Gets the read-only type of the beam. The default type for a new 
beam instance is beam. 
See Also 
Beam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	255 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..EndPoint Property 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the end point of the beam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; set; } 
Visual Basic 
Public Property EndPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	256 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..EndPointOffset Property 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the beam's end point offset. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset EndPointOffset { get; set; } 
Visual Basic 
Public Property EndPointOffset As Offset 
Get 
Set 
Property Value 
Type: Offset 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	257 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..StartPoint Property 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the start point of the beam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; set; } 
Visual Basic 
Public Property StartPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	258 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..StartPointOffset Property 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the beam's start point offset. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset StartPointOffset { get; set; } 
Visual Basic 
Public Property StartPointOffset As Offset 
Get 
Set 
Property Value 
Type: Offset 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	259 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..Type Property 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the read-only type of the beam. The default type for a new beam instance is beam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Beam..::..BeamTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As Beam..::..BeamTypeEnum 
Get 
Property Value 

Type: Beam..::..BeamTypeEnum 
See Also 
Beam Class 
Beam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	260 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Beam..::..BeamTypeEnum Enumeration 
Beam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The beam types. The strip and pad footings are valid only if the material type of the beam is concrete. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum BeamTypeEnum 
Visual Basic 
Public Enumeration BeamTypeEnum 
Members 
Member name	Value		Description 
BEAM	0	The beam. 
PANEL	1	The panel. 
STRIP_FOOTING 2	The concrete strip footing. 
PAD_FOOTING	3	The concrete pad footing. 
COLUMN	4	The column. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	261 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltArray class defines a bolt group with an array shape. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class BoltArray : BoltGroup 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class BoltArray 
Inherits BoltGroup 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPlate cp = new ContourPlate(); 
           cp.AddContourPoint(new ContourPoint(new Point( 3000,  6000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 6000,  6000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 6000, 12000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 3000, 12000, 0),null)); 
if (!cp.Insert()) 
               Console.WriteLine("ContourPlate Insert failed!"); 
           BoltArray B = new BoltArray(); 
           B.PartToBeBolted = cp; 
           B.PartToBoltTo   = cp; 
           B.FirstPosition  = new Point(3000,  6000, 0);            B.SecondPosition = new Point(6000, 12000, 0); 
           B.BoltSize     = 16; 

Examples	262 


Point Fields 
           B.Tolerance    = 3.00; 
           B.BoltStandard = "NELSON"; 
           B.BoltType     = BoltGroup.BoltTypeEnum.BOLT_TYPE_WORKSHOP;            B.CutLength    = 105; 
           B.Length       = 100; 
           B.ExtraLength  = 15; 
           B.ThreadInMaterial = BoltGroup.BoltThreadInMaterialEnum.THREAD_IN_MATERIAL_NO; 
           B.Position.Depth          = Position.DepthEnum.MIDDLE; 
           B.Position.Plane          = Position.PlaneEnum.MIDDLE; 
           B.Position.Rotation       = Position.RotationEnum.FRONT; 
           B.Bolt    = true; 
           B.Washer1 = true; 
           B.Washer2 = true; 
           B.Washer3 = true; 
           B.Nut1    = true; 
           B.Nut2    = true; 
           B.Hole1   = true; 
           B.Hole2   = true; 
           B.Hole3   = true; 
           B.Hole4   = true; 
           B.Hole5   = true; 
           B.AddBoltDistX(100); 
           B.AddBoltDistX(90); 
           B.AddBoltDistX(80); 
           B.AddBoltDistY(70); 
           B.AddBoltDistY(60); 
           B.AddBoltDistY(50); 
if (!B.Insert()) 
               Console.WriteLine("BoltArray Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BoltGroup 
                Tekla.Structures.Model..::..BoltArray 
See Also 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	263 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray Members 
BoltArray Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltArray type exposes the following members. 
Constructors 
  	Name	Description 
BoltArray Creates a new bolt array instance. 
Methods 
  	Name	Description 
AddBoltDistX	Adds an X distance to the bolt array. 
AddBoltDistY	Adds a Y distance to the bolt array. 
Adds the given part to the list of the other parts that should be bolted. 
(Inherited from BoltGroup.) 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the bolt array instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetBoltDistX	Returns the X distance defined by the argument. GetBoltDistXCount	Returns the amount of X distances in the bolt array. 

Methods	264 


Point Fields 
GetBoltDistY	Returns the Y distance defined by the argument. GetBoltDistYCount	Returns the amount of Y distances in the bolt array. 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetOtherPartsToBolt 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns an array list containing all the other parts that are bolted. 
(Inherited from BoltGroup.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 


Methods	265 





GetSolid()()()() 


GetSolid(Boolean) 



Point Fields 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the bolt array into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing bolt array in the model database to match the current one. 

Modify 


Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 
(Overrides ModelObject..::..Modify()()()().) RemoveBoltDistX	Removes an X distance from the bolt array in the 
index position. 
RemoveBoltDistY	Removes a Y distance from the bolt array in the 
index position. 
Removes the given part from the list of the other 
RemoveOtherPartToBolt 


bolted parts. 
(Inherited from BoltGroup.) 
Selects a bolt array from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetBoltDistX	Sets the X distance at the index defined by the 
argument. 
SetBoltDistY	Sets the Y distance at the index defined by the 
argument. 
Sets a dynamic string property for the model 
SetDynamicStringProperty 

SetLabel 


object. 
(Inherited from ModelObject.) 

Methods	266 


Point Fields 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
(Inherited from BoltGroup.) 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
(Inherited from BoltGroup.) 
BoltSize	The size of the bolts in the group. 
(Inherited from BoltGroup.) 
BoltStandard	The standard of the bolt group. 
(Inherited from BoltGroup.) 
BoltType	The type of the bolt group. 
(Inherited from BoltGroup.) 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). (Inherited from BoltGroup.) 
CutLength	The cut length. 
(Inherited from BoltGroup.) 
EndPointOffset	The end point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ExtraLength	The extra length for the bolts. 
(Inherited from BoltGroup.) 
FirstPosition	The first position point. 
(Inherited from BoltGroup.) 
Hole1	Indicates whether the hole 1 is used. 
(Inherited from BoltGroup.) 
Hole2	Indicates whether the hole 2 is used. 
(Inherited from BoltGroup.) 
Hole3	Indicates whether the hole 3 is used. 
Properties	267 


Point Fields 
(Inherited from BoltGroup.) 
Hole4	Indicates whether the hole 4 is used. 
(Inherited from BoltGroup.) 
Hole5	Indicates whether the hole 5 is used. 
(Inherited from BoltGroup.) 
HoleType	The hole type: oversized or slotted. 
(Inherited from BoltGroup.) Identifier	The identifier of the object. 
(Inherited from Object.) 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
(Inherited from BoltGroup.) 
Nut1	Indicates whether the nut 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Nut2	Indicates whether the nut 2 is used in the assembly. 
(Inherited from BoltGroup.) 
OtherPartsToBolt	The other parts to be bolted (read-only). 
(Inherited from BoltGroup.) 
PartToBeBolted	The part to be bolted. 
(Inherited from BoltGroup.) 
PartToBoltTo	The part to bolt to. 
(Inherited from BoltGroup.) 
Position	The position attributes. 
(Inherited from BoltGroup.) 
RotateSlots	The rotation of the slots: odd, even or parallel. 
(Inherited from BoltGroup.) 
SecondPosition	The second position point. 
(Inherited from BoltGroup.) 
SlottedHoleX	The X allowance of the slotted hole. 
(Inherited from BoltGroup.) 
SlottedHoleY	The Y allowance of the slotted hole. 
(Inherited from BoltGroup.) 
StartPointOffset	The start point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ThreadInMaterial	Whether the thread goes inside the materal or not. 
(Inherited from BoltGroup.) 
Tolerance	The hole tolerance. 
(Inherited from BoltGroup.) 
Washer1	Indicates whether the washer 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer2	Indicates whether the washer 2 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer3	Indicates whether the washer 3 is used in the assembly. 
(Inherited from BoltGroup.) 
Properties	268 


Point Fields 

See Also 
BoltArray Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	269 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray Constructor 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new bolt array instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltArray() 
Visual Basic 
Public Sub New 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	270 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray Methods 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltArray type exposes the following members. 
Methods 
  	Name	Description 
AddBoltDistX	Adds an X distance to the bolt array. 
AddBoltDistY	Adds a Y distance to the bolt array. 
Adds the given part to the list of the other parts that should be bolted. 
(Inherited from BoltGroup.) 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the bolt array instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetBoltDistX	Returns the X distance defined by the argument. GetBoltDistXCount	Returns the amount of X distances in the bolt array. GetBoltDistY	Returns the Y distance defined by the argument. GetBoltDistYCount	Returns the amount of Y distances in the bolt array. 
Returns an enumerator of all the children model 
GetChildren 


objects. 
(Inherited from ModelObject.) 

Methods	271 





GetCoordinateSystem 



Point Fields 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetOtherPartsToBolt 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 

GetSolid()()()() 


GetSolid(Boolean) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns an array list containing all the other parts that are bolted. 
(Inherited from BoltGroup.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 

Methods	272 


Point Fields 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the bolt array into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing bolt array in the model database to match the current one. 

Modify 


Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 
(Overrides ModelObject..::..Modify()()()().) RemoveBoltDistX	Removes an X distance from the bolt array in the 
index position. 
RemoveBoltDistY	Removes a Y distance from the bolt array in the 
index position. 
Removes the given part from the list of the other 
RemoveOtherPartToBolt 


bolted parts. 
(Inherited from BoltGroup.) 
Selects a bolt array from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetBoltDistX	Sets the X distance at the index defined by the 
argument. 
SetBoltDistY	Sets the Y distance at the index defined by the 
argument. 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model object. 

Methods	273 




SetUserProperty(String, Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 



Point Fields 
(Inherited from ModelObject.) 

Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
BoltArray Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	274 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..AddBoltDistX Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds an X distance to the bolt array. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddBoltDistX( 
double DistX 
) 
Visual Basic 
Public Function AddBoltDistX (  
DistX As Double 
) As Boolean 
Parameters 

DistX 
Type: System..::..Double 
The X distance to be added. 

Return Value 

Type: Boolean 
True if the distance was added. Throws an OverflowException if there was no more space for the distance. 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	275 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..AddBoltDistY Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a Y distance to the bolt array. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddBoltDistY( 
double DistY 
) 
Visual Basic 
Public Function AddBoltDistY (  
DistY As Double 
) As Boolean 
Parameters 

DistY 
Type: System..::..Double 
The Y distance to be added. 

Return Value 

Type: Boolean 
True if the distance was added. Throws an OverflowException if there was no more space for the distance. 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	276 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..Delete Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the bolt array instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	277 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..GetBoltDistX Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the X distance defined by the argument. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double GetBoltDistX( 
int Index 
) 
Visual Basic 
Public Function GetBoltDistX (  
Index As Integer 
) As Double 
Parameters 

Index 
Type: System..::..Int32 
The index to the distance list. 

Return Value 

Type: Double 
The distance defined by the argument. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	278 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltArray..::..GetBoltDistXCount Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the amount of X distances in the bolt array. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int GetBoltDistXCount() Visual Basic 
Public Function GetBoltDistXCount As Integer 
Return Value 

Type: Int32 
The amount of X distances. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	279 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..GetBoltDistY Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the Y distance defined by the argument. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double GetBoltDistY( 
int Index 
) 
Visual Basic 
Public Function GetBoltDistY (  
Index As Integer 
) As Double 
Parameters 

Index 
Type: System..::..Int32 
The index to the distance list. 

Return Value 

Type: Double 
The distance defined by the argument. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	280 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltArray..::..GetBoltDistYCount Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the amount of Y distances in the bolt array. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int GetBoltDistYCount() Visual Basic 
Public Function GetBoltDistYCount As Integer 
Return Value 

Type: Int32 
The amount of Y distances. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	281 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..Insert Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the bolt array into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	282 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..Modify Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the existing bolt array in the model database to match the current one. 

Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	283 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..RemoveBoltDistX Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Removes an X distance from the bolt array in the index position. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveBoltDistX( 
int Index 
) 
Visual Basic 
Public Function RemoveBoltDistX (  
Index As Integer 
) As Boolean 
Parameters 

Index 
Type: System..::..Int32 
The position to remove from. 

Return Value 

Type: Boolean 
True if the distance was removed. False if the index is out of range. 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	284 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..RemoveBoltDistY Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Removes a Y distance from the bolt array in the index position. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveBoltDistY( 
int Index 
) 
Visual Basic 
Public Function RemoveBoltDistY (  
Index As Integer 
) As Boolean 
Parameters 

Index 
Type: System..::..Int32 
The position to remove from. 

Return Value 

Type: Boolean 
True if the distance was removed. False if the index is out of range. 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	285 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..Select Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a bolt array from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltArray Class 
BoltArray Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	286 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..SetBoltDistX Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the X distance at the index defined by the argument. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetBoltDistX( 
int Index, 
double DistX 
) 
Visual Basic 
Public Function SetBoltDistX (  
Index As Integer, 
DistX As Double 
) As Boolean 
Parameters 

Index 
Type: System..::..Int32 
The index to the distance list. 

DistX 
Type: System..::..Double The X distance to be used. 

Return Value 

Type: Boolean 
True if the distance was modified. False if the index is out of range. 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	287 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray..::..SetBoltDistY Method 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the Y distance at the index defined by the argument. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetBoltDistY( 
int Index, 
double DistY 
) 
Visual Basic 
Public Function SetBoltDistY (  
Index As Integer, 
DistY As Double 
) As Boolean 
Parameters 

Index 
Type: System..::..Int32 
The index to the distance list. 

DistY 
Type: System..::..Double The Y distance to be used. 

Return Value 

Type: Boolean 
True if the distance was modified. False if the index is out of range. 
See Also 
BoltArray Class 
BoltArray Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	288 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltArray Properties 
BoltArray Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltArray type exposes the following members. 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
(Inherited from BoltGroup.) 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
(Inherited from BoltGroup.) 
BoltSize	The size of the bolts in the group. 
(Inherited from BoltGroup.) 
BoltStandard	The standard of the bolt group. 
(Inherited from BoltGroup.) 
BoltType	The type of the bolt group. 
(Inherited from BoltGroup.) 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). (Inherited from BoltGroup.) 
CutLength	The cut length. 
(Inherited from BoltGroup.) 
EndPointOffset	The end point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ExtraLength	The extra length for the bolts. 
(Inherited from BoltGroup.) 
FirstPosition	The first position point. 
(Inherited from BoltGroup.) 
Hole1	Indicates whether the hole 1 is used. 
(Inherited from BoltGroup.) 
Hole2	Indicates whether the hole 2 is used. 
Properties	289 


Point Fields 
(Inherited from BoltGroup.) 
Hole3	Indicates whether the hole 3 is used. 
(Inherited from BoltGroup.) 
Hole4	Indicates whether the hole 4 is used. 
(Inherited from BoltGroup.) 
Hole5	Indicates whether the hole 5 is used. 
(Inherited from BoltGroup.) 
HoleType	The hole type: oversized or slotted. 
(Inherited from BoltGroup.) Identifier	The identifier of the object. 
(Inherited from Object.) 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
(Inherited from BoltGroup.) 
Nut1	Indicates whether the nut 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Nut2	Indicates whether the nut 2 is used in the assembly. 
(Inherited from BoltGroup.) 
OtherPartsToBolt	The other parts to be bolted (read-only). 
(Inherited from BoltGroup.) 
PartToBeBolted	The part to be bolted. 
(Inherited from BoltGroup.) 
PartToBoltTo	The part to bolt to. 
(Inherited from BoltGroup.) 
Position	The position attributes. 
(Inherited from BoltGroup.) 
RotateSlots	The rotation of the slots: odd, even or parallel. 
(Inherited from BoltGroup.) 
SecondPosition	The second position point. 
(Inherited from BoltGroup.) 
SlottedHoleX	The X allowance of the slotted hole. 
(Inherited from BoltGroup.) 
SlottedHoleY	The Y allowance of the slotted hole. 
(Inherited from BoltGroup.) 
StartPointOffset	The start point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ThreadInMaterial	Whether the thread goes inside the materal or not. 
(Inherited from BoltGroup.) 
Tolerance	The hole tolerance. 
(Inherited from BoltGroup.) 
Washer1	Indicates whether the washer 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer2	Indicates whether the washer 2 is used in the assembly. 
(Inherited from BoltGroup.) 
Properties	290 


Point Fields 
Washer3	Indicates whether the washer 3 is used in the assembly. 
(Inherited from BoltGroup.) 
See Also 
BoltArray Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	291 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltCircle class defines a bolt group with a circle shape. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class BoltCircle : BoltGroup 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class BoltCircle 
Inherits BoltGroup 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPlate cp = new ContourPlate(); 
           cp.AddContourPoint(new ContourPoint(new Point( 9000,  6000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point(12000,  6000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point(12000, 12000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 9000, 12000, 0),null)); 
if (!cp.Insert()) 
               Console.WriteLine("ContourPlate Insert failed!"); 
           BoltCircle B = new BoltCircle(); 
           B.PartToBeBolted = cp; 
           B.PartToBoltTo   = cp; 
           B.FirstPosition  = new Point( 9000,  6000, 0);            B.SecondPosition = new Point(12000, 12000, 0); 
           B.BoltSize     = 16; 

Examples	292 


Point Fields 
           B.Tolerance    = 3.00; 
           B.BoltStandard = "7968"; 
           B.BoltType     = BoltGroup.BoltTypeEnum.BOLT_TYPE_WORKSHOP;            B.CutLength    = 105; 
           B.Length       = 100; 
           B.ExtraLength  = 15; 
           B.ThreadInMaterial = BoltGroup.BoltThreadInMaterialEnum.THREAD_IN_MATERIAL_NO; 
           B.Position.Depth          = Position.DepthEnum.MIDDLE; 
           B.Position.Plane          = Position.PlaneEnum.MIDDLE; 
           B.Position.Rotation       = Position.RotationEnum.FRONT; 
           B.Bolt    = true; 
           B.Washer1 = true; 
           B.Washer2 = true; 
           B.Washer3 = true; 
           B.Nut1    = true; 
           B.Nut2    = true; 
           B.Hole1   = true; 
           B.Hole2   = true; 
           B.Hole3   = true; 
           B.Hole4   = true; 
           B.Hole5   = true; 
           B.NumberOfBolts = 7; 
           B.Diameter      = 160; 
if (!B.Insert()) 
               Console.WriteLine("BoltCircle Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BoltGroup 
                Tekla.Structures.Model..::..BoltCircle 
See Also 
BoltCircle Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	293 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle Members 
BoltCircle Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltCircle type exposes the following members. 
Constructors 
  	Name	Description 
BoltCircle Creates a new bolt circle instance. 
Methods 
  	Name	Description 
Adds the given part to the list of the other parts that should be bolted. 
(Inherited from BoltGroup.) 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the bolt circle instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
GetCoordinateSystem	Returns the coordinate system for the given model 
object. 

Methods	294 


Point Fields 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetOtherPartsToBolt 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 

GetSolid()()()() 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns an array list containing all the other parts that are bolted. 
(Inherited from BoltGroup.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
GetStringReportProperties	Retrieves multiple string report properties for the 
model object. It is faster to fetch multiple 

Methods	295 


Point Fields 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




Modify 




RemoveOtherPartToBolt 


Select 


SetDynamicStringProperty 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the bolt circle into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing bolt circle in the model database to match the current one. 
Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

(Overrides ModelObject..::..Modify()()()().) 
Removes the given part from the list of the other bolted parts. 
(Inherited from BoltGroup.) 
Selects a bolt circle from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 


Properties	296 


Point Fields 
Bolt	Indicates whether the instance is a bolt or just a hole. 
(Inherited from BoltGroup.) 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
(Inherited from BoltGroup.) 
BoltSize	The size of the bolts in the group. 
(Inherited from BoltGroup.) 
BoltStandard	The standard of the bolt group. 
(Inherited from BoltGroup.) 
BoltType	The type of the bolt group. 
(Inherited from BoltGroup.) 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). (Inherited from BoltGroup.) 
CutLength	The cut length. 
(Inherited from BoltGroup.) 
Diameter	The diameter of the circle. 
EndPointOffset	The end point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ExtraLength	The extra length for the bolts. 
(Inherited from BoltGroup.) 
FirstPosition	The first position point. 
(Inherited from BoltGroup.) 
Hole1	Indicates whether the hole 1 is used. 
(Inherited from BoltGroup.) 
Hole2	Indicates whether the hole 2 is used. 
(Inherited from BoltGroup.) 
Hole3	Indicates whether the hole 3 is used. 
(Inherited from BoltGroup.) 
Hole4	Indicates whether the hole 4 is used. 
(Inherited from BoltGroup.) 
Hole5	Indicates whether the hole 5 is used. 
(Inherited from BoltGroup.) 
HoleType	The hole type: oversized or slotted. 
(Inherited from BoltGroup.) Identifier	The identifier of the object. 
(Inherited from Object.) 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
(Inherited from BoltGroup.) 
NumberOfBolts	The number of bolts in the circle. 
Nut1	Indicates whether the nut 1 is used in the assembly. 
Properties	297 


Point Fields 
(Inherited from BoltGroup.) 
Nut2	Indicates whether the nut 2 is used in the assembly. 
(Inherited from BoltGroup.) 
OtherPartsToBolt	The other parts to be bolted (read-only). 
(Inherited from BoltGroup.) 
PartToBeBolted	The part to be bolted. 
(Inherited from BoltGroup.) 
PartToBoltTo	The part to bolt to. 
(Inherited from BoltGroup.) 
Position	The position attributes. 
(Inherited from BoltGroup.) 
RotateSlots	The rotation of the slots: odd, even or parallel. 
(Inherited from BoltGroup.) 
SecondPosition	The second position point. 
(Inherited from BoltGroup.) 
SlottedHoleX	The X allowance of the slotted hole. 
(Inherited from BoltGroup.) 
SlottedHoleY	The Y allowance of the slotted hole. 
(Inherited from BoltGroup.) 
StartPointOffset	The start point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ThreadInMaterial	Whether the thread goes inside the materal or not. 
(Inherited from BoltGroup.) 
Tolerance	The hole tolerance. 
(Inherited from BoltGroup.) 
Washer1	Indicates whether the washer 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer2	Indicates whether the washer 2 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer3	Indicates whether the washer 3 is used in the assembly. 
(Inherited from BoltGroup.) 
See Also 
BoltCircle Class 
Tekla.Structures.Model Namespace 
Copyright  © Tekla 2013. All rights reserved. 







See Also	298 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle Constructor 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new bolt circle instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltCircle() 
Visual Basic 
Public Sub New 
See Also 
BoltCircle Class 
BoltCircle Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	299 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle Methods 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltCircle type exposes the following members. 
Methods 
  	Name	Description 
Adds the given part to the list of the other parts that should be bolted. 
(Inherited from BoltGroup.) 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the bolt circle instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	300 


Point Fields 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetOtherPartsToBolt 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 

GetSolid()()()() 


GetSolid(Boolean) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns an array list containing all the other parts that are bolted. 
(Inherited from BoltGroup.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. 

Methods	301 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




Modify 




RemoveOtherPartToBolt 


Select 


SetDynamicStringProperty 



Point Fields 
(Inherited from ModelObject.) 

Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the bolt circle into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing bolt circle in the model database to match the current one. 
Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

(Overrides ModelObject..::..Modify()()()().) 
Removes the given part from the list of the other bolted parts. 
(Inherited from BoltGroup.) 
Selects a bolt circle from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
BoltCircle Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	302 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle..::..Delete Method 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the bolt circle instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltCircle Class 
BoltCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	303 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle..::..Insert Method 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the bolt circle into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltCircle Class 
BoltCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	304 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle..::..Modify Method 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the existing bolt circle in the model database to match the current one. 

Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltCircle Class 
BoltCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	305 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle..::..Select Method 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a bolt circle from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltCircle Class 
BoltCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	306 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle Properties 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltCircle type exposes the following members. 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
(Inherited from BoltGroup.) 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
(Inherited from BoltGroup.) 
BoltSize	The size of the bolts in the group. 
(Inherited from BoltGroup.) 
BoltStandard	The standard of the bolt group. 
(Inherited from BoltGroup.) 
BoltType	The type of the bolt group. 
(Inherited from BoltGroup.) 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). (Inherited from BoltGroup.) 
CutLength	The cut length. 
(Inherited from BoltGroup.) 
Diameter	The diameter of the circle. 
EndPointOffset	The end point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ExtraLength	The extra length for the bolts. 
(Inherited from BoltGroup.) 
FirstPosition	The first position point. 
(Inherited from BoltGroup.) 
Hole1	Indicates whether the hole 1 is used. 
(Inherited from BoltGroup.) 
Properties	307 


Point Fields 
Hole2	Indicates whether the hole 2 is used. 
(Inherited from BoltGroup.) 
Hole3	Indicates whether the hole 3 is used. 
(Inherited from BoltGroup.) 
Hole4	Indicates whether the hole 4 is used. 
(Inherited from BoltGroup.) 
Hole5	Indicates whether the hole 5 is used. 
(Inherited from BoltGroup.) 
HoleType	The hole type: oversized or slotted. 
(Inherited from BoltGroup.) Identifier	The identifier of the object. 
(Inherited from Object.) 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
(Inherited from BoltGroup.) 
NumberOfBolts	The number of bolts in the circle. 
Nut1	Indicates whether the nut 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Nut2	Indicates whether the nut 2 is used in the assembly. 
(Inherited from BoltGroup.) 
OtherPartsToBolt	The other parts to be bolted (read-only). 
(Inherited from BoltGroup.) 
PartToBeBolted	The part to be bolted. 
(Inherited from BoltGroup.) 
PartToBoltTo	The part to bolt to. 
(Inherited from BoltGroup.) 
Position	The position attributes. 
(Inherited from BoltGroup.) 
RotateSlots	The rotation of the slots: odd, even or parallel. 
(Inherited from BoltGroup.) 
SecondPosition	The second position point. 
(Inherited from BoltGroup.) 
SlottedHoleX	The X allowance of the slotted hole. 
(Inherited from BoltGroup.) 
SlottedHoleY	The Y allowance of the slotted hole. 
(Inherited from BoltGroup.) 
StartPointOffset	The start point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ThreadInMaterial	Whether the thread goes inside the materal or not. 
(Inherited from BoltGroup.) 
Tolerance	The hole tolerance. 
(Inherited from BoltGroup.) 
Washer1	Indicates whether the washer 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Properties	308 


Point Fields 
Washer2	Indicates whether the washer 2 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer3	Indicates whether the washer 3 is used in the assembly. 
(Inherited from BoltGroup.) 
See Also 
BoltCircle Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	309 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle..::..Diameter Property 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The diameter of the circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Diameter { get; set; } 
Visual Basic 
Public Property Diameter As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltCircle Class 
BoltCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	310 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltCircle..::..NumberOfBolts Property 
BoltCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The number of bolts in the circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double NumberOfBolts { get; set; } 
Visual Basic 
Public Property NumberOfBolts As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltCircle Class 
BoltCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	311 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The BoltGroup class is an abstract base class for all bolt shapes, such as array, circle and XY list. See the Tekla Structures help file for further information about the attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class BoltGroup : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class BoltGroup 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BoltGroup 
                Tekla.Structures.Model..::..BoltArray 
                Tekla.Structures.Model..::..BoltCircle 
                Tekla.Structures.Model..::..BoltXYList 
See Also 
BoltGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	312 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup Members 
BoltGroup Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltGroup type exposes the following members. 
Constructors 
  	Name	Description 
BoltGroup Creates a new bolt group instance with the given shape. Methods 
  	Name	Description 
AddOtherPartToBolt	Adds the given part to the list of the other parts 
that should be bolted. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 


Methods	313 





GetDoubleReportProperties 


GetDoubleUserProperties 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetOtherPartsToBolt	Returns an array list containing all the other parts 
that are bolted. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid()()()()	Method for getting the solid information of the bolt 
group. 
GetSolid(Boolean)	Method for getting the solid information of the bolt 
group. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 

Methods	314 





GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 



Point Fields 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
RemoveOtherPartToBolt	Removes the given part from the list of the other 
bolted parts. 
Selects the model object instance from the model 
Select 


SetDynamicStringProperty 


database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
BoltSize	The size of the bolts in the group. 
BoltStandard	The standard of the bolt group. 


Properties	315 


Point Fields 
BoltType	The type of the bolt group. 
ConnectAssemblies Defines whether to connect a part or an assembly as a 
secondary part (false) or as a sub-assembly (true). CutLength	The cut length. 
EndPointOffset	The end point offset values of the bolt group. 
ExtraLength	The extra length for the bolts. 
FirstPosition	The first position point. 
Hole1	Indicates whether the hole 1 is used. 
Hole2	Indicates whether the hole 2 is used. 
Hole3	Indicates whether the hole 3 is used. 
Hole4	Indicates whether the hole 4 is used. 
Hole5	Indicates whether the hole 5 is used. 
HoleType	The hole type: oversized or slotted. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Length	The length. An extra variable that is only set when the bolt 
group is made of studs instead of bolts. 
Nut1	Indicates whether the nut 1 is used in the assembly. 
Nut2	Indicates whether the nut 2 is used in the assembly. OtherPartsToBolt	The other parts to be bolted (read-only). 
PartToBeBolted	The part to be bolted. 
PartToBoltTo	The part to bolt to. 
Position	The position attributes. 
RotateSlots	The rotation of the slots: odd, even or parallel. SecondPosition	The second position point. 
SlottedHoleX	The X allowance of the slotted hole. 
SlottedHoleY	The Y allowance of the slotted hole. 
StartPointOffset	The start point offset values of the bolt group. ThreadInMaterial	Whether the thread goes inside the materal or not. Tolerance	The hole tolerance. 
Washer1	Indicates whether the washer 1 is used in the assembly. Washer2	Indicates whether the washer 2 is used in the assembly. Washer3	Indicates whether the washer 3 is used in the assembly. 
See Also 
BoltGroup Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	316 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup Constructor 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new bolt group instance with the given shape. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltGroup() 
Visual Basic 
Public Sub New 
See Also 
BoltGroup Class 
BoltGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	317 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup Methods 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltGroup type exposes the following members. 
Methods 
  	Name	Description 
AddOtherPartToBolt	Adds the given part to the list of the other parts 
that should be bolted. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model 
object. 

Methods	318 


Point Fields 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetOtherPartsToBolt	Returns an array list containing all the other parts 
that are bolted. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid()()()()	Method for getting the solid information of the bolt 
group. 
GetSolid(Boolean)	Method for getting the solid information of the bolt 
group. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 

Methods	319 




GetUserProperty(String, String%) 

Insert 



Point Fields 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
RemoveOtherPartToBolt	Removes the given part from the list of the other 
bolted parts. 
Selects the model object instance from the model 
Select 


SetDynamicStringProperty 


database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
BoltGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	320 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..AddOtherPartToBolt Method 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Adds the given part to the list of the other parts that should be bolted. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddOtherPartToBolt( 
Part M 
) 
Visual Basic 
Public Function AddOtherPartToBolt (  
M As Part 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..Part The part to add. 

Return Value 
Type: Boolean 
True on success. 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	321 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..GetOtherPartsToBolt Method 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an array list containing all the other parts that are bolted. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetOtherPartsToBolt() 
Visual Basic 
Public Function GetOtherPartsToBolt As ArrayList 
Return Value 

Type: ArrayList 
An array list of parts containing all the other parts that are bolted. 
See Also 
BoltGroup Class 
BoltGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	322 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..GetSolid Method 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetSolid()()()()	Method for getting the solid information of the bolt group. GetSolid(Boolean) Method for getting the solid information of the bolt group. 
See Also 
BoltGroup Class 
BoltGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	323 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..GetSolid Method 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Method for getting the solid information of the bolt group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid() 
Visual Basic 
Public Function GetSolid As Solid 
Return Value 

Type: Solid 
The solid instance of the bolt group. 
See Also 
BoltGroup Class 
BoltGroup Members 
GetSolid Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	324 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..GetSolid Method (Boolean) 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Method for getting the solid information of the bolt group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid( 
bool withHighAccuracy 
) 
Visual Basic 
Public Function GetSolid (  
withHighAccuracy As Boolean 
) As Solid 
Parameters 

withHighAccuracy 
Type: System..::..Boolean 
Boolean value which defines if the solid is created with high accuracy 

Return Value 

Type: Solid 
The solid instance of the bolt group. 
See Also 
BoltGroup Class 
BoltGroup Members 
GetSolid Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	325 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..RemoveOtherPartToBolt Method 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Removes the given part from the list of the other bolted parts. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveOtherPartToBolt( 
Part M 
) 
Visual Basic 
Public Function RemoveOtherPartToBolt (  
M As Part 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..Part The part to remove. 

Return Value 
Type: Boolean 
True on success. 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	326 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup Properties 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltGroup type exposes the following members. 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
BoltSize	The size of the bolts in the group. 
BoltStandard	The standard of the bolt group. 
BoltType	The type of the bolt group. 
ConnectAssemblies Defines whether to connect a part or an assembly as a 
secondary part (false) or as a sub-assembly (true). 
CutLength	The cut length. 
EndPointOffset	The end point offset values of the bolt group. 
ExtraLength	The extra length for the bolts. 
FirstPosition	The first position point. 
Hole1	Indicates whether the hole 1 is used. 
Hole2	Indicates whether the hole 2 is used. 
Hole3	Indicates whether the hole 3 is used. 
Hole4	Indicates whether the hole 4 is used. 
Hole5	Indicates whether the hole 5 is used. 
HoleType	The hole type: oversized or slotted. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Length	The length. An extra variable that is only set when the bolt 
group is made of studs instead of bolts. 
Nut1	Indicates whether the nut 1 is used in the assembly. 
Properties	327 


Point Fields 
Nut2	Indicates whether the nut 2 is used in the assembly. OtherPartsToBolt	The other parts to be bolted (read-only). 
PartToBeBolted	The part to be bolted. 
PartToBoltTo	The part to bolt to. 
Position	The position attributes. 
RotateSlots	The rotation of the slots: odd, even or parallel. SecondPosition	The second position point. 
SlottedHoleX	The X allowance of the slotted hole. 
SlottedHoleY	The Y allowance of the slotted hole. 
StartPointOffset	The start point offset values of the bolt group. ThreadInMaterial	Whether the thread goes inside the materal or not. Tolerance	The hole tolerance. 
Washer1	Indicates whether the washer 1 is used in the assembly. Washer2	Indicates whether the washer 2 is used in the assembly. Washer3	Indicates whether the washer 3 is used in the assembly. 
See Also 
BoltGroup Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
























See Also	328 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Bolt Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the instance is a bolt or just a hole. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Bolt { get; set; } 
Visual Basic 
Public Property Bolt As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	329 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..BoltPositions Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList BoltPositions { get; } 
Visual Basic 
Public ReadOnly Property BoltPositions As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	330 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..BoltSize Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The size of the bolts in the group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double BoltSize { get; set; } 
Visual Basic 
Public Property BoltSize As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	331 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..BoltStandard Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The standard of the bolt group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string BoltStandard { get; set; } 
Visual Basic 
Public Property BoltStandard As String 
Get 
Set 
Property Value 
Type: String 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	332 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..BoltType Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the bolt group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltGroup..::..BoltTypeEnum BoltType { get; set; } 
Visual Basic 
Public Property BoltType As BoltGroup..::..BoltTypeEnum 
Get 
Set 
Property Value 

Type: BoltGroup..::..BoltTypeEnum 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	333 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..ConnectAssemblies Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool ConnectAssemblies { get; set; } 
Visual Basic 
Public Property ConnectAssemblies As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	334 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..CutLength Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The cut length. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double CutLength { get; set; } 
Visual Basic 
Public Property CutLength As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	335 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..EndPointOffset Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The end point offset values of the bolt group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset EndPointOffset { get; set; } 
Visual Basic 
Public Property EndPointOffset As Offset 
Get 
Set 
Property Value 
Type: Offset 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	336 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..ExtraLength Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extra length for the bolts. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtraLength { get; set; } 
Visual Basic 
Public Property ExtraLength As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	337 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..FirstPosition Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The first position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point FirstPosition { get; set; } 
Visual Basic 
Public Property FirstPosition As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	338 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Hole1 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the hole 1 is used. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Hole1 { get; set; } 
Visual Basic 
Public Property Hole1 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	339 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Hole2 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the hole 2 is used. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Hole2 { get; set; } 
Visual Basic 
Public Property Hole2 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	340 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Hole3 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the hole 3 is used. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Hole3 { get; set; } 
Visual Basic 
Public Property Hole3 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	341 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Hole4 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the hole 4 is used. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Hole4 { get; set; } 
Visual Basic 
Public Property Hole4 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	342 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Hole5 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the hole 5 is used. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Hole5 { get; set; } 
Visual Basic 
Public Property Hole5 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	343 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..HoleType Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hole type: oversized or slotted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltGroup..::..BoltHoleTypeEnum HoleType { get; set; } 
Visual Basic 
Public Property HoleType As BoltGroup..::..BoltHoleTypeEnum 
Get 
Set 
Property Value 

Type: BoltGroup..::..BoltHoleTypeEnum 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	344 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Length Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Length { get; set; } 
Visual Basic 
Public Property Length As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	345 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Nut1 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the nut 1 is used in the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Nut1 { get; set; } 
Visual Basic 
Public Property Nut1 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	346 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Nut2 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the nut 2 is used in the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Nut2 { get; set; } 
Visual Basic 
Public Property Nut2 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	347 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..OtherPartsToBolt Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The other parts to be bolted (read-only). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList OtherPartsToBolt { get; } 
Visual Basic 
Public ReadOnly Property OtherPartsToBolt As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	348 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..PartToBeBolted Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The part to be bolted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Part PartToBeBolted { get; set; } 
Visual Basic 
Public Property PartToBeBolted As Part 
Get 
Set 
Property Value 
Type: Part 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	349 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..PartToBoltTo Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The part to bolt to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Part PartToBoltTo { get; set; } 
Visual Basic 
Public Property PartToBoltTo As Part 
Get 
Set 
Property Value 
Type: Part 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	350 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Position Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position Position { get; set; } 
Visual Basic 
Public Property Position As Position 
Get 
Set 
Property Value 
Type: Position 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	351 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..RotateSlots Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The rotation of the slots: odd, even or parallel. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltGroup..::..BoltRotateSlotsEnum RotateSlots { get; set; } 
Visual Basic 
Public Property RotateSlots As BoltGroup..::..BoltRotateSlotsEnum 
Get 
Set 
Property Value 

Type: BoltGroup..::..BoltRotateSlotsEnum 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	352 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..SecondPosition Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point SecondPosition { get; set; } 
Visual Basic 
Public Property SecondPosition As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	353 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..SlottedHoleX Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The X allowance of the slotted hole. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SlottedHoleX { get; set; } 
Visual Basic 
Public Property SlottedHoleX As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	354 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..SlottedHoleY Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Y allowance of the slotted hole. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SlottedHoleY { get; set; } 
Visual Basic 
Public Property SlottedHoleY As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	355 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..StartPointOffset Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The start point offset values of the bolt group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset StartPointOffset { get; set; } 
Visual Basic 
Public Property StartPointOffset As Offset 
Get 
Set 
Property Value 
Type: Offset 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	356 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..ThreadInMaterial Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Whether the thread goes inside the materal or not. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltGroup..::..BoltThreadInMaterialEnum ThreadInMaterial { get; set; } 
Visual Basic 
Public Property ThreadInMaterial As BoltGroup..::..BoltThreadInMaterialEnum 
Get 
Set 
Property Value 

Type: BoltGroup..::..BoltThreadInMaterialEnum 
See Also 
BoltGroup Class 
BoltGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	357 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Tolerance Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hole tolerance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Tolerance { get; set; } 
Visual Basic 
Public Property Tolerance As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	358 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Washer1 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the washer 1 is used in the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Washer1 { get; set; } 
Visual Basic 
Public Property Washer1 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	359 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Washer2 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the washer 2 is used in the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Washer2 { get; set; } 
Visual Basic 
Public Property Washer2 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	360 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..Washer3 Property 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates whether the washer 3 is used in the assembly. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Washer3 { get; set; } 
Visual Basic 
Public Property Washer3 As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
BoltGroup Class 
BoltGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	361 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..BoltHoleTypeEnum Enumeration 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hole type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum BoltHoleTypeEnum 
Visual Basic 
Public Enumeration BoltHoleTypeEnum 
Members 
Member name	Value		Description HOLE_TYPE_OVERSIZED 0	The oversized hole type. 
HOLE_TYPE_SLOTTED	1	The slotted hole type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	362 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..BoltRotateSlotsEnum Enumeration 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The rotation of the slots (the holes). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum BoltRotateSlotsEnum 
Visual Basic 
Public Enumeration BoltRotateSlotsEnum 
Members 
Member name	Value	Description 
ROTATE_SLOTS_ODD	0	The slots are crossed to odd parts. ROTATE_SLOTS_EVEN	1	The slots are crossed to even parts. ROTATE_SLOTS_PARALLEL 2	The slots are rotated to be parallel. See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	363 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltGroup..::..BoltThreadInMaterialEnum Enumeration 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The thread in the material. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum BoltThreadInMaterialEnum 
Visual Basic 
Public Enumeration BoltThreadInMaterialEnum 
Members 
Member name	Value	Description 
THREAD_IN_MATERIAL_NO	0	No thread inside the material (the part). THREAD_IN_MATERIAL_YES 1	Thread inside the material (the part). See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	364 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltGroup..::..BoltTypeEnum Enumeration 
BoltGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the bolt. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum BoltTypeEnum 
Visual Basic 
Public Enumeration BoltTypeEnum 
Members 
Member name	Value		Description 
BOLT_TYPE_SITE	0	The site bolt type. BOLT_TYPE_WORKSHOP 1	The workshop bolt type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	365 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The BoltXYList class defines a bolt group with an XY list shape. The bolt group is the most generic one of the bolt groups. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class BoltXYList : BoltGroup 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class BoltXYList 
Inherits BoltGroup 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPlate cp = new ContourPlate(); 
           cp.AddContourPoint(new ContourPoint(new Point( 6000,  6000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 9000,  6000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 9000, 12000, 0),null));            cp.AddContourPoint(new ContourPoint(new Point( 6000, 12000, 0),null)); 
if (!cp.Insert()) 
               Console.WriteLine("ContourPlate Insert failed!"); 
           BoltXYList B = new BoltXYList(); 
           B.PartToBeBolted = cp; 
           B.PartToBoltTo   = cp; 
           B.FirstPosition =  new Point(6000,  6000, 0);            B.SecondPosition = new Point(9000, 12000, 0); 


Examples	366 


Point Fields 
           B.BoltSize     = 16; 
           B.Tolerance    = 3.00; 
           B.BoltStandard = "7968"; 
           B.BoltType     = BoltGroup.BoltTypeEnum.BOLT_TYPE_WORKSHOP;            B.CutLength    = 105; 
           B.Length       = 50; 
           B.ExtraLength  = 15; 
           B.ThreadInMaterial = BoltGroup.BoltThreadInMaterialEnum.THREAD_IN_MATERIAL_NO; 
           B.Position.Depth          = Position.DepthEnum.MIDDLE; 
           B.Position.Plane          = Position.PlaneEnum.MIDDLE; 
           B.Position.Rotation       = Position.RotationEnum.FRONT; 
           B.Bolt    = true; 
           B.Washer1 = true; 
           B.Washer2 = true; 
           B.Washer3 = true; 
           B.Nut1    = true; 
           B.Nut2    = true; 
           B.Hole1   = true; 
           B.Hole2   = true; 
           B.Hole3   = true; 
           B.Hole4   = true; 
           B.Hole5   = true; 
           B.AddBoltDistX(100); 
           B.AddBoltDistX(200); 
           B.AddBoltDistX(300); 
           B.AddBoltDistY(100); 
           B.AddBoltDistY(200); 
           B.AddBoltDistY(300); 
if (!B.Insert()) 
               Console.WriteLine("BoltXYList Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BoltGroup 
                Tekla.Structures.Model..::..BoltXYList 
See Also 
BoltXYList Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	367 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList Members 
BoltXYList Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltXYList type exposes the following members. 
Constructors 
  	Name	Description 
BoltXYList Creates a new bolt XY list instance. 
Methods 
  	Name	Description 
AddBoltDistX	Adds an X distance to the bolt XY list. 
AddBoltDistY	Adds a Y distance to the bolt XY list. 
Adds the given part to the list of the other parts that should be bolted. 
(Inherited from BoltGroup.) 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the bolt XY list instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetBoltDistX	Returns the X distance defined by the argument. GetBoltDistXCount 

Methods	368 


Point Fields 
Returns the amount of X distances in the bolt XY list. 
GetBoltDistY	Returns the Y distance defined by the argument. GetBoltDistYCount	Returns the amount of Y distances in the bolt XY 
list. 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetOtherPartsToBolt 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns an array list containing all the other parts that are bolted. 
(Inherited from BoltGroup.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 


Methods	369 




GetReportProperty(String, String%) 

GetSolid()()()() 


GetSolid(Boolean) 



Point Fields 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




Modify 




RemoveOtherPartToBolt 


Select 


SetDynamicStringProperty 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the bolt XY list into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing bolt XY list in the model database to match the current one. 
Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

(Overrides ModelObject..::..Modify()()()().) 
Removes the given part from the list of the other bolted parts. 
(Inherited from BoltGroup.) 
Selects a bolt XY list from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 

Methods	370 




SetUserProperty(String, Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 



Point Fields 
Sets a double property for the model object. (Inherited from ModelObject.) 
Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
(Inherited from BoltGroup.) 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
(Inherited from BoltGroup.) 
BoltSize	The size of the bolts in the group. 
(Inherited from BoltGroup.) 
BoltStandard	The standard of the bolt group. 
(Inherited from BoltGroup.) 
BoltType	The type of the bolt group. 
(Inherited from BoltGroup.) 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). (Inherited from BoltGroup.) 
CutLength	The cut length. 
(Inherited from BoltGroup.) 
EndPointOffset	The end point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ExtraLength	The extra length for the bolts. 
(Inherited from BoltGroup.) 
FirstPosition	The first position point. 
(Inherited from BoltGroup.) 
Hole1	Indicates whether the hole 1 is used. 
(Inherited from BoltGroup.) 
Hole2	Indicates whether the hole 2 is used. 
(Inherited from BoltGroup.) 
Hole3	Indicates whether the hole 3 is used. 
(Inherited from BoltGroup.) 
Hole4	Indicates whether the hole 4 is used. 
(Inherited from BoltGroup.) 
Hole5	Indicates whether the hole 5 is used. 
(Inherited from BoltGroup.) 
Properties	371 


Point Fields 
HoleType	The hole type: oversized or slotted. 
(Inherited from BoltGroup.) Identifier	The identifier of the object. 
(Inherited from Object.) 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
(Inherited from BoltGroup.) 
Nut1	Indicates whether the nut 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Nut2	Indicates whether the nut 2 is used in the assembly. 
(Inherited from BoltGroup.) 
OtherPartsToBolt	The other parts to be bolted (read-only). 
(Inherited from BoltGroup.) 
PartToBeBolted	The part to be bolted. 
(Inherited from BoltGroup.) 
PartToBoltTo	The part to bolt to. 
(Inherited from BoltGroup.) 
Position	The position attributes. 
(Inherited from BoltGroup.) 
RotateSlots	The rotation of the slots: odd, even or parallel. 
(Inherited from BoltGroup.) 
SecondPosition	The second position point. 
(Inherited from BoltGroup.) 
SlottedHoleX	The X allowance of the slotted hole. 
(Inherited from BoltGroup.) 
SlottedHoleY	The Y allowance of the slotted hole. 
(Inherited from BoltGroup.) 
StartPointOffset	The start point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ThreadInMaterial	Whether the thread goes inside the materal or not. 
(Inherited from BoltGroup.) 
Tolerance	The hole tolerance. 
(Inherited from BoltGroup.) 
Washer1	Indicates whether the washer 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer2	Indicates whether the washer 2 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer3	Indicates whether the washer 3 is used in the assembly. 
(Inherited from BoltGroup.) 
See Also 
BoltXYList Class 
Tekla.Structures.Model Namespace 
See Also	372 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	373 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList Constructor 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new bolt XY list instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BoltXYList() 
Visual Basic 
Public Sub New 
See Also 
BoltXYList Class 
BoltXYList Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	374 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList Methods 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltXYList type exposes the following members. 
Methods 
  	Name	Description 
AddBoltDistX	Adds an X distance to the bolt XY list. 
AddBoltDistY	Adds a Y distance to the bolt XY list. 
Adds the given part to the list of the other parts that should be bolted. 
(Inherited from BoltGroup.) 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the bolt XY list instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetBoltDistX	Returns the X distance defined by the argument. GetBoltDistXCount	Returns the amount of X distances in the bolt XY 
list. 
GetBoltDistY	Returns the Y distance defined by the argument. 
GetBoltDistYCount	Returns the amount of Y distances in the bolt XY 
list. 
GetChildren 

Methods	375 








GetCoordinateSystem 



Point Fields 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetOtherPartsToBolt 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 

GetSolid()()()() 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns an array list containing all the other parts that are bolted. 
(Inherited from BoltGroup.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 

Methods	376 





GetSolid(Boolean) 



Point Fields 
Method for getting the solid information of the bolt group. 
(Inherited from BoltGroup.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




Modify 




RemoveOtherPartToBolt 


Select 


SetDynamicStringProperty 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the bolt XY list into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing bolt XY list in the model database to match the current one. 
Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

(Overrides ModelObject..::..Modify()()()().) 
Removes the given part from the list of the other bolted parts. 
(Inherited from BoltGroup.) 
Selects a bolt XY list from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 

Methods	377 


Point Fields 

See Also 
BoltXYList Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	378 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..AddBoltDistX Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds an X distance to the bolt XY list. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddBoltDistX( 
double DistX 
) 
Visual Basic 
Public Function AddBoltDistX (  
DistX As Double 
) As Boolean 
Parameters 

DistX 
Type: System..::..Double 
The X distance to be added. 

Return Value 

Type: Boolean 
True if the distance was added. Throws an OverflowException if there was no more space for the distance. 
See Also 
BoltXYList Class 
BoltXYList Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	379 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..AddBoltDistY Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a Y distance to the bolt XY list. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddBoltDistY( 
double DistY 
) 
Visual Basic 
Public Function AddBoltDistY (  
DistY As Double 
) As Boolean 
Parameters 

DistY 
Type: System..::..Double 
The Y distance to be added. 

Return Value 

Type: Boolean 
True if the distance was added. Throws an OverflowException if there was no more space for the distance. 
See Also 
BoltXYList Class 
BoltXYList Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	380 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..Delete Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the bolt XY list instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	381 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..GetBoltDistX Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the X distance defined by the argument. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double GetBoltDistX( 
int Index 
) 
Visual Basic 
Public Function GetBoltDistX (  
Index As Integer 
) As Double 
Parameters 

Index 
Type: System..::..Int32 
The index to the distance list. 

Return Value 

Type: Double 
The distance defined by the argument. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	382 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltXYList..::..GetBoltDistXCount Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the amount of X distances in the bolt XY list. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int GetBoltDistXCount() Visual Basic 
Public Function GetBoltDistXCount As Integer 
Return Value 

Type: Int32 
The amount of X distances. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	383 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..GetBoltDistY Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the Y distance defined by the argument. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double GetBoltDistY( 
int Index 
) 
Visual Basic 
Public Function GetBoltDistY (  
Index As Integer 
) As Double 
Parameters 

Index 
Type: System..::..Int32 
The index to the distance list. 

Return Value 

Type: Double 
The distance defined by the argument. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	384 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BoltXYList..::..GetBoltDistYCount Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the amount of Y distances in the bolt XY list. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int GetBoltDistYCount() Visual Basic 
Public Function GetBoltDistYCount As Integer 
Return Value 

Type: Int32 
The amount of Y distances. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	385 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..Insert Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the bolt XY list into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	386 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..Modify Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the existing bolt XY list in the model database to match the current one. 

Note, the IDs of Part To Bolt To, Part To Be Bolted and OtherParts cannot be modified. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	387 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList..::..Select Method 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a bolt XY list from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BoltXYList Class 
BoltXYList Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	388 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BoltXYList Properties 
BoltXYList Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BoltXYList type exposes the following members. 
Properties 
  	Name	Description 
Bolt	Indicates whether the instance is a bolt or just a hole. 
(Inherited from BoltGroup.) 
Gets the single bolt positions. All the bolt positions are in the XY-plane defined by the bolt group coordinate system. The given positions are in relation to the transformation plane in which the bolt group was selected. 
(Inherited from BoltGroup.) 
BoltSize	The size of the bolts in the group. 
(Inherited from BoltGroup.) 
BoltStandard	The standard of the bolt group. 
(Inherited from BoltGroup.) 
BoltType	The type of the bolt group. 
(Inherited from BoltGroup.) 
Defines whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). (Inherited from BoltGroup.) 
CutLength	The cut length. 
(Inherited from BoltGroup.) 
EndPointOffset	The end point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ExtraLength	The extra length for the bolts. 
(Inherited from BoltGroup.) 
FirstPosition	The first position point. 
(Inherited from BoltGroup.) 
Hole1	Indicates whether the hole 1 is used. 
(Inherited from BoltGroup.) 
Hole2	Indicates whether the hole 2 is used. 
Properties	389 


Point Fields 
(Inherited from BoltGroup.) 
Hole3	Indicates whether the hole 3 is used. 
(Inherited from BoltGroup.) 
Hole4	Indicates whether the hole 4 is used. 
(Inherited from BoltGroup.) 
Hole5	Indicates whether the hole 5 is used. 
(Inherited from BoltGroup.) 
HoleType	The hole type: oversized or slotted. 
(Inherited from BoltGroup.) Identifier	The identifier of the object. 
(Inherited from Object.) 
The length. An extra variable that is only set when the bolt group is made of studs instead of bolts. 
(Inherited from BoltGroup.) 
Nut1	Indicates whether the nut 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Nut2	Indicates whether the nut 2 is used in the assembly. 
(Inherited from BoltGroup.) 
OtherPartsToBolt	The other parts to be bolted (read-only). 
(Inherited from BoltGroup.) 
PartToBeBolted	The part to be bolted. 
(Inherited from BoltGroup.) 
PartToBoltTo	The part to bolt to. 
(Inherited from BoltGroup.) 
Position	The position attributes. 
(Inherited from BoltGroup.) 
RotateSlots	The rotation of the slots: odd, even or parallel. 
(Inherited from BoltGroup.) 
SecondPosition	The second position point. 
(Inherited from BoltGroup.) 
SlottedHoleX	The X allowance of the slotted hole. 
(Inherited from BoltGroup.) 
SlottedHoleY	The Y allowance of the slotted hole. 
(Inherited from BoltGroup.) 
StartPointOffset	The start point offset values of the bolt group. 
(Inherited from BoltGroup.) 
ThreadInMaterial	Whether the thread goes inside the materal or not. 
(Inherited from BoltGroup.) 
Tolerance	The hole tolerance. 
(Inherited from BoltGroup.) 
Washer1	Indicates whether the washer 1 is used in the assembly. 
(Inherited from BoltGroup.) 
Washer2	Indicates whether the washer 2 is used in the assembly. 
(Inherited from BoltGroup.) 
Properties	390 


Point Fields 
Washer3	Indicates whether the washer 3 is used in the assembly. 
(Inherited from BoltGroup.) 
See Also 
BoltXYList Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	391 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Boolean Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Boolean class is an abstract base class for boolean operations such as a part cut, an add, a fitting or a cut plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class Boolean : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class Boolean 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Boolean 
                Tekla.Structures.Model..::..BooleanPart 
                Tekla.Structures.Model..::..CutPlane 
                Tekla.Structures.Model..::..EdgeChamfer 
                Tekla.Structures.Model..::..Fitting 
See Also 
Boolean Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	392 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Boolean Members 
Boolean Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Boolean type exposes the following members. 
Constructors 
  	Name	Description 
Boolean Constructs an empty boolean. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple properties at once. 

Methods	393 






GetDoubleUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 
Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	394 








Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Father	The father object of the boolean operation; the model object instance to 
operate on. 
Identifier The identifier of the object. 
(Inherited from Object.) 
See Also 
Boolean Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	395 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Boolean Constructor 
Boolean Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Constructs an empty boolean. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Boolean() 
Visual Basic 
Public Sub New 
See Also 
Boolean Class 
Boolean Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	396 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Boolean Methods 
Boolean Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Boolean type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


GetDoubleUserProperties 

GetDynamicStringProperty 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 

Methods	397 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 

Methods	398 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Boolean Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	399 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Boolean Properties 
Boolean Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Boolean type exposes the following members. 
Properties 
  	Name	Description 
Father	The father object of the boolean operation; the model object instance to 
operate on. 
Identifier The identifier of the object. 
(Inherited from Object.) 
See Also 
Boolean Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	400 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Boolean..::..Father Property 
Boolean Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The father object of the boolean operation; the model object instance to operate on. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject Father { get; set; } 
Visual Basic 
Public Property Father As ModelObject 
Get 
Set 
Property Value 

Type: ModelObject 
See Also 
Boolean Class 
Boolean Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	401 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The BooleanPart class represents a part cut or an add. This means that a model object is, for example, cut with a part instance to create a void to the father part. Typically the operative part is deleted after the operation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class BooleanPart : Boolean 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class BooleanPart 
Inherits Boolean 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Point point = new Point(0, 7000, 0); 
           Point point2 = new Point(1000, 7000, 0);            Beam Beam1 = new Beam(); 
           Beam1.StartPoint = point; 
           Beam1.EndPoint = point2; 
           Beam1.Insert(); 
           Beam Beam2 = new Beam(); 
           Beam2.StartPoint = new Point(500, 6000, 0); 
           Beam2.EndPoint = new Point(500, 8000, 0); 
           Beam2.Class = BooleanPart.BooleanOperativeClassName;            Beam2.Insert(); 
           BooleanPart Beam = new BooleanPart();            Beam.Father = Beam1; 
           Beam.SetOperativePart(Beam2); 

Examples	402 


Point Fields 
if(!Beam.Insert()) 
               Console.WriteLine("Insert failed!"); 
           Beam2.Delete(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Boolean 
                Tekla.Structures.Model..::..BooleanPart 
See Also 
BooleanPart Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	403 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart Members 
BooleanPart Class  Constructors  Methods  Fields  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BooleanPart type exposes the following members. 
Constructors 
  	Name	Description 
BooleanPart Instantiates an empty cut operation. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the boolean part instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	404 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	405 





Insert 



Modify 



Point Fields 
Inserts the boolean part into the model database. All the attributes must be set. The operative part is overwritten by a copy of the original part. (Overrides ModelObject..::..Insert()()()().) 
Currently it is not possible to modify the boolean part as there is nothing that can be modified for it. Calling this function will actually call modify for the operative part member. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a boolean part from the model database. 
The part ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying 
SetLabel 


the changed object in modification. 
(Inherited from ModelObject.) 
Sets the part to operate with. The operative part's class member must be defined to be BooleanOperativeClass. 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Fields 
  	Name	Description 
A constant string that defines a part class name to be the boolean operative part. This class must be 
BooleanOperativeClassName 


used when inserting the operative part to the database. 
Properties 
  	Name	Description 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 

Properties	406 


Point Fields 
The part that does the boolean operation. When Insert() is called, this field is overwritten with a new part instance which is a copy of the original operative part. This part has the same identifier as the boolean part. Modifications (such as profile change) have to be made through the part instance and not the boolean part instance. The operative part's class must be BooleanOperativeClass. 
Type	Defines the boolean operation: an add or a cut. 
See Also 
BooleanPart Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	407 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart Constructor 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates an empty cut operation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BooleanPart() 
Visual Basic 
Public Sub New 
See Also 
BooleanPart Class 
BooleanPart Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	408 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart Fields 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BooleanPart type exposes the following members. 
Fields 
  	Name	Description 
A constant string that defines a part class name to be the boolean operative part. This class must be 
BooleanOperativeClassName 


used when inserting the operative part to the database. 
See Also 
BooleanPart Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	409 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BooleanPart..::..BooleanOperativeClassName Field 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A constant string that defines a part class name to be the boolean operative part. This class must be used when inserting the operative part to the database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const string BooleanOperativeClassName 
Visual Basic 
Public Const BooleanOperativeClassName As String 
Field Value 
Type: String 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	410 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart Methods 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BooleanPart type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the boolean part instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	411 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the boolean part into the model database. All the attributes must be set. The operative part is overwritten by a copy of the original part. (Overrides ModelObject..::..Insert()()()().) 
Modify	Currently it is not possible to modify the boolean 
part as there is nothing that can be modified for it. 

Methods	412 


Point Fields 
Calling this function will actually call modify for the operative part member. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a boolean part from the model database. 
The part ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying 
SetLabel 


the changed object in modification. 
(Inherited from ModelObject.) 
Sets the part to operate with. The operative part's class member must be defined to be BooleanOperativeClass. 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
BooleanPart Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	413 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart..::..Delete Method 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the boolean part instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	414 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart..::..Insert Method 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the boolean part into the model database. All the attributes must be set. The operative part is overwritten by a copy of the original part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	415 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart..::..Modify Method 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Currently it is not possible to modify the boolean part as there is nothing that can be modified for it. Calling this function will actually call modify for the operative part member. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	416 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart..::..Select Method 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a boolean part from the model database. The part ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	417 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BooleanPart..::..SetOperativePart Method 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets the part to operate with. The operative part's class member must be defined to be BooleanOperativeClass. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetOperativePart( 
Part Part 
) 
Visual Basic 
Public Function SetOperativePart (  
Part As Part 
) As Boolean 
Parameters 

Part 
Type: Tekla.Structures.Model..::..Part The operative part for the boolean. 

Return Value 
Type: Boolean 
True on success. 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	418 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart Properties 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The BooleanPart type exposes the following members. 
Properties 
  	Name	Description 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The part that does the boolean operation. When Insert() is called, this field is overwritten with a new part instance which is a copy of the original operative part. This part has the same identifier as the boolean part. Modifications (such as profile change) have to be made through the part instance and not the boolean part instance. The operative part's class must be BooleanOperativeClass. 
Type	Defines the boolean operation: an add or a cut. 
See Also 
BooleanPart Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	419 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart..::..OperativePart Property 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The part that does the boolean operation. When Insert() is called, this field is overwritten with a new part instance which is a copy of the original operative part. This part has the same identifier as the boolean part. Modifications (such as profile change) have to be made through the part instance and not the boolean part instance. The operative part's class must be BooleanOperativeClass. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Part OperativePart { get; set; } 
Visual Basic 
Public Property OperativePart As Part 
Get 
Set 
Property Value 
Type: Part 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	420 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
BooleanPart..::..Type Property 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the boolean operation: an add or a cut. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BooleanPart..::..BooleanTypeEnum Type { get; set; } 
Visual Basic 
Public Property Type As BooleanPart..::..BooleanTypeEnum 
Get 
Set 
Property Value 

Type: BooleanPart..::..BooleanTypeEnum 
See Also 
BooleanPart Class 
BooleanPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	421 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 BooleanPart..::..BooleanTypeEnum Enumeration 
BooleanPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the boolean operation: an add or a cut. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum BooleanTypeEnum 
Visual Basic 
Public Enumeration BooleanTypeEnum 
Members 
Member name	Value	Description 
BOOLEAN_ADD	1	Defines the add part. Typically the add part type is 
not used. 
BOOLEAN_CUT	2	Defines the cut part. 
BOOLEAN_WELDPREP 3	Defines the weld prep part. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	422 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Brep class represents a single brep in the model. A brep has a single start and end point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Brep : Part 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Brep 
Inherits Part 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point point = new Point(0, 0, 0); 
           Point point2 = new Point(1000, 0, 0); 
           Brep brep = new Brep(); 
           brep.StartPoint = point; 
           brep.EndPoint = point2; 
           brep.Profile = new Profile { ProfileString = "Default" }; 
bool result = brep.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Part 

Inheritance Hierarchy	423 


Point Fields 
                Tekla.Structures.Model..::..Brep 
See Also 
Brep Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	424 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Brep Members 
Brep Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Brep type exposes the following members. 
Constructors 
  	Name	Description 
Brep()()()()	Initializes a new instance of the Brep class. The start and end 
points are in the origin. 
Brep(Point, 
Point) 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 



Equals 



GetAllReportProperties 


GetAllUserProperties 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the brep instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 

Methods	425 










GetAssembly 


GetBolts 


GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Returns the assembly that the part belongs to. 
(Inherited from Part.) 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
GetHierarchicObjects	Returns an enumerator of all the 
connected hierarchic objects. 

Methods	426 







GetIntegerReportProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 



GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Returns an enumerator of all the pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	427 





GetStringUserProperties 


GetSurfaceObjects 


GetSurfaceTreatments 



Point Fields 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
Returns an enumerator of all the connected surface treatments. (Inherited from Part.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the brep into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing brep in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a brep from the model database. The brep identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 

Methods	428 





SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 



Point Fields 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
EndPoint	Gets or sets the end point of the brep. 
EndPointOffset	Gets or sets the beam's end point offset. 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Profile	Gets or sets the profile of the part. 
(Inherited from Part.) 
StartPoint	Gets or sets the start point of the brep. 
StartPointOffset	Gets or sets the beam's start point offset. 

Properties	429 


Point Fields 

See Also 
Brep Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	430 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Brep Constructor 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Brep()()()()	Initializes a new instance of the Brep class. The start and end 
points are in the origin. 
Brep(Point, 
Point) 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	431 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep Constructor 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Brep class. The start and end points are in the origin. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Brep() 
Visual Basic 
Public Sub New 
See Also 
Brep Class 
Brep Members 
Brep Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	432 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep Constructor (Point, Point) 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Brep class with the given start and end points. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Brep( 
Point startPoint, 
Point endPoint 
) 
Visual Basic 
Public Sub New (  
startPoint As Point, 
endPoint As Point 
) 
Parameters 

startPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The start point for the brep. 

endPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The end point for the brep. 
See Also 
Brep Class 
Brep Members 
Brep Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	433 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Brep Methods 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Brep type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetAssembly 

GetBolts 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the brep instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Returns the assembly that the part belongs to. 
(Inherited from Part.) 

Methods	434 








GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for 
the model object. 

Methods	435 


Point Fields 
(Inherited from ModelObject.) GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 



GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Returns an enumerator of all the pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 



GetStringUserProperties 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
GetSurfaceTreatments	Returns an enumerator of all the 
connected surface treatments. 

Methods	436 


Point Fields 



GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 





(Inherited from Part.) 
Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the brep into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing brep in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a brep from the model database. The brep identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, String)	Sets a string property for the model 
object. 

Methods	437 


Point Fields 
(Inherited from ModelObject.) 
See Also 
Brep Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	438 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..Delete Method 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the brep instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	439 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..Insert Method 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the brep into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	440 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..Modify Method 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing brep in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	441 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..Select Method 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a brep from the model database. The brep identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	442 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Brep Properties 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Brep type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
EndPoint	Gets or sets the end point of the brep. 
EndPointOffset	Gets or sets the beam's end point offset. 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Properties	443 


Point Fields 
Profile	Gets or sets the profile of the part. 
(Inherited from Part.) 
StartPoint	Gets or sets the start point of the brep. 
StartPointOffset	Gets or sets the beam's start point offset. See Also 
Brep Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	444 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..EndPoint Property 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the end point of the brep. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; set; } 
Visual Basic 
Public Property EndPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	445 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..EndPointOffset Property 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the beam's end point offset. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset EndPointOffset { get; set; } 
Visual Basic 
Public Property EndPointOffset As Offset 
Get 
Set 
Property Value 
Type: Offset 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	446 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..StartPoint Property 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the start point of the brep. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; set; } 
Visual Basic 
Public Property StartPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	447 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Brep..::..StartPointOffset Property 
Brep Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the beam's start point offset. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset StartPointOffset { get; set; } 
Visual Basic 
Public Property StartPointOffset As Offset 
Get 
Set 
Property Value 
Type: Offset 
See Also 
Brep Class 
Brep Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	448 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Chamfer class defines how the corners of a polybeam or a contour plate are rounded. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Chamfer 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Chamfer 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPoint point1 = new ContourPoint(new Point(0, 4000, 0), null); 
           ContourPoint point2 = new ContourPoint(new Point(2000, 4000, 0), new Chamfer(0, 0, Cha            ContourPoint point3 = new ContourPoint(new Point(0, 6000, 0), null); 
           point2.Chamfer.DZ1 = 2500; 
           point2.Chamfer.DZ2 = 0; 
           ContourPlate cp = new ContourPlate(); 
           cp.AddContourPoint(point1); 
           cp.AddContourPoint(point2); 
           cp.AddContourPoint(point3); 
           cp.Finish = "FOO"; 
           cp.Material.MaterialString = "K30-2";            cp.Profile.ProfileString = "PL200"; 
           cp.Insert(); 
       } 
} 

Examples	449 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Chamfer 
See Also 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	450 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer Members 
Chamfer Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Chamfer type exposes the following members. 
Constructors 
  	Name	Description 
Chamfer()()()()	Creates a chamfer instance with the 
basic shape type CHAMFER_NONE. 
Chamfer(Double, Double, 
Chamfer..::..ChamferTypeEnum) 
Properties 
  	Name	Description 
The thickness above the offset. 
DZ1 
Note that this does nothing when used with the PolyBeam. 
The thickness below the offset. 
DZ2 
Note that this does nothing when used with the PolyBeam. Type	The basic shape type of the chamfer. 
X	The dimension of the chamfer. 
Y	The second dimension of straight chamfers. 
See Also 
Chamfer Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	451 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer Constructor 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Chamfer()()()()	Creates a chamfer instance with the 
basic shape type CHAMFER_NONE. 
Chamfer(Double, Double, 
Chamfer..::..ChamferTypeEnum) 
See Also 
Chamfer Class 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	452 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer Constructor 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a chamfer instance with the basic shape type CHAMFER_NONE. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Chamfer() 
Visual Basic 
Public Sub New 
See Also 
Chamfer Class 
Chamfer Members 
Chamfer Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	453 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer Constructor (Double, Double, Chamfer..::..ChamferTypeEnum) 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a chamfer with the given values. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Chamfer( 
double X, 
double Y, 
Chamfer..::..ChamferTypeEnum Type 
) 
Visual Basic 
Public Sub New (  
X As Double, 
Y As Double, 
Type As Chamfer..::..ChamferTypeEnum 
) 
Parameters 

X 
Type: System..::..Double 
The X value of the chamfer. 

Y 
Type: System..::..Double The Y value of the chamfer. 

Type 
Type: Tekla.Structures.Model..::..Chamfer..::..ChamferTypeEnum The basic shape type of the chamfer. 
See Also 
Chamfer Class 
Chamfer Members 
Chamfer Overload 
Tekla.Structures.Model Namespace 

See Also	454 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	455 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer Properties 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Chamfer type exposes the following members. 
Properties 
  	Name	Description 
The thickness above the offset. 
DZ1 
Note that this does nothing when used with the PolyBeam. 
The thickness below the offset. 
DZ2 
Note that this does nothing when used with the PolyBeam. Type	The basic shape type of the chamfer. 
X	The dimension of the chamfer. 
Y	The second dimension of straight chamfers. 
See Also 
Chamfer Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	456 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer..::..DZ1 Property 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The thickness above the offset. 

Note that this does nothing when used with the PolyBeam. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DZ1 { get; set; } 
Visual Basic 
Public Property DZ1 As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Chamfer Class 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	457 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer..::..DZ2 Property 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The thickness below the offset. 

Note that this does nothing when used with the PolyBeam. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DZ2 { get; set; } 
Visual Basic 
Public Property DZ2 As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Chamfer Class 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	458 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer..::..Type Property 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The basic shape type of the chamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Chamfer..::..ChamferTypeEnum Type { get; set; } 
Visual Basic 
Public Property Type As Chamfer..::..ChamferTypeEnum 
Get 
Set 
Property Value 

Type: Chamfer..::..ChamferTypeEnum 
See Also 
Chamfer Class 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	459 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer..::..X Property 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The dimension of the chamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double X { get; set; } 
Visual Basic 
Public Property X As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Chamfer Class 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	460 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer..::..Y Property 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second dimension of straight chamfers. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Y { get; set; } 
Visual Basic 
Public Property Y As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Chamfer Class 
Chamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	461 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Chamfer..::..ChamferTypeEnum Enumeration 
Chamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The basic shape type of the chamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ChamferTypeEnum 
Visual Basic 
Public Enumeration ChamferTypeEnum 
Members 
Member name	Value		Description CHAMFER_NONE	0	No chamfer type. 
CHAMFER_LINE	1	The line type chamfer. 
CHAMFER_ROUNDING	2	The rounding type chamfer. CHAMFER_ARC	3	The arc type chamfer. 
CHAMFER_ARC_POINT	4	The arc point type chamfer. CHAMFER_SQUARE	5	The square type chamfer. CHAMFER_SQUARE_PARALLEL 6	The square parallel type chamfer. CHAMFER_LINE_AND_ARC	7	The line and arc type chamfer. See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	462 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The CircleRebarGroup class represents a group of reinforcing bars which have a circular shape. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class CircleRebarGroup : BaseRebarGroup 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class CircleRebarGroup 
Inherits BaseRebarGroup 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(5000, 8000, 0), new Point(6000, 8000, 0));            Beam.Profile.ProfileString = "250*250"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Finish = "PAINT"; 
           Beam.Insert(); 
double MinimumX = Beam.GetSolid().MinimumPoint.X; double MinimumY = Beam.GetSolid().MinimumPoint.Y; double MinimumZ = Beam.GetSolid().MinimumPoint.Z; double MaximumX = Beam.GetSolid().MaximumPoint.X; double MaximumY = Beam.GetSolid().MaximumPoint.Y; double MaximumZ = Beam.GetSolid().MaximumPoint.Z; 
           CircleRebarGroup CircleRebarGroup = new CircleRebarGroup(); 
           CircleRebarGroup.Polygon.Points.Add(new Point(MinimumX, MaximumY, MinimumZ));            CircleRebarGroup.Polygon.Points.Add(new Point(MinimumX, MinimumY, MinimumZ));            CircleRebarGroup.Polygon.Points.Add(new Point(MinimumX, MinimumY, MaximumZ));            CircleRebarGroup.StartPoint = new Point(MinimumX, MaximumY, MinimumZ); 

Examples	463 


Point Fields 
           CircleRebarGroup.EndPoint = new Point(MaximumX, MaximumY, MinimumZ); 
           CircleRebarGroup.Father = Beam; 
           CircleRebarGroup.RadiusValues.Add(40.0); 
           CircleRebarGroup.SpacingType = BaseRebarGroup.RebarGroupSpacingTypeEnum.SPACING_TYPE_E            CircleRebarGroup.Spacings.Add(300); 
           CircleRebarGroup.ExcludeType = BaseRebarGroup.ExcludeTypeEnum.EXCLUDE_TYPE_NONE; 
           CircleRebarGroup.Name = "RebarGroup"; 
           CircleRebarGroup.Class = 3; 
           CircleRebarGroup.Size = "10"; 
           CircleRebarGroup.NumberingSeries.StartNumber = 0; 
           CircleRebarGroup.NumberingSeries.Prefix = "Group"; 
           CircleRebarGroup.Grade = "A500HW"; 
           CircleRebarGroup.StirrupType = CircleRebarGroup.CircleRebarGroupStirrupTypeEnum.STIRRU            CircleRebarGroup.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..BaseRebarGroup 
                    Tekla.Structures.Model..::..CircleRebarGroup 
See Also 
CircleRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	464 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup Members 
CircleRebarGroup Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CircleRebarGroup type exposes the following members. 
Constructors 
  	Name	Description 
CircleRebarGroup Initializes a new circle rebar group instance with empty 
attributes. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the circle rebar group instance with the given identifier from the model database. (Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 


Methods	465 





GetChildren 


GetCoordinateSystem 



GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 





GetRebarGeometries 



Point Fields 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 


Methods	466 


Point Fields 




GetRebarGeometriesWithoutClashes 





GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 





Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is 

Methods	467 








GetStringUserProperties 



Point Fields 
faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the circle rebar group into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing circle rebar group in the model database to match the current one. (Overrides ModelObject..::..Modify()()()().) 
Selects a circle rebar group from the model database. The identifier of the circle rebar group must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


object. 
(Inherited from ModelObject.) 


Methods	468 


Point Fields 

SetUserProperty(String, Int32) 


SetUserProperty(String, String) 





Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
EndHook	The hook at the end of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The end point of the direction in which the bars are 
EndPoint 




EndPointOffsetType 




EndPointOffsetValue 





ExcludeType 





Father 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

(Inherited from BaseRebarGroup.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Inherited from BaseRebarGroup.) 
Grade	Gets or sets the steel grade of the reinforcing bar. The 
grade indicates the strength of the steel used in 

Properties	469 


Point Fields 
reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	A polygon definition for the circle reinforcing bar 
group shape. The polygon must have 3 points. RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
(Inherited from BaseRebarGroup.) 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only 
Spacings 








SpacingType 


one value that defines the number of the reinforcing bars. 
(Inherited from BaseRebarGroup.) 
The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
(Inherited from BaseRebarGroup.) StartFromPlaneOffset	The start offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
StartHook	The hook at the beginning of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
StartPoint 

Properties	470 








StartPointOffsetType 


StartPointOffsetValue 


StirrupType 



Point Fields 
The start point of the direction in which the bars are distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
The type of the stirrup. The options are: 

 STIRRUP_TYPE_CIRCLE 
 STIRRUP_TYPE_SPIRAL 
See Also 
CircleRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




























See Also	471 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup Constructor 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new circle rebar group instance with empty attributes. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CircleRebarGroup() 
Visual Basic 
Public Sub New 
See Also 
CircleRebarGroup Class 
CircleRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	472 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup Methods 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CircleRebarGroup type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the circle rebar group instance with the given identifier from the model database. (Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	473 










GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical 

Methods	474 


Point Fields 




GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 







GetSolid 



GetStringReportProperties 



GetStringUserProperties 





points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 


Methods	475 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the circle rebar group into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing circle rebar group in the model database to match the current one. (Overrides ModelObject..::..Modify()()()().) 
Selects a circle rebar group from the model database. The identifier of the circle rebar group must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 


Methods	476 


Point Fields 

See Also 
CircleRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	477 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup..::..Delete Method 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the circle rebar group instance with the given identifier from the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CircleRebarGroup Class CircleRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	478 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup..::..Insert Method 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the circle rebar group into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CircleRebarGroup Class CircleRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	479 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup..::..Modify Method 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing circle rebar group in the model database to match the current one. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CircleRebarGroup Class CircleRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	480 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup..::..Select Method 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a circle rebar group from the model database. The identifier of the circle rebar group must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CircleRebarGroup Class CircleRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	481 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup Properties 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CircleRebarGroup type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
EndHook	The hook at the end of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The end point of the direction in which the bars are 
EndPoint 




EndPointOffsetType 




EndPointOffsetValue 





ExcludeType 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

(Inherited from BaseRebarGroup.) 

Properties	482 





Father 


FromPlaneOffset 



Point Fields 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Inherited from BaseRebarGroup.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	A polygon definition for the circle reinforcing bar 
group shape. The polygon must have 3 points. RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
(Inherited from BaseRebarGroup.) 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only one value that defines the number of the reinforcing bars. 
(Inherited from BaseRebarGroup.) 
SpacingType	The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 


Properties	483 


Point Fields 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
(Inherited from BaseRebarGroup.) StartFromPlaneOffset	The start offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
StartHook	The hook at the beginning of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The start point of the direction in which the bars are 
StartPoint 


StartPointOffsetType 


StartPointOffsetValue 


StirrupType 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
The type of the stirrup. The options are: 

 STIRRUP_TYPE_CIRCLE 
 STIRRUP_TYPE_SPIRAL 
See Also 
CircleRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	484 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CircleRebarGroup..::..Polygon Property 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A polygon definition for the circle reinforcing bar group shape. The polygon must have 3 points. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Polygon 
Get 
Set 
Property Value 
Type: Polygon 
See Also 
CircleRebarGroup Class CircleRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	485 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CircleRebarGroup..::..StirrupType Property 
CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the stirrup. The options are: 

 STIRRUP_TYPE_CIRCLE 
 STIRRUP_TYPE_SPIRAL 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CircleRebarGroup..::..CircleRebarGroupStirrupTypeEnum StirrupType { get; set; } 
Visual Basic 
Public Property StirrupType As CircleRebarGroup..::..CircleRebarGroupStirrupTypeEnum Get 
Set 
Property Value 

Type: CircleRebarGroup..::..CircleRebarGroupStirrupTypeEnum 
See Also 
CircleRebarGroup Class 
CircleRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	486 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CircleRebarGroup..::..CircleRebarGroupStirrupTypeEnum Enumeration CircleRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different stirrup types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum CircleRebarGroupStirrupTypeEnum 
Visual Basic 
Public Enumeration CircleRebarGroupStirrupTypeEnum 
Members 
Member name	Value		Description STIRRUP_TYPE_CIRCLE 0	The circle type of stirrup. 
STIRRUP_TYPE_SPIRAL	1	The spiral type of stirrup. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	487 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ClashCheckData class presents information about the detected clash. It is instantiated inside the onClashDetected method. The objects store the identifiers and type of the clash to be passed on to event subscribers. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class ClashCheckData 
Visual Basic 
<SerializableAttribute> 
Public Class ClashCheckData 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ClashCheckData 
See Also 
ClashCheckData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	488 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData Members 
ClashCheckData Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashCheckData type exposes the following members. 
Constructors 
  	Name	Description 
ClashCheckData Initializes a new instance of the ClashCheckData class Properties 
  	Name	Description 
Object1  Gets the first clashing object. 
Object2  Gets the second clashing object. 
Overlap Gets the overlap of the clash. Only applies to clashes of type 
CLASH_TYPE_CLASH. 
Type	Gets the type of the clash. 
See Also 
ClashCheckData Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	489 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData Constructor 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the ClashCheckData class 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ClashCheckData() 
Visual Basic 
Public Sub New 
See Also 
ClashCheckData Class 
ClashCheckData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	490 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData Properties 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashCheckData type exposes the following members. 
Properties 
  	Name	Description 
Object1  Gets the first clashing object. 
Object2  Gets the second clashing object. 
Overlap Gets the overlap of the clash. Only applies to clashes of type 
CLASH_TYPE_CLASH. 
Type	Gets the type of the clash. 
See Also 
ClashCheckData Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	491 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData..::..Object1 Property 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the first clashing object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject Object1 { get; } 
Visual Basic 
Public ReadOnly Property Object1 As ModelObject 
Get 
Property Value 

Type: ModelObject 
See Also 
ClashCheckData Class ClashCheckData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	492 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData..::..Object2 Property 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the second clashing object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject Object2 { get; } 
Visual Basic 
Public ReadOnly Property Object2 As ModelObject 
Get 
Property Value 

Type: ModelObject 
See Also 
ClashCheckData Class ClashCheckData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	493 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData..::..Overlap Property 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the overlap of the clash. Only applies to clashes of type CLASH_TYPE_CLASH. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Overlap { get; } 
Visual Basic 
Public ReadOnly Property Overlap As Double 
Get 
Property Value 
Type: Double 
See Also 
ClashCheckData Class ClashCheckData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	494 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckData..::..Type Property 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the type of the clash. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ClashCheckData..::..ClashTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As ClashCheckData..::..ClashTypeEnum 
Get 
Property Value 

Type: ClashCheckData..::..ClashTypeEnum 
See Also 
ClashCheckData Class 
ClashCheckData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	495 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashCheckData..::..ClashTypeEnum Enumeration 
ClashCheckData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

An enumeration for the different clash types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ClashTypeEnum 
Visual Basic 
Public Enumeration ClashTypeEnum 
Members 
Member name	Value	Description 
CLASH_TYPE_INVALID	0	The invalid clash type. CLASH_TYPE_ISINSIDE	1	One object is inside the other object. CLASH_TYPE_EXACTMATCH	2	The exact match clash type. CLASH_TYPE_CLASH	3	The unidentified clash type. CLASH_TYPE_MINDISTANCE	4	The minimum distance clash type. CLASH_TYPE_FAILEDSOLID	5	The failed solid clash type. CLASH_TYPE_CUTTHROUGH	6	The cut through clash type. CLASH_TYPE_COMPLEXCLASH 7	The complex clash type. CLASH_TYPE_FAILEDTEST	8	The failed test clash type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	496 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckHandler Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashCheckHandler class contains clash check methods. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ClashCheckHandler 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ClashCheckHandler 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Exmaple1() 
       { 
           Model MyModel = new Model(); 
           ClashCheckHandler ClashCheck = MyModel.GetClashCheckHandler();            ClashCheck.RunClashCheck(); 
           ClashCheck.StopClashCheck(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ClashCheckHandler 
See Also 
ClashCheckHandler Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	497 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckHandler Members 
ClashCheckHandler Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashCheckHandler type exposes the following members. 
Methods 
  	Name	Description 
GetIntersectionBoundingBoxes Get a list of bounding boxes (AABB) of the 
clashing volumes of two objects. RunClashCheck	Starts the clash checking. 
StopClashCheck	Stops the clash checking. 
See Also 
ClashCheckHandler Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	498 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClashCheckHandler Methods 
ClashCheckHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashCheckHandler type exposes the following members. 
Methods 
  	Name	Description 
GetIntersectionBoundingBoxes Get a list of bounding boxes (AABB) of the 
clashing volumes of two objects. RunClashCheck	Starts the clash checking. 
StopClashCheck	Stops the clash checking. 
See Also 
ClashCheckHandler Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	499 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashCheckHandler..::..GetIntersectionBoundingBoxes Method 
ClashCheckHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Get a list of bounding boxes (AABB) of the clashing volumes of two objects. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetIntersectionBoundingBoxes( 
Identifier ID1, 
Identifier ID2 
) 
Visual Basic 
Public Function GetIntersectionBoundingBoxes (  
ID1 As Identifier, 
ID2 As Identifier 
) As ArrayList 
Parameters 

ID1 
Type: Tekla.Structures..::..Identifier The identifier of the first object. 

ID2 
Type: Tekla.Structures..::..Identifier The identifier of the second object. 

Return Value 

Type: ArrayList 
A list of bounding boxes of the clashing volumes. 
See Also 
ClashCheckHandler Class 
ClashCheckHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	500 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashCheckHandler..::..RunClashCheck Method 
ClashCheckHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Starts the clash checking. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RunClashCheck() 
Visual Basic 
Public Function RunClashCheck As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ClashCheckHandler Class ClashCheckHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	501 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashCheckHandler..::..StopClashCheck Method 
ClashCheckHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Stops the clash checking. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool StopClashCheck() Visual Basic 
Public Function StopClashCheck As Boolean 
Return Value 
Type: Boolean 
True on success. 
Remarks 
Stops the clash check only when the Advanced Options' XS_USE_NEW_CLASH_CHECK is set. 
See Also 
ClashCheckHandler Class 
ClashCheckHandler Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	502 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Component class represents a component. A component is a modelling tool that typically assembles multiple parts to build some type of a structure, for example a hall macro or at a smaller scale a reinforcement component (a macro). Also, a custom part is a component. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Component : BaseComponent,  
IAssemblable 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Component 
Inherits BaseComponent 
Implements IAssemblable 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam B = new Beam(new Point(12000, 0, 0), new Point(12000, 0, 6000));            B.Profile.ProfileString = "380*380"; 
           B.Material.MaterialString = "K40-1"; 
if (B.Insert()) 
           { 
               Component C = new Component(); 
               C.Name = "Component Test"; 
               C.Number = 30000063; 
               ComponentInput CI = new ComponentInput(); 
               CI.AddInputObject(B); 
               C.SetComponentInput(CI); 

Examples	503 


Point Fields 

               C.LoadAttributesFromFile("standard"); 
               C.SetAttribute("side_bar_space", 333.0); 
if (!C.Insert()) 
               { 
                   Console.WriteLine("Component Insert failed"); 
               } 
else 
               { 
                   Console.WriteLine(C.Identifier.ID); 
                   Double DValue = 0.0; 
if (!C.GetAttribute("side_bar_space", ref DValue) || DValue != 333)                        Console.WriteLine("Component GetAttribute failed"); 
               } 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseComponent 
                Tekla.Structures.Model..::..Component 
See Also 
Component Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	504 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Component Members 
Component Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Component type exposes the following members. 
Constructors 
  	Name	Description 
Component()()()()	Creates a new component instance. Component(ComponentInput) Creates a new component instance with the given 
component input. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the component instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the component belongs 
to. 
GetAttribute(String, 
Double%) 



Methods	505 





GetAttribute(String, String%) 



Point Fields 
(Inherited from BaseComponent.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
GetComponentInput	Returns the component input object. GetComponents	Returns an enumerator of all the connected 
components. 
Returns the coordinate system for the given model 
GetCoordinateSystem 


object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 

Methods	506 


Point Fields 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the component into the model database. The component input needs to be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing component in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a component from the model database. The component ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) 
Sets the component input object for the component. The component input object contains all the input objects and positions that are needed for the component creation. 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Methods	507 




SetUserProperty(String, Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 



Point Fields 
Sets a double property for the model object. (Inherited from ModelObject.) 
Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom components or 
Name 


plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
See Also 
Component Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	508 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Component Constructor 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Component()()()()	Creates a new component instance. Component(ComponentInput) Creates a new component instance with the given 
component input. 
See Also 
Component Class 
Component Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	509 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component Constructor 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new component instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Component() 
Visual Basic 
Public Sub New 
See Also 
Component Class 
Component Members 
Component Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	510 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component Constructor (ComponentInput) 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new component instance with the given component input. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Component( 
ComponentInput I 
) 
Visual Basic 
Public Sub New (  
I As ComponentInput 
) 
Parameters 

I 
Type: Tekla.Structures.Model..::..ComponentInput The component input to be used for the component. 
See Also 
Component Class 
Component Members 
Component Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	511 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Component Methods 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Component type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the component instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the component belongs 
to. 
GetAttribute(String, 
Double%) 


Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
GetComponentInput	Returns the component input object. 

Methods	512 


Point Fields 
GetComponents	Returns an enumerator of all the connected 
components. 
Returns the coordinate system for the given model 
GetCoordinateSystem 


object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 

Methods	513 




GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 



Point Fields 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the component into the model database. The component input needs to be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing component in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a component from the model database. The component ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) 
Sets the component input object for the component. The component input object contains all the input objects and positions that are needed for the component creation. 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 



Methods	514 


Point Fields 

See Also 
Component Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	515 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component..::..Delete Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the component instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	516 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component..::..GetAssembly Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the assembly that the component belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly GetAssembly() 
Visual Basic 
Public Function GetAssembly As Assembly 
Return Value 

Type: Assembly 
The assembly that the component belongs to. 

Implements 

IAssemblable..::..GetAssembly()()()() 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	517 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Component..::..GetComponentInput Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the component input object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ComponentInput GetComponentInput() 
Visual Basic 
Public Function GetComponentInput As ComponentInput 
Return Value 

Type: ComponentInput 
The component input object. 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	518 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component..::..GetComponents Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected components. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetComponents() 
Visual Basic 
Public Function GetComponents As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A ModelObjectEnumerator on success, otherwise null. 
See Also 
Component Class 
Component Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	519 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component..::..Insert Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the component into the model database. The component input needs to be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	520 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component..::..Modify Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing component in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	521 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Component..::..Select Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a component from the model database. The component ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	522 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Component..::..SetComponentInput Method 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets the component input object for the component. The component input object contains all the input objects and positions that are needed for the component creation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetComponentInput( 
ComponentInput I 
) 
Visual Basic 
Public Function SetComponentInput (  
I As ComponentInput 
) As Boolean 
Parameters 

I 
Type: Tekla.Structures.Model..::..ComponentInput The component input object. 

Return Value 

Type: Boolean 
True if the input is received. 
See Also 
Component Class 
Component Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	523 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Component Properties 
Component Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Component type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom components or 
Name 


plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
See Also 
Component Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	524 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ComponentInput class handles the input of component objects and positions. A component has one component input. The component input must include all the needed input objects and points in the correct order. For example, an input with a point and a part is different from an input of a part and a point. The maximum number of different input items in the collection is 10. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ComponentInput : ICollection,  
IEnumerable 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ComponentInput 
Implements ICollection, IEnumerable 
Examples 
The following example creates a component with a given component input: 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(12000, 0, 0), new Point(12000, 0, 6000));            Beam.Profile.ProfileString = "380*380"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Insert(); 
           Component Component = new Component();            Component.Name = "Component Test"; 
           Component.Number = 30000063; 
           ComponentInput ComponentInput = new ComponentInput(); 

Examples	525 


Point Fields 
           ComponentInput.AddInputObject(Beam); 
           Component.SetComponentInput(ComponentInput); 
           Component.LoadAttributesFromFile("standard"); 
           Component.SetAttribute("side_bar_space", 333.0); 
if (!Component.Insert()) 
           { 
               Console.WriteLine("Component Insert failed");            } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ComponentInput 
See Also 
ComponentInput Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	526 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput Members 
ComponentInput Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ComponentInput type exposes the following members. 
Constructors 
  	Name	Description 
ComponentInput Creates a new component input object. 
Methods 
  	Name	Description 
AddInputObject	Adds a model object to the component input. AddInputObjects	Adds an array list of model objects to the component 
input. 
AddInputPolygon	Adds a polygon to the component input. 
AddOneInputPosition	Adds an input position to the component input. AddTwoInputPositions Adds two input positions to the component input. 
CopyTo	Copies the elements of the ICollection to an Array, 
starting at a particular Array index. 
GetEnumerator	Returns an enumerator that iterates through a collection. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 




Properties	527 


Point Fields 

See Also 
ComponentInput Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	528 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput Constructor 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new component input object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ComponentInput() 
Visual Basic 
Public Sub New 
See Also 
ComponentInput Class 
ComponentInput Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	529 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput Methods 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ComponentInput type exposes the following members. 
Methods 
  	Name	Description 
AddInputObject	Adds a model object to the component input. AddInputObjects	Adds an array list of model objects to the component 
input. 
AddInputPolygon	Adds a polygon to the component input. 
AddOneInputPosition	Adds an input position to the component input. AddTwoInputPositions Adds two input positions to the component input. 
CopyTo	Copies the elements of the ICollection to an Array, 
starting at a particular Array index. 
GetEnumerator	Returns an enumerator that iterates through a collection. 
See Also 
ComponentInput Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	530 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..AddInputObject Method 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a model object to the component input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddInputObject( 
ModelObject M 
) 
Visual Basic 
Public Function AddInputObject (  
M As ModelObject 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..ModelObject The model object to be added. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	531 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..AddInputObjects Method 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds an array list of model objects to the component input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddInputObjects( 
ArrayList Objects 
) 
Visual Basic 
Public Function AddInputObjects (  
Objects As ArrayList 
) As Boolean 
Parameters 

Objects 
Type: System.Collections..::..ArrayList 
A list of model objects in the correct order. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	532 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..AddInputPolygon Method 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a polygon to the component input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddInputPolygon( 
Polygon P 
) 
Visual Basic 
Public Function AddInputPolygon (  
P As Polygon 
) As Boolean 
Parameters 

P 
Type: Tekla.Structures.Model..::..Polygon The polygon to be added. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	533 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..AddOneInputPosition Method 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds an input position to the component input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddOneInputPosition( 
Point P 
) 
Visual Basic 
Public Function AddOneInputPosition (  
P As Point 
) As Boolean 
Parameters 

P 
Type: Tekla.Structures.Geometry3d..::..Point The position to be added. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	534 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..AddTwoInputPositions Method 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds two input positions to the component input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddTwoInputPositions( 
Point Position1, 
Point Position2 
) 
Visual Basic 
Public Function AddTwoInputPositions (  
Position1 As Point, 
Position2 As Point 
) As Boolean 
Parameters 

Position1 
Type: Tekla.Structures.Geometry3d..::..Point 
The first position to be added. 

Position2 
Type: Tekla.Structures.Geometry3d..::..Point 
The second position to be added. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	535 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput..::..CopyTo Method 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Copies the elements of the ICollection to an Array, starting at a particular Array index. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void CopyTo( 
Array array, 
int index 
) 
Visual Basic 
Public Sub CopyTo (  
array As Array, 
index As Integer 
) 
Parameters 

array 
Type: System..::..Array 
The one-dimensional Array that is the destination of the elements copied from the ICollection. The Array must have zero-based indexing. 

index 
Type: System..::..Int32 
The zero-based index in the array at which copying begins. 

Implements 

ICollection..::..CopyTo(Array, Int32) 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	The array is null. 
System..::..ArgumentOutOfRangeException	The index is less than zero. 


Exceptions	536 







System..::..ArgumentException 




System..::..InvalidCastException 

See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 



Point Fields 
The array is multidimensional, or the index is equal to or greater than the length of the array, or the number of elements in the source ICollection is greater than the available space from the index to the end of the destination array. 
The type of the source ICollection cannot be cast automatically to the type of the destination array. 

Copyright  © Tekla 2013. All rights reserved. 































See Also	537 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..GetEnumerator Method 
ComponentInput Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator that iterates through a collection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator GetEnumerator() 
Visual Basic 
Public Function GetEnumerator As IEnumerator 
Return Value 

Type: IEnumerator 
An IEnumerator object that can be used to iterate through the collection. 

Implements 

IEnumerable..::..GetEnumerator()()()() 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
    { 
        Beam B = new Beam(new Point(12000, 0, 0), new Point(12000, 0, 6000));         B.Profile.ProfileString = "380*380"; 
        B.Material.MaterialString = "K40-1"; 
if (B.Insert()) 
        { 
            Component C = new Component(); 
            C.Name = "Component Test"; 
            C.Number = 30000063; 
            ComponentInput CI = new ComponentInput();             CI.AddInputObject(B); 
Examples	538 


Point Fields 

            C.SetComponentInput(CI); 
            C.LoadAttributesFromFile("standard"); 
            C.SetAttribute("side_bar_space", 333.0); 
if (!C.Insert()) 
            { 
                Console.WriteLine("Component Insert failed"); 
            } 
else 
            { 
// test fetching component input 
                ComponentInput ComponentSel = C.GetComponentInput(); 
                IEnumerator Enumerator = ComponentSel.GetEnumerator(); 
while (Enumerator.MoveNext()) 
                { 
                    InputItem ObjectInput = Enumerator.Current as InputItem; 
if (ObjectInput.GetInputType() == InputItem.InputTypeEnum.INPUT_1_OBJECT) 
                    { 
                        Beam BeamInput = ObjectInput.GetData() as Beam; 
                    } 
                } 
            } 
        } 
    } 
} 
See Also 
ComponentInput Class 
ComponentInput Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	539 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput Properties 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ComponentInput type exposes the following members. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
ComponentInput Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	540 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput..::..Count Property 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the number of elements contained in the ICollection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Count { get; } 
Visual Basic 
Public ReadOnly Property Count As Integer 
Get 
Property Value 

Type: Int32 

Implements 

ICollection..::..Count 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	541 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ComponentInput..::..IsSynchronized Property 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a value indicating whether access to the ICollection is synchronized (thread safe). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsSynchronized { get; } 
Visual Basic 
Public ReadOnly Property IsSynchronized As Boolean 
Get 
Property Value 

Type: Boolean 

Implements 

ICollection..::..IsSynchronized 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	542 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ComponentInput..::..SyncRoot Property 
ComponentInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets an object that can be used to synchronize access to the ICollection. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object SyncRoot { get; } 
Visual Basic 
Public ReadOnly Property SyncRoot As Object 
Get 
Property Value 

Type: Object 

Implements 

ICollection..::..SyncRoot 
See Also 
ComponentInput Class ComponentInput Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	543 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Connection class represents a connection. A connection is something that connects two or more parts together. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Connection : BaseComponent 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Connection 
Inherits BaseComponent 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using Tekla.Structures; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam B1 = new Beam(new Point(15000,0,-500), new Point(15000,0,6000));            B1.Profile.ProfileString = "HEA400"; 
           B1.Material.MaterialString = "S235JR"; 
           Beam B2 = new Beam(new Point(15000,0,0), new Point(18000,0,0));            B2.Profile.ProfileString = "HEA400"; 
           B2.Material.MaterialString = "S235JR"; 
           B1.Insert(); 
           B2.Insert(); 
           Connection C = new Connection(); 
           C.Name = "Test End Plate"; 
           C.Number = 144; 
           C.LoadAttributesFromFile("standard");            C.UpVector = new Vector(0,0,1000); 

Examples	544 


Point Fields 
           C.PositionType = PositionTypeEnum.COLLISION_PLANE; 
           C.SetPrimaryObject(B1); 
           C.SetSecondaryObject(B2); 
           C.SetAttribute("e2", 10.0); 
           C.SetAttribute("e1", 10.0); 
if(!C.Insert()) 
           { 
               Console.WriteLine("Connection Insert failed");            } 
else 
           { 
               Console.WriteLine(C.Identifier.ID); 
               Double DValue = 0.0; 
if(!C.GetAttribute("e2", ref DValue) || DValue != 10) 
                   Console.WriteLine("Connection GetAttribute failed"); 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseComponent 
                Tekla.Structures.Model..::..Connection 
See Also 
Connection Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	545 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Connection Members 
Connection Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Connection type exposes the following members. 
Constructors 
  	Name	Description 
Connection Creates a new connection instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the connection instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
GetAttribute(String, Int32%) Retrieves the attribute with the given name. 
(Inherited from BaseComponent.) 
GetAttribute(String, 
String%) 



Methods	546 







GetCoordinateSystem 



Point Fields 
objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetPrimaryObject	Returns the primary object of the connection. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSecondaryObjects	Returns the secondary objects. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 

Methods	547 





GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 



Point Fields 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the connection into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing connection in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a connection from the model database. The connection ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetPrimaryObject	Sets the primary object of the connection. 
Sets the secondary object of the connection. Use this method if you wish to add only one secondary object to the connection. 
SetSecondaryObjects	Sets an array list of model objects as the secondary 
objects of the connection. 
SetUserProperty(String, 
Double) 

Methods	548 




SetUserProperty(String, Int32) 
SetUserProperty(String, String) 



Point Fields 
Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutoDirectionType The auto direction type. 
Class	The class of the connection. 
The code of the connection. The code can be used to classify the connection. The code of the connection can be reported and shown in drawings. The maximum length of the string is 20 characters. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom 
Name 



Number 




PositionType 


components or plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
The position type. 
When creating custom connections this attribute is not applied, instead the position type used when creating the custom connection is used. 
The read only status of the connection. The status can be reported and shown in drawings. The color of the connection symbol in the model indicates the status of the connection. 
UpVector	A vector indicating which direction is considered the up 
direction for the connection. 
See Also 
Connection Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	549 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection Constructor 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new connection instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Connection() 
Visual Basic 
Public Sub New 
See Also 
Connection Class 
Connection Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	550 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Connection Methods 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Connection type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the connection instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
GetAttribute(String, Int32%) Retrieves the attribute with the given name. 
(Inherited from BaseComponent.) 
GetAttribute(String, 
String%) 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 


Methods	551 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetPrimaryObject	Returns the primary object of the connection. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSecondaryObjects	Returns the secondary objects. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 

Methods	552 




GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 



Point Fields 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the connection into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing connection in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a connection from the model database. The connection ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetPrimaryObject	Sets the primary object of the connection. 
Sets the secondary object of the connection. Use this method if you wish to add only one secondary object to the connection. 
SetSecondaryObjects	Sets an array list of model objects as the secondary 
objects of the connection. 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 


Methods	553 


Point Fields 

See Also 
Connection Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	554 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Delete Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the connection instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	555 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Connection..::..GetPrimaryObject Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the primary object of the connection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject GetPrimaryObject() 
Visual Basic 
Public Function GetPrimaryObject As ModelObject 
Return Value 
Type: ModelObject 
The primary object. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	556 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Connection..::..GetSecondaryObjects Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the secondary objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetSecondaryObjects() 
Visual Basic 
Public Function GetSecondaryObjects As ArrayList 
Return Value 

Type: ArrayList 
An array list containing all the secondary objects. 
See Also 
Connection Class 
Connection Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	557 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Insert Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the connection into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	558 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Modify Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing connection in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	559 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Select Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a connection from the model database. The connection ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	560 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Connection..::..SetPrimaryObject Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the primary object of the connection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetPrimaryObject( 
ModelObject M 
) 
Visual Basic 
Public Function SetPrimaryObject (  
M As ModelObject 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..ModelObject The primary object. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	561 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Connection..::..SetSecondaryObject Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets the secondary object of the connection. Use this method if you wish to add only one secondary object to the connection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetSecondaryObject( 
ModelObject M 
) 
Visual Basic 
Public Function SetSecondaryObject (  
M As ModelObject 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..ModelObject The secondary object. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	562 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Connection..::..SetSecondaryObjects Method 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets an array list of model objects as the secondary objects of the connection. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetSecondaryObjects( 
ArrayList Secondaries 
) 
Visual Basic 
Public Function SetSecondaryObjects (  
Secondaries As ArrayList 
) As Boolean 
Parameters 

Secondaries 
Type: System.Collections..::..ArrayList 
An array list containing the secondary objects. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	563 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Connection Properties 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Connection type exposes the following members. 
Properties 
  	Name	Description 
AutoDirectionType The auto direction type. 
Class	The class of the connection. 
The code of the connection. The code can be used to classify the connection. The code of the connection can be reported and shown in drawings. The maximum length of the string is 20 characters. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom 
Name 



Number 




PositionType 


components or plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
The position type. 
When creating custom connections this attribute is not applied, instead the position type used when creating the custom connection is used. 
The read only status of the connection. The status can be reported and shown in drawings. The color of the connection symbol in the model indicates the status of the connection. 
UpVector	A vector indicating which direction is considered the up 
direction for the connection. 



Properties	564 


Point Fields 

See Also 
Connection Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	565 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Connection..::..AutoDirectionType Property 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The auto direction type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AutoDirectionTypeEnum AutoDirectionType { get; set; } 
Visual Basic 
Public Property AutoDirectionType As AutoDirectionTypeEnum 
Get 
Set 
Property Value 

Type: AutoDirectionTypeEnum 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	566 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Class Property 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The class of the connection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Class { get; set; } 
Visual Basic 
Public Property Class As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	567 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Code Property 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The code of the connection. The code can be used to classify the connection. The code of the connection can be reported and shown in drawings. The maximum length of the string is 20 characters. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Code { get; set; } 
Visual Basic 
Public Property Code As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	568 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..PositionType Property 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position type. 
When creating custom connections this attribute is not applied, instead the position type used when creating the custom connection is used. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PositionTypeEnum PositionType { get; set; } 
Visual Basic 
Public Property PositionType As PositionTypeEnum 
Get 
Set 
Property Value 

Type: PositionTypeEnum 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	569 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..Status Property 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The read only status of the connection. The status can be reported and shown in drawings. The color of the connection symbol in the model indicates the status of the connection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ConnectionStatusEnum Status { get; } 
Visual Basic 
Public ReadOnly Property Status As ConnectionStatusEnum 
Get 
Property Value 

Type: ConnectionStatusEnum 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	570 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Connection..::..UpVector Property 
Connection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A vector indicating which direction is considered the up direction for the connection. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector UpVector { get; set; } 
Visual Basic 
Public Property UpVector As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Connection Class 
Connection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	571 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Contour Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Contour class defines a possibly chamfered contour. Contours must not have loops. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Contour 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Contour 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Contour 
See Also 
Contour Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	572 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Contour Members 
Contour Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Contour type exposes the following members. 
Constructors 
  	Name	Description 
Contour Instantiates an empty contour. 
Methods 
  	Name	Description 
Adds a new contour point to the contour. Do not add the same contour point twice. Throws an exception if the point can't be added. 
CalculatePolygon Calculate a polygon approximating the contour with chamfers 
evaluated. 
Properties 
  	Name	Description 
ContourPoints The contour points belonging to the contour. 
See Also 
Contour Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	573 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Contour Constructor 
Contour Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates an empty contour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Contour() 
Visual Basic 
Public Sub New 
See Also 
Contour Class 
Contour Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	574 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Contour Methods 
Contour Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Contour type exposes the following members. 
Methods 
  	Name	Description 
Adds a new contour point to the contour. Do not add the same contour point twice. Throws an exception if the point can't be added. 
CalculatePolygon Calculate a polygon approximating the contour with chamfers 
evaluated. 
See Also 
Contour Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	575 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Contour..::..AddContourPoint Method 
Contour Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Adds a new contour point to the contour. Do not add the same contour point twice. Throws an exception if the point can't be added. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void AddContourPoint( 
ContourPoint Point 
) 
Visual Basic 
Public Sub AddContourPoint (  
Point As ContourPoint 
) 
Parameters 

Point 
Type: Tekla.Structures.Model..::..ContourPoint The contour point to add. 
See Also 
Contour Class 
Contour Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	576 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Contour..::..CalculatePolygon Method 
Contour Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Calculate a polygon approximating the contour with chamfers evaluated. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CalculatePolygon( 
out Polygon polygon 
) 
Visual Basic 
Public Function CalculatePolygon (  
        < 


polygon 
Type: Tekla.Structures.Model..::..Polygon% 
[Missing <param name="polygon"/> documentation for "M:Tekla.Structures.Model.Contour.CalculatePolygon(Tekla.Structures.Model.Polygon 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.Contour.CalculatePolygon(Tekla.Structures.Model.Polygon@)"] 
See Also 
Contour Class 
Contour Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	577 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Contour Properties 
Contour Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Contour type exposes the following members. 
Properties 
  	Name	Description 
ContourPoints The contour points belonging to the contour. See Also 
Contour Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	578 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Contour..::..ContourPoints Property 
Contour Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The contour points belonging to the contour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList ContourPoints { get; set; } 
Visual Basic 
Public Property ContourPoints As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
Contour Class 
Contour Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	579 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ContourPlate class represents a part made with a contour, such as, a concrete slab. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ContourPlate : Part 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ContourPlate 
Inherits Part 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPoint point =  new ContourPoint(new Point(   0, 4000, 0), null);            ContourPoint point2 = new ContourPoint(new Point(2000, 4000, 0), null);            ContourPoint point3 = new ContourPoint(new Point(   0, 6000, 0), null); 
           ContourPlate CP = new ContourPlate(); 
           CP.AddContourPoint(point); 
           CP.AddContourPoint(point2); 
           CP.AddContourPoint(point3); 
           CP.Finish = "FOO"; 
           CP.Profile.ProfileString = "PL200"; 
           CP.Material.MaterialString = "K30-2"; 
bool Result = false; 
           Result = CP.Insert(); 
       } 
} 


Examples	580 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Part 
                Tekla.Structures.Model..::..ContourPlate 
See Also 
ContourPlate Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	581 


Point Fields 
ï»¿  
  Collapse AllExpand All          	  Code: All  Code: Multiple  Code: C#  Code: 
Visual Basic          	  Members: Show All  Members: Filtered  Members: 
Filtered  Members: Filtered   
C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate Members 
ContourPlate Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPlate type exposes the following members. 
Constructors 
  	Name	Description 
ContourPlate Initializes a new instance of the ContourPlate class. 
Methods 
  	Name	Description 
AddContourPoint	Adds a contour point to the contour 
plate. 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 



Equals 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the contour plate instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
GetAllUserProperties	Retrieves all properties for the 
model object in one hashtable. Type 

Methods	582 








GetAssembly 


GetBolts 


GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Returns the assembly that the part belongs to. 
(Inherited from Part.) 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 

GetIntegerReportProperties 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 

Methods	583 


Point Fields 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 



GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Returns an enumerator of all the pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 


GetStringUserProperties 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	584 








GetSurfaceObjects 


GetSurfaceTreatments 



Point Fields 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
Returns an enumerator of all the connected surface treatments. (Inherited from Part.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the contour plate into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing contour plate in the model database to match the current one. The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a contour plate from the model database. The identifier of the contour plate must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 


Methods	585 






SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 



Point Fields 
(Inherited from ModelObject.) 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
Contour	Gets or sets the contour for the contour plate. 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Profile	Gets or sets the profile of the part. 
(Inherited from Part.) 
Gets the read only type of the contour plate. In creation, the 
Type 


type is defined based on the material. If the material is concrete, the type will be slab, otherwise plate. 

Properties	586 


Point Fields 

See Also 
ContourPlate Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	587 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate Constructor 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the ContourPlate class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ContourPlate() 
Visual Basic 
Public Sub New 
See Also 
ContourPlate Class 
ContourPlate Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	588 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate Methods 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPlate type exposes the following members. 
Methods 
  	Name	Description 
AddContourPoint	Adds a contour point to the contour 
plate. 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 



Equals 



GetAllReportProperties 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the contour plate instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the part 
belongs to. 

Methods	589 






GetBolts 


GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
(Inherited from Part.) 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 


GetIntegerUserProperties 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	590 


Point Fields 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 



GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Returns an enumerator of all the pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 



GetStringUserProperties 


GetSurfaceObjects 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 

Methods	591 





GetSurfaceTreatments 



Point Fields 
Returns an enumerator of all the connected surface treatments. (Inherited from Part.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the contour plate into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing contour plate in the model database to match the current one. The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a contour plate from the model database. The identifier of the contour plate must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, Int32)	Sets an integer property for the 
model object. 


Methods	592 






SetUserProperty(String, String) 

See Also 
ContourPlate Class Tekla.Structures.Model Namespace 



Point Fields 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	593 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ContourPlate..::..AddContourPoint Method 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a contour point to the contour plate. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddContourPoint( 
ContourPoint contourPoint 
) 
Visual Basic 
Public Function AddContourPoint (  
contourPoint As ContourPoint 
) As Boolean 
Parameters 

contourPoint 
Type: Tekla.Structures.Model..::..ContourPoint 
The contour point that is to be inserted. 

Return Value 

Type: Boolean 
True on success, false if there is no more space for another contour point. 
See Also 
ContourPlate Class 
ContourPlate Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	594 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate..::..Delete Method 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the contour plate instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ContourPlate Class 
ContourPlate Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	595 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate..::..Insert Method 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the contour plate into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ContourPlate Class 
ContourPlate Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	596 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate..::..Modify Method 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing contour plate in the model database to match the current one. The identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ContourPlate Class 
ContourPlate Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	597 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate..::..Select Method 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a contour plate from the model database. The identifier of the contour plate must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ContourPlate Class 
ContourPlate Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	598 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate Properties 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPlate type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
Contour	Gets or sets the contour for the contour plate. 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Profile	Gets or sets the profile of the part. 
Properties	599 






Type 



Point Fields 
(Inherited from Part.) 
Gets the read only type of the contour plate. In creation, the type is defined based on the material. If the material is concrete, the type will be slab, otherwise plate. 
See Also 
ContourPlate Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	600 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate..::..Contour Property 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the contour for the contour plate. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Contour Contour { get; set; } 
Visual Basic 
Public Property Contour As Contour 
Get 
Set 
Property Value 
Type: Contour 
See Also 
ContourPlate Class 
ContourPlate Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	601 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPlate..::..Type Property 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the read only type of the contour plate. In creation, the type is defined based on the material. If the material is concrete, the type will be slab, otherwise plate. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ContourPlate..::..ContourPlateTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As ContourPlate..::..ContourPlateTypeEnum 
Get 
Property Value 

Type: ContourPlate..::..ContourPlateTypeEnum 
See Also 
ContourPlate Class 
ContourPlate Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	602 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ContourPlate..::..ContourPlateTypeEnum Enumeration 
ContourPlate Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The contour plate types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ContourPlateTypeEnum 
Visual Basic 
Public Enumeration ContourPlateTypeEnum 
Members 
Member name  Value		Description 
UNKNOWN	0	The unknown type. 
PLATE	1	The plate-like contour plate. 
SLAB	2	The slab-like contour plate. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	603 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ContourPoint class defines a point with possible chamfering information, used, for example, to define a contour plate. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ContourPoint : Point 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ContourPoint 
Inherits Point 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Geometry3d..::..Point 
        Tekla.Structures.Model..::..ContourPoint 
See Also 
ContourPoint Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	604 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Members 
ContourPoint Class  Constructors  Methods  Fields  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPoint type exposes the following members. 
Constructors 
  	Name	Description 
ContourPoint()()()()	Creates a new contour point instance. ContourPoint(Point, 
Chamfer) 
Methods 
  	Name	Description 
Compares two points. To use binarysearch somekind of sorting should be used. 
(Inherited from Point.) 
Equals	Returns true if the current object and the given object are equal. 
(Inherited from Point.) 
Returns a hash code for the point. Notice, in extremely rare cases, you might not get the same hash code for two points even though they are considered equal! This should, however, happen only in extremely rare cases! 
(Inherited from Point.) 
SetPoint	Sets the point's coordinates for the contour point. 
ToString	Formats the point into a string. 
(Inherited from Point.) 
Translate	Translates the point using the given vector. 
(Inherited from Point.) 
Zero	Zeros all the members of the point. 
(Inherited from Point.) 



Methods	605 


Point Fields 

Fields 
  	Name	Description 
X	The X-coordinate of the point. (Inherited from Point.) 
Y	The Y-coordinate of the point. (Inherited from Point.) 
Z	The Z-coordinate of the point. (Inherited from Point.) 
Properties 
  	Name	Description 
Chamfer The chamfer for the contour point. See Also 
ContourPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	606 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Constructor 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
ContourPoint()()()()	Creates a new contour point instance. ContourPoint(Point, 
Chamfer) 
See Also 
ContourPoint Class 
ContourPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	607 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Constructor 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new contour point instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ContourPoint() 
Visual Basic 
Public Sub New 
See Also 
ContourPoint Class 
ContourPoint Members ContourPoint Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	608 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Constructor (Point, Chamfer) 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new contour point using the given point and chamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ContourPoint( 
Point P, 
Chamfer C 
) 
Visual Basic 
Public Sub New (  
P As Point, 
C As Chamfer 
) 
Parameters 

P 
Type: Tekla.Structures.Geometry3d..::..Point 
The point (with X, Y and Z coordinates) to be used. 

C 
Type: Tekla.Structures.Model..::..Chamfer The chamfer to be used. 
See Also 
ContourPoint Class 
ContourPoint Members ContourPoint Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	609 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Fields 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPoint type exposes the following members. 
Fields 
  	Name	Description 
X	The X-coordinate of the point. 
(Inherited from Point.) 
Y	The Y-coordinate of the point. 
(Inherited from Point.) 
Z	The Z-coordinate of the point. 
(Inherited from Point.) 
See Also 
ContourPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	610 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Methods 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPoint type exposes the following members. 
Methods 
  	Name	Description 
Compares two points. To use binarysearch somekind of sorting should be used. 
(Inherited from Point.) 
Equals	Returns true if the current object and the given object are equal. 
(Inherited from Point.) 
Returns a hash code for the point. Notice, in extremely rare cases, you might not get the same hash code for two points even though they are considered equal! This should, however, happen only in extremely rare cases! 
(Inherited from Point.) 
SetPoint	Sets the point's coordinates for the contour point. 
ToString	Formats the point into a string. 
(Inherited from Point.) 
Translate	Translates the point using the given vector. 
(Inherited from Point.) 
Zero	Zeros all the members of the point. 
(Inherited from Point.) 
See Also 
ContourPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	611 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint..::..SetPoint Method 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the point's coordinates for the contour point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void SetPoint( 
Point P 
) 
Visual Basic 
Public Sub SetPoint (  
P As Point 
) 
Parameters 

P 
Type: Tekla.Structures.Geometry3d..::..Point The point. 
See Also 
ContourPoint Class 
ContourPoint Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	612 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint Properties 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ContourPoint type exposes the following members. 
Properties 
  	Name	Description 
Chamfer The chamfer for the contour point. 
See Also 
ContourPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	613 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ContourPoint..::..Chamfer Property 
ContourPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The chamfer for the contour point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Chamfer Chamfer { get; set; } 
Visual Basic 
Public Property Chamfer As Chamfer 
Get 
Set 
Property Value 
Type: Chamfer 
See Also 
ContourPoint Class 
ContourPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	614 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ControlCircle class defines a user defined (not magnetic) circle helping in modeling work. If there are duplicated input points or 3 input points are in a line, ControlCircle.Insert() will return false. ControlCircle.Select() will return the center point of the circle to Point1. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ControlCircle : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ControlCircle 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point p1 = new Point(4500, 4500, 0); 
           Point p2 = new Point(4500, 9000, 0); 
           Point p3 = new Point(0, 0, 0); 
           ControlCircle controlCircle = new ControlCirle(p1, p2, p3); 
bool Result = false; 
           Result = ControlCircle.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 

Inheritance Hierarchy	615 


Point Fields 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..ControlCircle 
See Also 
ControlCircle Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	616 


Point Fields 
ï»¿  
  Collapse AllExpand All          	  Code: All  Code: Multiple  Code: C#  Code: 
Visual Basic          	  Members: Show All  Members: Filtered  Members: 
Filtered  Members: Filtered   
C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Members 
ControlCircle Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlCircle type exposes the following members. 
Constructors 
  	Name	Description 
Initializes a new instance of the ControlCircle class. 

The default values are as follows: 
ControlCircle()()()() 


ControlCircle(Point, Point, Point) 



 Color = ControlCircleColorEnum.YELLOW; 
 Extension = 0.0; 
Initializes a new instance of the ControlCircle class. The control circle is not magnetic. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control circle with the given Identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetChildren	Returns an enumerator of all the children model 
objects. 

Methods	617 






GetCoordinateSystem 



Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 

Methods	618 




GetUserProperty(String, Int32%) 



Point Fields 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control circle into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control circle with the given Identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control circle with the given Identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Color	Gets or sets the color of the control circle. 
Extension Gets or sets the extension of the control circle. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Point1	Gets or sets the first point. Point1 becomes the center point of the 
circle after selecting the control circle. 
Point2	Gets or sets the second point. Point2 contains the original input Point1 
after selecting the control circle. 
Gets or sets the third point. Point3 contains the calculated result from the orthogonal point and the center point after selecting the control circle. 
See Also 
ControlCircle Class 
Tekla.Structures.Model Namespace 

See Also	619 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	620 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Constructor 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Initializes a new instance of the ControlCircle class. 

The default values are as follows: 
ControlCircle()()()() 


ControlCircle(Point, Point, Point) 



 Color = ControlCircleColorEnum.YELLOW; 
 Extension = 0.0; 
Initializes a new instance of the ControlCircle class. The control circle is not magnetic. 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	621 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Constructor 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the ControlCircle class. 

The default values are as follows: 

 Color = ControlCircleColorEnum.YELLOW; 
 Extension = 0.0; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlCircle() 
Visual Basic 
Public Sub New 
See Also 
ControlCircle Class 
ControlCircle Members ControlCircle Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	622 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Constructor (Point, Point, Point) 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the ControlCircle class. The control circle is not magnetic. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlCircle( 
Point point1, 
Point point2, 
Point point3 
) 
Visual Basic 
Public Sub New (  point1 As Point, point2 As Point, point3 As Point 
) 
Parameters 

point1 
Type: Tekla.Structures.Geometry3d..::..Point The first point to be used. 

point2 
Type: Tekla.Structures.Geometry3d..::..Point The second point to be used. 

point3 
Type: Tekla.Structures.Geometry3d..::..Point The third point to be used. 
See Also 
ControlCircle Class 
ControlCircle Members ControlCircle Overload Tekla.Structures.Model Namespace 

See Also	623 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	624 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Methods 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlCircle type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control circle with the given Identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	625 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control circle into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control circle with the given Identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control circle with the given Identifier. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty 

Methods	626 


Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
ControlCircle Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	627 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Delete Method 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the control circle with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	628 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Insert Method 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the control circle into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	629 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Modify Method 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the control circle with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	630 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Select Method 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the control circle with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	631 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle Properties 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlCircle type exposes the following members. 
Properties 
  	Name	Description 
Color	Gets or sets the color of the control circle. 
Extension Gets or sets the extension of the control circle. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Point1	Gets or sets the first point. Point1 becomes the center point of the 
circle after selecting the control circle. 
Point2	Gets or sets the second point. Point2 contains the original input Point1 
after selecting the control circle. 
Gets or sets the third point. Point3 contains the calculated result from the orthogonal point and the center point after selecting the control circle. 
See Also 
ControlCircle Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	632 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Color Property 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the color of the control circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlCircle..::..ControlCircleColorEnum Color { get; set; } 
Visual Basic 
Public Property Color As ControlCircle..::..ControlCircleColorEnum 
Get 
Set 
Property Value 

Type: ControlCircle..::..ControlCircleColorEnum 
See Also 
ControlCircle Class 
ControlCircle Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	633 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Extension Property 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the extension of the control circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Extension { get; set; } 
Visual Basic 
Public Property Extension As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	634 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Point1 Property 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the first point. Point1 becomes the center point of the circle after selecting the control circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Point1 { get; set; } 
Visual Basic 
Public Property Point1 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	635 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Point2 Property 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the second point. Point2 contains the original input Point1 after selecting the control circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Point2 { get; set; } 
Visual Basic 
Public Property Point2 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	636 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlCircle..::..Point3 Property 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the third point. Point3 contains the calculated result from the orthogonal point and the center point after selecting the control circle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Point3 { get; set; } 
Visual Basic 
Public Property Point3 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ControlCircle Class 
ControlCircle Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	637 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ControlCircle..::..ControlCircleColorEnum Enumeration 
ControlCircle Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different circle colors. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ControlCircleColorEnum 
Visual Basic 
Public Enumeration ControlCircleColorEnum 
Members 
Member name  Value		Description 
YELLOW_RED	-1	The yellow/red color. 
BLACK	0	The black color. 
WHITE	1	The white color. 
RED	2	The red color. 
GREEN	3	The green color. 
BLUE	4	The blue color. 
CYAN	5	The cyan color. 
YELLOW	6	The yellow color. 
MAGENTA	7	The magenta color. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	638 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ControlLine class defines a user defined (possibly magnetic) line helping in modeling work. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ControlLine : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ControlLine 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ControlLine controlLine = new ControlLine(); 
           LineSegment line = new LineSegment(); 
           line.Point1 = new Point(6000,6000,0); 
           line.Point2 = new Point(6000,12000,0); 
           controlLine.IsMagnetic = true; 
bool Result = false; 
           Result = controlLine.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 

Inheritance Hierarchy	639 


Point Fields 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..ControlLine 
See Also 
ControlLine Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	640 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Members 
ControlLine Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlLine type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new control line instance. 

The default values are as follows: 
ControlLine()()()() 



ControlLine(LineSegment, Boolean) 


 Line = new LineSegment(); 
 IsMagnetic = false; 
 Color = ControlLineColorEnum.YELLOW; 
 Extension = 0.0; 
Creates a new control line instance taking the line segment and magnetism as input. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control line with the given Identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 


Methods	641 





GetChildren 


GetCoordinateSystem 



Point Fields 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	642 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control line into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control line with the given Identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control line with the given Identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Color	The color of the control line. 
Extension	The extension of the control line. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic Determines whether the line is magnetic or not. 
Line	The line segment defining the position of the control line. See Also 
ControlLine Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	643 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Constructor 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Creates a new control line instance. 

The default values are as follows: 
ControlLine()()()() 



ControlLine(LineSegment, Boolean) 


 Line = new LineSegment(); 
 IsMagnetic = false; 
 Color = ControlLineColorEnum.YELLOW; 
 Extension = 0.0; 
Creates a new control line instance taking the line segment and magnetism as input. 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	644 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Constructor 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new control line instance. 

The default values are as follows: 

 Line = new LineSegment(); 
 IsMagnetic = false; 
 Color = ControlLineColorEnum.YELLOW; 
 Extension = 0.0; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlLine() 
Visual Basic 
Public Sub New 
See Also 
ControlLine Class 
ControlLine Members 
ControlLine Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	645 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Constructor (LineSegment, Boolean) 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new control line instance taking the line segment and magnetism as input. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlLine( 
LineSegment Line, 
bool IsMagnetic 
) 
Visual Basic 
Public Sub New (  
Line As LineSegment, 
IsMagnetic As Boolean 
) 
Parameters 

Line 
Type: Tekla.Structures.Geometry3d..::..LineSegment The line segment to be used. 

IsMagnetic 
Type: System..::..Boolean 
Determines whether the line is magnetic or not. See Also 
ControlLine Class 
ControlLine Members 
ControlLine Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	646 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Methods 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlLine type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control line with the given Identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	647 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control line into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control line with the given Identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control line with the given Identifier. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty 

Methods	648 


Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
ControlLine Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	649 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Delete Method 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the control line with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	650 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Insert Method 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the control line into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	651 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Modify Method 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the control line with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	652 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Select Method 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the control line with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	653 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine Properties 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlLine type exposes the following members. 
Properties 
  	Name	Description 
Color	The color of the control line. 
Extension	The extension of the control line. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic Determines whether the line is magnetic or not. 
Line	The line segment defining the position of the control line. See Also 
ControlLine Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	654 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Color Property 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The color of the control line. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlLine..::..ControlLineColorEnum Color { get; set; } 
Visual Basic 
Public Property Color As ControlLine..::..ControlLineColorEnum 
Get 
Set 
Property Value 

Type: ControlLine..::..ControlLineColorEnum 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	655 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Extension Property 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension of the control line. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Extension { get; set; } 
Visual Basic 
Public Property Extension As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	656 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..IsMagnetic Property 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Determines whether the line is magnetic or not. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsMagnetic { get; set; } 
Visual Basic 
Public Property IsMagnetic As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	657 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlLine..::..Line Property 
ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line segment defining the position of the control line. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LineSegment Line { get; set; } 
Visual Basic 
Public Property Line As LineSegment 
Get 
Set 
Property Value 

Type: LineSegment 
See Also 
ControlLine Class 
ControlLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	658 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ControlLine..::..ControlLineColorEnum Enumeration ControlLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different line colors. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ControlLineColorEnum 
Visual Basic 
Public Enumeration ControlLineColorEnum 
Members 
Member name  Value		Description 
YELLOW_RED	-1	The yellow/red color. 
BLACK	0	The black color. 
WHITE	1	The white color. 
RED	2	The red color. 
GREEN	3	The green color. 
BLUE	4	The blue color. 
CYAN	5	The cyan color. 
YELLOW	6	The yellow color. 
MAGENTA	7	The magenta color. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	659 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ControlPlane class defines a user defined (possibly magnetic) plane helping in modeling work. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ControlPlane : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ControlPlane 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ControlPlane controlPlane = new ControlPlane(); 
           Plane plane = new Plane(); 
           plane.Origin = new Point(6000,6000,0);            plane.AxisX = new Vector(-3000,0,0); 
           plane.AxisY = new Vector(0,6000,0); 
           controlPlane.Plane = plane; 
           controlPlane.IsMagnetic = true; 
bool Result = false; 
           Result = controlPlane.Insert(); 
       } 
} 




Examples	660 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..ControlPlane 
See Also 
ControlPlane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	661 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Members 
ControlPlane Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlPlane type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new control plane instance. 

The default values are as follows: 
ControlPlane()()()() 
 Plane = new Plane(); 
 IsMagnetic = false; 
 Name = "Plane"; 
ControlPlane(Plane, Boolean) 


Creates a new control plane instance taking the plane and magnetism as input. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control plane with the given ID. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 

GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 

Methods	662 








GetCoordinateSystem 



Point Fields 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	663 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control plane into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control plane with the given ID. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control plane with the given ID. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic Determines whether the plane is magnetic or not. 
Name	The name of the control plane. 
Plane	The plane defining the position of the control plane. 
See Also 
ControlPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	664 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Constructor 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Creates a new control plane instance. 

The default values are as follows: 
ControlPlane()()()() 
 Plane = new Plane(); 
 IsMagnetic = false; 
 Name = "Plane"; 
ControlPlane(Plane, Boolean) 


Creates a new control plane instance taking the plane and magnetism as input. 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	665 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Constructor 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new control plane instance. 

The default values are as follows: 

 Plane = new Plane(); 
 IsMagnetic = false; 
 Name = "Plane"; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlPlane() 
Visual Basic 
Public Sub New 
See Also 
ControlPlane Class 
ControlPlane Members 
ControlPlane Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	666 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Constructor (Plane, Boolean) 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new control plane instance taking the plane and magnetism as input. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlPlane( 
Plane P, 
bool IsMagnetic 
) 
Visual Basic 
Public Sub New (  
P As Plane, 
IsMagnetic As Boolean 
) 
Parameters 

P 
Type: Tekla.Structures.Model..::..Plane The plane to be used. 

IsMagnetic 
Type: System..::..Boolean 
Determines whether the plane is magnetic or not. See Also 
ControlPlane Class 
ControlPlane Members 
ControlPlane Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	667 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Methods 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlPlane type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control plane with the given ID. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	668 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control plane into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control plane with the given ID. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control plane with the given ID. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty 

Methods	669 


Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
ControlPlane Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	670 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..Delete Method 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the control plane with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	671 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..Insert Method 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the control plane into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	672 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..Modify Method 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the control plane with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	673 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..Select Method 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the control plane with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	674 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane Properties 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlPlane type exposes the following members. 
Properties 
  	Name	Description 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic Determines whether the plane is magnetic or not. 
Name	The name of the control plane. 
Plane	The plane defining the position of the control plane. 
See Also 
ControlPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	675 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..IsMagnetic Property 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Determines whether the plane is magnetic or not. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsMagnetic { get; set; } 
Visual Basic 
Public Property IsMagnetic As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	676 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..Name Property 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the control plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	677 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPlane..::..Plane Property 
ControlPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The plane defining the position of the control plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Plane Plane { get; set; } 
Visual Basic 
Public Property Plane As Plane 
Get 
Set 
Property Value 
Type: Plane 
See Also 
ControlPlane Class 
ControlPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	678 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ControlPoint class defines a user defined point helping in modeling work. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ControlPoint : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ControlPoint 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Point point = new Point(6000,6000,0); 
           ControlPoint controlpoint = new ControlPoint(point); 
bool Result = false; 
           Result = controlpoint.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..ControlPoint 





Inheritance Hierarchy	679 


Point Fields 

See Also 
ControlPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	680 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Members 
ControlPoint Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlPoint type exposes the following members. 
Constructors 
  	Name	Description 
ControlPoint()()()()	Initializes a new instance of the ControlPoint class with zero 
members. 
ControlPoint(Point)	Initializes a new instance of the ControlPoint class with an 
existing point. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control point with the given Identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	681 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	682 


Point Fields 
Insert	Inserts the control point into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control point with the given Identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control point with the given Identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
Point	Gets or sets the position of the control point. 
See Also 
ControlPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	683 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Constructor 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
ControlPoint()()()()	Initializes a new instance of the ControlPoint class with zero 
members. 
ControlPoint(Point)	Initializes a new instance of the ControlPoint class with an 
existing point. 
See Also 
ControlPoint Class 
ControlPoint Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	684 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Constructor 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the ControlPoint class with zero members. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlPoint() 
Visual Basic 
Public Sub New 
See Also 
ControlPoint Class 
ControlPoint Members 
ControlPoint Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	685 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Constructor (Point) 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the ControlPoint class with an existing point. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ControlPoint( 
Point existPoint 
) 
Visual Basic 
Public Sub New (  
existPoint As Point 
) 
Parameters 

existPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
An existing point 
See Also 
ControlPoint Class 
ControlPoint Members 
ControlPoint Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	686 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Methods 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlPoint type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the control point with the given Identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	687 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the control point into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the control point with the given Identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the control point with the given Identifier. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty 

Methods	688 


Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
ControlPoint Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	689 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint..::..Delete Method 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the control point with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPoint Class 
ControlPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	690 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint..::..Insert Method 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the control point into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPoint Class 
ControlPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	691 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint..::..Modify Method 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the control point with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPoint Class 
ControlPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	692 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint..::..Select Method 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the control point with the given Identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ControlPoint Class 
ControlPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	693 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint Properties 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ControlPoint type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
Point	Gets or sets the position of the control point. 
See Also 
ControlPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	694 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ControlPoint..::..Point Property 
ControlPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the position of the control point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Point { get; set; } 
Visual Basic 
Public Property Point As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ControlPoint Class 
ControlPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	695 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The CurvedRebarGroup class represents a group of reinforcing bars which have a curved shape. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class CurvedRebarGroup : BaseRebarGroup 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class CurvedRebarGroup 
Inherits BaseRebarGroup 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(5000, 8000, 0), new Point(6000, 8000, 0));            Beam.Profile.ProfileString = "D500"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Finish = "PAINT"; 
           Beam.Insert(); 
double MinimumX = Beam.GetSolid().MinimumPoint.X; double MinimumY = Beam.GetSolid().MinimumPoint.Y; double MinimumZ = Beam.GetSolid().MinimumPoint.Z; double MaximumX = Beam.GetSolid().MaximumPoint.X; double MaximumY = Beam.GetSolid().MaximumPoint.Y; double MaximumZ = Beam.GetSolid().MaximumPoint.Z; 
           CurvedRebarGroup CurvedRebarGroup = new CurvedRebarGroup(); 
           CurvedRebarGroup.Polygon.Points.Add(new Point(MinimumX, MaximumY, MinimumZ));            CurvedRebarGroup.Polygon.Points.Add(new Point(MinimumX, MinimumY, MinimumZ));            CurvedRebarGroup.Polygon.Points.Add(new Point(MinimumX, MinimumY, MaximumZ));            CurvedRebarGroup.StartPoint = new Point(MinimumX, MaximumY, MinimumZ); 

Examples	696 


Point Fields 
           CurvedRebarGroup.EndPoint = new Point(MaximumX, MaximumY, MinimumZ); 
           CurvedRebarGroup.Father = Beam; 
           CurvedRebarGroup.RadiusValues.Add(40.0); 
           CurvedRebarGroup.SpacingType = BaseRebarGroup.RebarGroupSpacingTypeEnum.SPACING_TYPE_E            CurvedRebarGroup.Spacings.Add(30); //if you use: RebarGroup.Spacings.Add(30.0); ->then            CurvedRebarGroup.ExcludeType = BaseRebarGroup.ExcludeTypeEnum.EXCLUDE_TYPE_NONE; 
           CurvedRebarGroup.Name = "RebarGroup"; 
           CurvedRebarGroup.Class = 3; 
           CurvedRebarGroup.Size = "8"; 
           CurvedRebarGroup.NumberingSeries.StartNumber = 0; 
           CurvedRebarGroup.NumberingSeries.Prefix = "Group"; 
           CurvedRebarGroup.Grade = "A500HW"; 
           CurvedRebarGroup.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..BaseRebarGroup 
                    Tekla.Structures.Model..::..CurvedRebarGroup 
See Also 
CurvedRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	697 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup Members 
CurvedRebarGroup Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CurvedRebarGroup type exposes the following members. 
Constructors 
  	Name	Description 
CurvedRebarGroup Initializes a new curved rebar group instance with empty 
attributes. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the curved rebar group instance with the given identifier from the model database. (Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 


Methods	698 





GetChildren 


GetCoordinateSystem 



GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 





GetRebarGeometries 



Point Fields 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 


Methods	699 


Point Fields 




GetRebarGeometriesWithoutClashes 





GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 





Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is 

Methods	700 








GetStringUserProperties 



Point Fields 
faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the curved rebar group into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing curved rebar group in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a curved rebar group from the model database. The identifier of the curved rebar group must be set. (Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


object. 
(Inherited from ModelObject.) 


Methods	701 


Point Fields 

SetUserProperty(String, Int32) 


SetUserProperty(String, String) 





Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
EndHook	The hook at the end of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The end point of the direction in which the bars are 
EndPoint 




EndPointOffsetType 




EndPointOffsetValue 





ExcludeType 





Father 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

(Inherited from BaseRebarGroup.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Inherited from BaseRebarGroup.) 
Grade	Gets or sets the steel grade of the reinforcing bar. The 
grade indicates the strength of the steel used in 

Properties	702 


Point Fields 
reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	A polygon definition for the curved reinforcing bar 
group shape. The polygon must have 3 points. RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
(Inherited from BaseRebarGroup.) 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only 
Spacings 








SpacingType 


one value that defines the number of the reinforcing bars. 
(Inherited from BaseRebarGroup.) 
The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
(Inherited from BaseRebarGroup.) StartFromPlaneOffset	The start offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
StartHook	The hook at the beginning of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
StartPoint 

Properties	703 








StartPointOffsetType 


StartPointOffsetValue 



Point Fields 
The start point of the direction in which the bars are distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
See Also 
CurvedRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
































See Also	704 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup Constructor 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new curved rebar group instance with empty attributes. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CurvedRebarGroup() 
Visual Basic 
Public Sub New 
See Also 
CurvedRebarGroup Class 
CurvedRebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	705 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup Methods 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CurvedRebarGroup type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the curved rebar group instance with the given identifier from the model database. (Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	706 










GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical 

Methods	707 


Point Fields 




GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 







GetSolid 



GetStringReportProperties 



GetStringUserProperties 





points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 


Methods	708 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the curved rebar group into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing curved rebar group in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a curved rebar group from the model database. The identifier of the curved rebar group must be set. (Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 


Methods	709 


Point Fields 

See Also 
CurvedRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	710 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup..::..Delete Method 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the curved rebar group instance with the given identifier from the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CurvedRebarGroup Class CurvedRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	711 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup..::..Insert Method 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the curved rebar group into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CurvedRebarGroup Class CurvedRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	712 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup..::..Modify Method 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing curved rebar group in the model database to match the current one. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CurvedRebarGroup Class CurvedRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	713 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup..::..Select Method 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a curved rebar group from the model database. The identifier of the curved rebar group must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CurvedRebarGroup Class CurvedRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	714 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup Properties 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CurvedRebarGroup type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
EndHook	The hook at the end of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The end point of the direction in which the bars are 
EndPoint 




EndPointOffsetType 




EndPointOffsetValue 





ExcludeType 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

(Inherited from BaseRebarGroup.) 

Properties	715 





Father 


FromPlaneOffset 



Point Fields 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Inherited from BaseRebarGroup.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	A polygon definition for the curved reinforcing bar 
group shape. The polygon must have 3 points. RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
(Inherited from BaseRebarGroup.) 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only one value that defines the number of the reinforcing bars. 
(Inherited from BaseRebarGroup.) 
SpacingType	The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 


Properties	716 


Point Fields 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
(Inherited from BaseRebarGroup.) StartFromPlaneOffset	The start offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
StartHook	The hook at the beginning of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The start point of the direction in which the bars are 
StartPoint 


StartPointOffsetType 


StartPointOffsetValue 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
See Also 
CurvedRebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

























See Also	717 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CurvedRebarGroup..::..Polygon Property 
CurvedRebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A polygon definition for the curved reinforcing bar group shape. The polygon must have 3 points. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Polygon 
Get 
Set 
Property Value 
Type: Polygon 
See Also 
CurvedRebarGroup Class CurvedRebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	718 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The CustomPart class represents a custom part object in the Tekla Structures model. A custom part is a modeling tool that typically assembles multiple parts to build some type of a beam-like structure, for example a tapered beam or a sandwich panel. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class CustomPart : BaseComponent,  
IAssemblable 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class CustomPart 
Inherits BaseComponent 
Implements IAssemblable 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           CustomPart CPart = new CustomPart(); 
           CPart.Name = "HPKM39"; 
           CPart.Number = BaseComponent.CUSTOM_OBJECT_NUMBER; 
           CPart.Position.Plane = Position.PlaneEnum.LEFT; 
           CPart.Position.PlaneOffset = 10; 
           CPart.Position.Depth = Position.DepthEnum.BEHIND; 
           CPart.Position.DepthOffset = 30; 
           CPart.Position.RotationOffset = 45; 
           CPart.Position.Rotation = Position.RotationEnum.TOP; 
           CPart.SetInputPositions(new Point(100, 0, 0), new Point(300, 0, 0));            CPart.SetAttribute("P2a", "TEST"); 
           CPart.Insert(); 
       } 
} 


Examples	719 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseComponent                 Tekla.Structures.Model..::..CustomPart 
See Also 
CustomPart Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	720 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Members 
CustomPart Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CustomPart type exposes the following members. 
Constructors 
  	Name	Description 
CustomPart()()()()	Creates a new custom part instance. CustomPart(Point, 
Point) 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the custom part instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the custom part belongs 
to. 
GetAttribute(String, 
Double%) 



Methods	721 





GetAttribute(String, String%) 



Point Fields 
(Inherited from BaseComponent.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
GetComponents	Returns an enumerator of all the connected 
components. 
Returns the coordinate system for the given model 
GetCoordinateSystem 


object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetStartAndEndPositions	Returns the start and end points of the custom part. 

Methods	722 


Point Fields 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the custom part into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the 
LoadAttributesFromFile 




Modify 


SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing custom part in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a custom part from the model database. The custom part identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
SetInputPositions	Sets the start and end point of the custom part. 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 


Methods	723 




SetUserProperty(String, Int32) 
SetUserProperty(String, String) 



Point Fields 
(Inherited from ModelObject.) 

Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom components or 
Name 


plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
Position	The way the custom part is positioned in the model. 
See Also 
CustomPart Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	724 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Constructor 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
CustomPart()()()()	Creates a new custom part instance. CustomPart(Point, 
Point) 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	725 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Constructor 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new custom part instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CustomPart() 
Visual Basic 
Public Sub New 
See Also 
CustomPart Class 
CustomPart Members 
CustomPart Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	726 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Constructor (Point, Point) 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new custom part instance with the given input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CustomPart( 
Point StartPoint, 
Point EndPoint 
) 
Visual Basic 
Public Sub New (  
StartPoint As Point, 
EndPoint As Point 
) 
Parameters 

StartPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The start point of the custom part. 

EndPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The end point of the custom part. 
See Also 
CustomPart Class 
CustomPart Members 
CustomPart Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	727 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Methods 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CustomPart type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the custom part instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the custom part belongs 
to. 
GetAttribute(String, 
Double%) 


Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
Returns an enumerator of all the children model 
GetChildren 

GetComponents 


objects. 
(Inherited from ModelObject.) 

Methods	728 







GetCoordinateSystem 



Point Fields 
Returns an enumerator of all the connected components. 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetStartAndEndPositions	Returns the start and end points of the custom part. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	729 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the custom part into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the 
LoadAttributesFromFile 




Modify 


SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing custom part in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a custom part from the model database. The custom part identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
SetInputPositions	Sets the start and end point of the custom part. 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 




Methods	730 


Point Fields 

See Also 
CustomPart Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	731 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..Delete Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the custom part instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	732 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..GetAssembly Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the assembly that the custom part belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly GetAssembly() 
Visual Basic 
Public Function GetAssembly As Assembly 
Return Value 

Type: Assembly 
The assembly that the custom part belongs to. 

Implements 

IAssemblable..::..GetAssembly()()()() 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	733 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..GetComponents Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected components. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetComponents() 
Visual Basic 
Public Function GetComponents As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A ModelObjectEnumerator on success, otherwise null. 
See Also 
CustomPart Class 
CustomPart Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	734 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CustomPart..::..GetStartAndEndPositions Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the start and end points of the custom part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetStartAndEndPositions( 
ref Point StartPoint, 
ref Point EndPoint 
) 
Visual Basic 
Public Function GetStartAndEndPositions (  
ByRef StartPoint As Point, 
ByRef EndPoint As Point 
) As Boolean 
Parameters 

StartPoint 
Type: Tekla.Structures.Geometry3d..::..Point% 
The start point of the custom part. 

EndPoint 
Type: Tekla.Structures.Geometry3d..::..Point% 
The end point of the custom part. 

Return Value 
Type: Boolean 
True on success. 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	735 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..Insert Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the custom part into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	736 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..Modify Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing custom part in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
Remarks 
Currently position attributes cannot be changed with Modify(). 
See Also 
CustomPart Class 
CustomPart Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	737 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..Select Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a custom part from the model database. The custom part identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	738 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CustomPart..::..SetInputPositions Method 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the start and end point of the custom part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetInputPositions( 
Point StartPoint, 
Point EndPoint 
) 
Visual Basic 
Public Function SetInputPositions (  
StartPoint As Point, 
EndPoint As Point 
) As Boolean 
Parameters 

StartPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The start point of the custom part. 

EndPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The end point of the custom part. 

Return Value 
Type: Boolean 
True on success. 
See Also 
CustomPart Class 
CustomPart Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	739 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart Properties 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CustomPart type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom components or 
Name 


plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
Position	The way the custom part is positioned in the model. 
See Also 
CustomPart Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	740 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPart..::..Position Property 
CustomPart Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The way the custom part is positioned in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position Position { get; set; } 
Visual Basic 
Public Property Position As Position 
Get 
Set 
Property Value 
Type: Position 
Remarks 
Currently position attributes cannot be changed with Modify(). 
See Also 
CustomPart Class 
CustomPart Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	741 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The CutPlane class defines how the end of a part is cut with a plane. A cut plane differs from a fitting because a cut can never extend the boundaries of the original part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class CutPlane : Boolean 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class CutPlane 
Inherits Boolean 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point Point = new Point(0, 0, 0); 
           Point Point2 = new Point(1000, 0, 0); 
           Beam Beam = new Beam(); 
           Beam.StartPoint = Point; 
           Beam.EndPoint = Point2; 
           Beam.Profile.ProfileString = "HEA400";            Beam.Finish = "PAINT"; 
           Beam.Insert(); 
           CutPlane CutPlane = new CutPlane(); 
           CutPlane.Plane = new Plane(); 
           CutPlane.Plane.Origin = new Point(0, 0, 0); 
           CutPlane.Plane.AxisX = new Vector(0, 1000, 0); 
           CutPlane.Plane.AxisY = new Vector(0, 0, -1000);            CutPlane.Father = Beam; 
           CutPlane.Insert(); 

Examples	742 


Point Fields 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Boolean 
                Tekla.Structures.Model..::..CutPlane 
See Also 
CutPlane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	743 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane Members 
CutPlane Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CutPlane type exposes the following members. 
Constructors 
  	Name	Description 
CutPlane Initializes a new instance of the CutPlane class with empty attributes. Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the cut plane instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple 

Methods	744 


Point Fields 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 
Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	745 








Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the cut plane into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing cut plane in the model database to match the current one. (Overrides ModelObject..::..Modify()()()().) 
Selects a cut plane from the model database. The part ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
Identifier The identifier of the object. 
(Inherited from Object.) 
Plane	The plane that cuts the part. 
See Also 
CutPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	746 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane Constructor 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the CutPlane class with empty attributes. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CutPlane() 
Visual Basic 
Public Sub New 
See Also 
CutPlane Class 
CutPlane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	747 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane Methods 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CutPlane type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the cut plane instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	748 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the cut plane into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing cut plane in the model database to match the current one. (Overrides ModelObject..::..Modify()()()().) 

Methods	749 





Select 


SetDynamicStringProperty 



Point Fields 
Selects a cut plane from the model database. The part ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
CutPlane Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	750 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane..::..Delete Method 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the cut plane instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CutPlane Class 
CutPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	751 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane..::..Insert Method 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the cut plane into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CutPlane Class 
CutPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	752 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane..::..Modify Method 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing cut plane in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CutPlane Class 
CutPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	753 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane..::..Select Method 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a cut plane from the model database. The part ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CutPlane Class 
CutPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	754 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane Properties 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CutPlane type exposes the following members. 
Properties 
  	Name	Description 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
Identifier The identifier of the object. 
(Inherited from Object.) 
Plane	The plane that cuts the part. 
See Also 
CutPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	755 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CutPlane..::..Plane Property 
CutPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The plane that cuts the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Plane Plane { get; set; } 
Visual Basic 
Public Property Plane As Plane 
Get 
Set 
Property Value 
Type: Plane 
See Also 
CutPlane Class 
CutPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	756 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The DeformingData class holds information about the deforming of parts. Deformed parts are parts that have been warped, cambered or shortened. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class DeformingData 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class DeformingData 
Examples 
The following example inserts a deformed beam: 

  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Beam MyBeam = new Beam(); 
           MyBeam.DeformingData.Angle = 0.0; 
           MyBeam.DeformingData.Angle2 = 45.00; 
           MyBeam.DeformingData.Cambering = 10.0; 
           MyBeam.DeformingData.Shortening = 20.0;            MyBeam.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..DeformingData 




Inheritance Hierarchy	757 


Point Fields 

See Also 
DeformingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	758 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData Members 
DeformingData Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DeformingData type exposes the following members. 
Constructors 
  	Name	Description 
DeformingData Instantiates a deforming data instance. Properties 
  	Name	Description 
The angle of the part at its start point, relative to the part reference line. 
Angle 
For example, if the beam is warped 45 degrees at the end point, in the Angle field the value is 0, and the value is 45 in the Angle2 field. 
The angle of the part at its end point, relative to the part reference line. 
Angle2 
For example, if the beam is warped 45 degrees at the end point, in the Angle field the value is 0, and the value is 45 in the Angle2 field. 
Cambering  The degree of cambering. Shortening The degree of shortening. 
See Also 
DeformingData Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	759 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData Constructor 
DeformingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Instantiates a deforming data instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DeformingData() 
Visual Basic 
Public Sub New 
See Also 
DeformingData Class 
DeformingData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	760 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData Properties 
DeformingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DeformingData type exposes the following members. 
Properties 
  	Name	Description 
The angle of the part at its start point, relative to the part reference line. 
Angle 
For example, if the beam is warped 45 degrees at the end point, in the Angle field the value is 0, and the value is 45 in the Angle2 field. 
The angle of the part at its end point, relative to the part reference line. 
Angle2 
For example, if the beam is warped 45 degrees at the end point, in the Angle field the value is 0, and the value is 45 in the Angle2 field. 
Cambering  The degree of cambering. Shortening The degree of shortening. 
See Also 
DeformingData Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	761 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData..::..Angle Property 
DeformingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The angle of the part at its start point, relative to the part reference line. 
For example, if the beam is warped 45 degrees at the end point, in the Angle field the value is 0, and the value is 45 in the Angle2 field. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Angle { get; set; } 
Visual Basic 
Public Property Angle As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
DeformingData Class DeformingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	762 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData..::..Angle2 Property 
DeformingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The angle of the part at its end point, relative to the part reference line. 
For example, if the beam is warped 45 degrees at the end point, in the Angle field the value is 0, and the value is 45 in the Angle2 field. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Angle2 { get; set; } 
Visual Basic 
Public Property Angle2 As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
DeformingData Class DeformingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	763 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData..::..Cambering Property 
DeformingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The degree of cambering. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Cambering { get; set; } 
Visual Basic 
Public Property Cambering As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
DeformingData Class DeformingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	764 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DeformingData..::..Shortening Property 
DeformingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The degree of shortening. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Shortening { get; set; } 
Visual Basic 
Public Property Shortening As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
DeformingData Class DeformingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	765 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Detail class represents a detail. A detail is different from a connection since the detail only connects to one part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Detail : BaseComponent 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Detail 
Inherits BaseComponent 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using Tekla.Structures; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam B = new Beam(new Point(13000,3000,-500), new Point(13000,3000,6000));            B.Profile.ProfileString = "HEA400"; 
           B.Material.MaterialString = "S235JR"; 
if(B.Insert()) 
           { 
               Detail D = new Detail(); 
               D.Name = "Test End Plate Detail"; 
               D.Number = 1002; 
               D.LoadAttributesFromFile("standard"); 
               D.UpVector = new Vector(0,0,0); 
               D.PositionType = PositionTypeEnum.MIDDLE_PLANE; 
               D.AutoDirectionType = AutoDirectionTypeEnum.AUTODIR_DETAIL;                D.DetailType = DetailTypeEnum.END; 
               D.SetPrimaryObject(B); 

Examples	766 


Point Fields 
               D.SetReferencePoint(new Point(13000,3000,3000)); 
               D.SetAttribute("el", 33.0); 
               D.SetAttribute("er", 33.0); 
if(!D.Insert()) 
               { 
                   Console.WriteLine("Detail Insert failed"); 
               } 
else 
               { 
                   Console.WriteLine(D.Identifier.ID); 
                   Double DValue = 0.0; 
if(!D.GetAttribute("er", ref DValue) || DValue != 33)                        Console.WriteLine("Detail GetAttribute failed"); 
               } 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseComponent 
                Tekla.Structures.Model..::..Detail 
See Also 
Detail Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	767 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Detail Members 
Detail Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Detail type exposes the following members. 
Constructors 
  	Name	Description 
Detail	Creates a new detail instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the detail instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
GetAttribute(String, Int32%) Retrieves the attribute with the given name. 
(Inherited from BaseComponent.) 
GetAttribute(String, 
String%) 



Methods	768 







GetCoordinateSystem 



Point Fields 
objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetPrimaryObject	Returns the primary object. 
GetReferencePoint	Returns the reference point. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 

Methods	769 





GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 



Point Fields 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the detail into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing detail in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a detail from the model database. The detail ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetPrimaryObject	Sets the detail's primary object. 
SetReferencePoint	Sets the reference point; the point the user would 
pick for the detail to appear to. 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. 

Methods	770 




SetUserProperty(String, String) 



Point Fields 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutoDirectionType The auto direction type. 
Class	The class of the detail. 
The code of the detail. The code can be used to classify the detail. The code can be reported and shown in drawings. The maximum length of the string is 20 characters. 
DetailType	The detail type. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom 
Name 


components or plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
PositionType	The position type. 
The read only status of the detail. The status can be reported and shown in drawings. The color of the detail symbol in the model indicates the status of the detail. 
UpVector	A vector indicating which direction is considered the up 
direction. 
See Also 
Detail Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	771 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail Constructor 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new detail instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Detail() 
Visual Basic 
Public Sub New 
See Also 
Detail Class 
Detail Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	772 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Detail Methods 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Detail type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the detail instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
GetAttribute(String, Int32%) Retrieves the attribute with the given name. 
(Inherited from BaseComponent.) 
GetAttribute(String, 
String%) 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 


Methods	773 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetPrimaryObject	Returns the primary object. 
GetReferencePoint	Returns the reference point. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 

Methods	774 




GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 



Point Fields 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the detail into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing detail in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a detail from the model database. The detail ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetPrimaryObject	Sets the detail's primary object. 
SetReferencePoint	Sets the reference point; the point the user would 
pick for the detail to appear to. 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Detail Class 
Tekla.Structures.Model Namespace 

See Also	775 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	776 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Delete Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the detail instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	777 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..GetPrimaryObject Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the primary object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject GetPrimaryObject() 
Visual Basic 
Public Function GetPrimaryObject As ModelObject 
Return Value 

Type: ModelObject 
The primary object of the detail. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	778 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..GetReferencePoint Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the reference point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point GetReferencePoint() 
Visual Basic 
Public Function GetReferencePoint As Point 
Return Value 

Type: Point 
The reference point. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	779 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Insert Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the detail into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	780 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Modify Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing detail in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	781 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Select Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a detail from the model database. The detail ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	782 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..SetPrimaryObject Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the detail's primary object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetPrimaryObject( 
ModelObject M 
) 
Visual Basic 
Public Function SetPrimaryObject (  
M As ModelObject 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..ModelObject The primary object. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	783 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..SetReferencePoint Method 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets the reference point; the point the user would pick for the detail to appear to. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetReferencePoint( 
Point ReferencePoint 
) 
Visual Basic 
Public Function SetReferencePoint (  
ReferencePoint As Point 
) As Boolean 
Parameters 

ReferencePoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The reference point. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	784 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Detail Properties 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Detail type exposes the following members. 
Properties 
  	Name	Description 
AutoDirectionType The auto direction type. 
Class	The class of the detail. 
The code of the detail. The code can be used to classify the detail. The code can be reported and shown in drawings. The maximum length of the string is 20 characters. 
DetailType	The detail type. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom 
Name 


components or plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
PositionType	The position type. 
The read only status of the detail. The status can be reported and shown in drawings. The color of the detail symbol in the model indicates the status of the detail. 
UpVector	A vector indicating which direction is considered the up 
direction. 
See Also 
Detail Class 
Tekla.Structures.Model Namespace 


See Also	785 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	786 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..AutoDirectionType Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The auto direction type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AutoDirectionTypeEnum AutoDirectionType { get; set; } 
Visual Basic 
Public Property AutoDirectionType As AutoDirectionTypeEnum 
Get 
Set 
Property Value 

Type: AutoDirectionTypeEnum 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	787 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Class Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The class of the detail. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Class { get; set; } 
Visual Basic 
Public Property Class As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	788 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Code Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The code of the detail. The code can be used to classify the detail. The code can be reported and shown in drawings. The maximum length of the string is 20 characters. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Code { get; set; } 
Visual Basic 
Public Property Code As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	789 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..DetailType Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The detail type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DetailTypeEnum DetailType { get; set; } 
Visual Basic 
Public Property DetailType As DetailTypeEnum 
Get 
Set 
Property Value 

Type: DetailTypeEnum 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	790 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..PositionType Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PositionTypeEnum PositionType { get; set; } 
Visual Basic 
Public Property PositionType As PositionTypeEnum 
Get 
Set 
Property Value 

Type: PositionTypeEnum 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	791 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..Status Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The read only status of the detail. The status can be reported and shown in drawings. The color of the detail symbol in the model indicates the status of the detail. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ConnectionStatusEnum Status { get; } 
Visual Basic 
Public ReadOnly Property Status As ConnectionStatusEnum 
Get 
Property Value 

Type: ConnectionStatusEnum 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	792 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Detail..::..UpVector Property 
Detail Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A vector indicating which direction is considered the up direction. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector UpVector { get; set; } 
Visual Basic 
Public Property UpVector As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Detail Class 
Detail Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	793 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The EdgeChamfer class defines how the part edge is chamfered. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class EdgeChamfer : Boolean 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class EdgeChamfer 
Inherits Boolean 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point Point = new Point(0, 0, 0); 
           Point Point2 = new Point(1000, 0, 0); 
           Beam Beam = new Beam(); 
           Beam.StartPoint = Point; 
           Beam.EndPoint = Point2; 
           Beam.Profile.ProfileString = "400*400";            Beam.Finish = "PAINT"; 
           Beam.Insert(); 
           EdgeChamfer EdgeChamfer = new EdgeChamfer(new Point(0, -100, 0), new Point(0, 200, 0))            EdgeChamfer.FirstChamferEndType = EdgeChamfer.ChamferEndTypeEnum.BEVELLED; 
           EdgeChamfer.FirstBevelDimension = 50; 
           EdgeChamfer.Chamfer.X = 20; 
           EdgeChamfer.Chamfer.Y = 20; 
           EdgeChamfer.Father = Beam; 
           EdgeChamfer.Insert(); 
       } 
} 

Examples	794 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Boolean 
                Tekla.Structures.Model..::..EdgeChamfer 
See Also 
EdgeChamfer Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	795 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Members 
EdgeChamfer Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The EdgeChamfer type exposes the following members. 
Constructors 
  	Name	Description 
EdgeChamfer()()()()	Initializes a new instance of the EdgeChamfer class with 
empty attributes. 
EdgeChamfer(Point, 
Point)	Initializes a new instance of the EdgeChamfer class. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the edge chamfer instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 

GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 

Methods	796 


Point Fields 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 


Methods	797 




GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Select 


SetDynamicStringProperty 



Point Fields 
(Inherited from ModelObject.) 

Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the edge chamfer into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing edge chamfer in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects an edge chamfer from the model database. The edge chamfer ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Chamfer	The chamfer values for the EdgeChamfer. 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
FirstBevelDimension	The bevel dimension if the first end is bevelled. FirstChamferEndType	The ChamferEndTypeEnum of the first end. 
FirstEnd	The start point of the EdgeChamfer. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the EdgeChamfer instance. 
SecondBevelDimension	The bevel dimension if the second end is bevelled. SecondChamferEndType The ChamferEndTypeEnum of the second end. 

Properties	798 


Point Fields 
SecondEnd	The end point of the EdgeChamfer. 
See Also 
EdgeChamfer Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	799 


Point Fields 
ï»¿  
  Collapse AllExpand All          	  Code: All  Code: Multiple  Code: C#  Code: 
Visual Basic          	  Members: Show All  Members: Filtered  Members: 
Filtered  Members: Filtered   
C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Constructor 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
EdgeChamfer()()()()	Initializes a new instance of the EdgeChamfer class with 
empty attributes. 
EdgeChamfer(Point, 
Point)	Initializes a new instance of the EdgeChamfer class. 
See Also 
EdgeChamfer Class 
EdgeChamfer Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	800 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Constructor 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the EdgeChamfer class with empty attributes. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public EdgeChamfer() 
Visual Basic 
Public Sub New 
See Also 
EdgeChamfer Class 
EdgeChamfer Members EdgeChamfer Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	801 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Constructor (Point, Point) 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the EdgeChamfer class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public EdgeChamfer( 
Point FirstEnd, 
Point SecondEnd 
) 
Visual Basic 
Public Sub New (  
FirstEnd As Point, 
SecondEnd As Point 
) 
Parameters 

FirstEnd 
Type: Tekla.Structures.Geometry3d..::..Point 
The first end point of the edge chamfer. 

SecondEnd 
Type: Tekla.Structures.Geometry3d..::..Point 
The second end point of the edge chamfer. See Also 
EdgeChamfer Class 
EdgeChamfer Members EdgeChamfer Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	802 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Methods 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The EdgeChamfer type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the edge chamfer instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	803 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the edge chamfer into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing edge chamfer in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 

Methods	804 





Select 


SetDynamicStringProperty 



Point Fields 
Selects an edge chamfer from the model database. The edge chamfer ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
EdgeChamfer Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	805 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..Delete Method 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the edge chamfer instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	806 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..Insert Method 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the edge chamfer into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	807 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..Modify Method 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing edge chamfer in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	808 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..Select Method 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects an edge chamfer from the model database. The edge chamfer ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	809 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer Properties 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The EdgeChamfer type exposes the following members. 
Properties 
  	Name	Description 
Chamfer	The chamfer values for the EdgeChamfer. 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
FirstBevelDimension	The bevel dimension if the first end is bevelled. FirstChamferEndType	The ChamferEndTypeEnum of the first end. 
FirstEnd	The start point of the EdgeChamfer. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the EdgeChamfer instance. 
SecondBevelDimension	The bevel dimension if the second end is bevelled. SecondChamferEndType The ChamferEndTypeEnum of the second end. SecondEnd	The end point of the EdgeChamfer. 
See Also 
EdgeChamfer Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	810 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..Chamfer Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The chamfer values for the EdgeChamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Chamfer Chamfer { get; set; } 
Visual Basic 
Public Property Chamfer As Chamfer 
Get 
Set 
Property Value 
Type: Chamfer 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	811 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 EdgeChamfer..::..FirstBevelDimension Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The bevel dimension if the first end is bevelled. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FirstBevelDimension { get; set; } 
Visual Basic 
Public Property FirstBevelDimension As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	812 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 EdgeChamfer..::..FirstChamferEndType Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ChamferEndTypeEnum of the first end. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public EdgeChamfer..::..ChamferEndTypeEnum FirstChamferEndType { get; set; } 
Visual Basic 
Public Property FirstChamferEndType As EdgeChamfer..::..ChamferEndTypeEnum 
Get 
Set 
Property Value 

Type: EdgeChamfer..::..ChamferEndTypeEnum 
See Also 
EdgeChamfer Class 
EdgeChamfer Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	813 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..FirstEnd Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The start point of the EdgeChamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point FirstEnd { get; set; } 
Visual Basic 
Public Property FirstEnd As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	814 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..Name Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the EdgeChamfer instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	815 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 EdgeChamfer..::..SecondBevelDimension Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The bevel dimension if the second end is bevelled. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SecondBevelDimension { get; set; } 
Visual Basic 
Public Property SecondBevelDimension As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	816 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 EdgeChamfer..::..SecondChamferEndType Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ChamferEndTypeEnum of the second end. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public EdgeChamfer..::..ChamferEndTypeEnum SecondChamferEndType { get; set; } 
Visual Basic 
Public Property SecondChamferEndType As EdgeChamfer..::..ChamferEndTypeEnum 
Get 
Set 
Property Value 

Type: EdgeChamfer..::..ChamferEndTypeEnum 
See Also 
EdgeChamfer Class 
EdgeChamfer Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	817 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeChamfer..::..SecondEnd Property 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The end point of the EdgeChamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point SecondEnd { get; set; } 
Visual Basic 
Public Property SecondEnd As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
EdgeChamfer Class 
EdgeChamfer Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	818 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 EdgeChamfer..::..ChamferEndTypeEnum Enumeration 
EdgeChamfer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The end type of the edge chamfer. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ChamferEndTypeEnum 
Visual Basic 
Public Enumeration ChamferEndTypeEnum 
Members 
Member name	Value	Description 
FULL	0	The chamfer continues to the end of 
the edge. 
STRAIGHT	1	The chamfer end is straight at the 
given point. 
BEVELLED	2	The chamfer end is bevelled at the 
given point. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	819 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Events class allows the user to register event listeners for model events. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Events : MarshalByRefObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Events 
Inherits MarshalByRefObject 
Remarks 
Asynchronous event handling 
Registered event handlers are called asynchronously so that many handlers may be running simultaneously. Event handlers are not guaranteed to be run in the same thread where they were registered. The asynchronous nature of the events requires the use of synchronization constructs on objects and data structures that are not defined to be thread safe. 

  

  

  


Microsoft's documentation about the lock statement: http://msdn.microsoft.com/en-us/library/c5kehkcz.aspx 
Microsoft's documentation about delegates: http://msdn.microsoft.com/en-us/library/900fyy8e.aspx 
Microsoft's documentation about managed threading: http://msdn.microsoft.com/en-us/library/1c9txz50.aspx 

Examples 
The following example shows how to make sure that only one selection event handler is running at a time. 

  	Copy 
using Tekla.Structures.Model; 

Examples	820 


Point Fields 

public class Example 
{ 
private Tekla.Structures.Model.Events _events = new Tekla.Structures.Model.Events(); private object _selectionEventHandlerLock = new object(); 
public void RegisterEventHandler() 
    { 
        _events.SelectionChange += Events_SelectionChangeEvent;         _events.Register(); 
    } 
public void UnRegisterEventHandler() 
    { 
        _events.UnRegister(); 
    } 
void Events_SelectionChangeEvent() 
    { 
/* Make sure that the inner code block is running synchronously */ lock(_selectionEventHandlerLock) 
        { 
            System.Console.WriteLine("Selection changed event received.");         } 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Model..::..Events 
See Also 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	821 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Events Members 
Events Class  Constructors  Methods  Events  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Events type exposes the following members. 
Constructors 
  	Name	Description 
Events Creates an empty events instance. 
Methods 
  	Name	Description 
Initializes the lifetime service. 
InitializeLifetimeService 


(Overrides MarshalByRefObject..::..InitializeLifetimeService()()()().) 
Registers the instance to listen to the specified events. More event delegates should not be added without calling UnRegister first. 
UnRegister	Unregisters the instance from listening to events. Events 
  	Name	Description 
ClashCheckDone	The ClashCheckDone event is raised just after clash check is 
completed. 
The ClashDetected event is raised just after the detection of 
ClashDetected 



ModelChanged 


each clash. The clash information is saved before the event is triggered. 
The ModelChanged event is raised just after some changes have been made to the model. 
Note, this event is however not triggered when UNDO or REDO are performed. 
ModelLoad	The ModelLoad event is raised just after a model has been 
loaded. 

Events	822 


Point Fields 
ModelSave	The ModelSave event is raised just after a model has been 
saved. 
ModelSaveAs	The ModelSaveAs event is raised just after a model has been 
saved using save as. 
Numbering	The Numbering event is raised just after a model has been 
numbered. 
SelectionChange	The SelectionChange event is raised when the user changes 
the current selection inside Tekla Structures. 
The TeklaStructuresExit event is raised just before Tekla Structures exits. After this event has been called the user 
TeklaStructuresExit 


will no longer be able to perform any calls to Tekla Structures. 
See Also 
Events Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






























See Also	823 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events Constructor 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates an empty events instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Events() 
Visual Basic 
Public Sub New 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	824 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Events Methods 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Events type exposes the following members. 
Methods 
  	Name	Description 
Initializes the lifetime service. 
InitializeLifetimeService 


(Overrides MarshalByRefObject..::..InitializeLifetimeService()()()().) 
Registers the instance to listen to the specified events. More event delegates should not be added without calling UnRegister first. 
UnRegister	Unregisters the instance from listening to events. 
See Also 
Events Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	825 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..InitializeLifetimeService Method 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes the lifetime service. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override Object InitializeLifetimeService() 
Visual Basic 
Public Overrides Function InitializeLifetimeService As Object 
Return Value 
Type: Object 
Always null. 
See Also 
Events Class 
Events Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	826 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..Register Method 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Registers the instance to listen to the specified events. More event delegates should not be added without calling UnRegister first. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Register() 
Visual Basic 
Public Sub Register 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	827 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..UnRegister Method 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Unregisters the instance from listening to events. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void UnRegister() 
Visual Basic 
Public Sub UnRegister 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	828 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Events Events 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Events type exposes the following members. 
Events 
  	Name	Description 
ClashCheckDone	The ClashCheckDone event is raised just after clash check is 
completed. 
The ClashDetected event is raised just after the detection of 
ClashDetected 



ModelChanged 


each clash. The clash information is saved before the event is triggered. 
The ModelChanged event is raised just after some changes have been made to the model. 
Note, this event is however not triggered when UNDO or REDO are performed. 
ModelLoad	The ModelLoad event is raised just after a model has been 
loaded. 
ModelSave	The ModelSave event is raised just after a model has been 
saved. 
ModelSaveAs	The ModelSaveAs event is raised just after a model has been 
saved using save as. 
Numbering	The Numbering event is raised just after a model has been 
numbered. 
SelectionChange	The SelectionChange event is raised when the user changes 
the current selection inside Tekla Structures. 
The TeklaStructuresExit event is raised just before Tekla Structures exits. After this event has been called the user 
TeklaStructuresExit 


will no longer be able to perform any calls to Tekla Structures. 





Events	829 


Point Fields 

See Also 
Events Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	830 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ClashCheckDone Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ClashCheckDone event is raised just after clash check is completed. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..ClashCheckDoneDelegate ClashCheckDone 
Visual Basic 
Public Event ClashCheckDone As Events..::..ClashCheckDoneDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..ClashCheckDoneDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	831 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ClashDetected Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ClashDetected event is raised just after the detection of each clash. The clash information is saved before the event is triggered. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..ClashDetectedDelegate ClashDetected 
Visual Basic 
Public Event ClashDetected As Events..::..ClashDetectedDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..ClashDetectedDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	832 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ModelChanged Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelChanged event is raised just after some changes have been made to the model. 

Note, this event is however not triggered when UNDO or REDO are performed. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..ModelChangedDelegate ModelChanged 
Visual Basic 
Public Event ModelChanged As Events..::..ModelChangedDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..ModelChangedDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	833 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ModelLoad Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelLoad event is raised just after a model has been loaded. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..ModelLoadDelegate ModelLoad 
Visual Basic 
Public Event ModelLoad As Events..::..ModelLoadDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..ModelLoadDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	834 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ModelSave Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelSave event is raised just after a model has been saved. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..ModelSaveDelegate ModelSave 
Visual Basic 
Public Event ModelSave As Events..::..ModelSaveDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..ModelSaveDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	835 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ModelSaveAs Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelSaveAs event is raised just after a model has been saved using save as. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..ModelSaveAsDelegate ModelSaveAs 
Visual Basic 
Public Event ModelSaveAs As Events..::..ModelSaveAsDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..ModelSaveAsDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	836 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..Numbering Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Numbering event is raised just after a model has been numbered. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..NumberingDelegate Numbering 
Visual Basic 
Public Event Numbering As Events..::..NumberingDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..NumberingDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	837 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..SelectionChange Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The SelectionChange event is raised when the user changes the current selection inside Tekla Structures. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..SelectionChangeDelegate SelectionChange 
Visual Basic 
Public Event SelectionChange As Events..::..SelectionChangeDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..SelectionChangeDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	838 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..TeklaStructuresExit Event 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The TeklaStructuresExit event is raised just before Tekla Structures exits. After this event has been called the user will no longer be able to perform any calls to Tekla Structures. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public event Events..::..TeklaStructuresExitDelegate TeklaStructuresExit 
Visual Basic 
Public Event TeklaStructuresExit As Events..::..TeklaStructuresExitDelegate 
Value 

Type: Tekla.Structures.Model..::..Events..::..TeklaStructuresExitDelegate 
See Also 
Events Class 
Events Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	839 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..ClashCheckDoneDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for clash check completion. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ClashCheckDoneDelegate( 
int NumbersOfClashes 
) 
Visual Basic 
Public Delegate Sub ClashCheckDoneDelegate (  
NumbersOfClashes As Integer 
) 
Parameters 

NumbersOfClashes 
Type: System..::..Int32 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	840 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..ClashDetectedDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The delegate to use for clash detection. Encapsulates any method that takes a clash check data object as a parameter. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ClashDetectedDelegate( 
ClashCheckData ClashData 
) 
Visual Basic 
Public Delegate Sub ClashDetectedDelegate (  
ClashData As ClashCheckData 
) 
Parameters 

ClashData 
Type: Tekla.Structures.Model..::..ClashCheckData 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	841 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..ModelChangedDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for database commit. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ModelChangedDelegate() 
Visual Basic 
Public Delegate Sub ModelChangedDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	842 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ModelLoadDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for model load. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ModelLoadDelegate() 
Visual Basic 
Public Delegate Sub ModelLoadDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	843 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..ModelSaveAsDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for model save as. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ModelSaveAsDelegate() 
Visual Basic 
Public Delegate Sub ModelSaveAsDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	844 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..ModelSaveDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for model save. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ModelSaveDelegate() 
Visual Basic 
Public Delegate Sub ModelSaveDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	845 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Events..::..NumberingDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for numbering. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void NumberingDelegate() 
Visual Basic 
Public Delegate Sub NumberingDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	846 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..SelectionChangeDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for selection change. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void SelectionChangeDelegate() 
Visual Basic 
Public Delegate Sub SelectionChangeDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	847 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Events..::..TeklaStructuresExitDelegate Delegate 
Events Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for Tekla Structures exit. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void TeklaStructuresExitDelegate() 
Visual Basic 
Public Delegate Sub TeklaStructuresExitDelegate 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	848 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Fitting class defines how the part end fits to a plane. A fitting can make the part either longer or shorter. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Fitting : Boolean 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Fitting 
Inherits Boolean 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point Point = new Point(0, 0, 0); 
           Point Point2 = new Point(1000, 0, 0); 
           Beam Beam = new Beam(); 
           Beam.StartPoint = Point; 
           Beam.EndPoint = Point2; 
           Beam.Profile.ProfileString = "HEA400";            Beam.Finish = "PAINT"; 
           Beam.Insert(); 
           Fitting Fitting = new Fitting(); 
           Fitting.Plane = new Plane(); 
           Fitting.Plane.Origin = new Point(500, 0, 0); 
           Fitting.Plane.AxisX = new Vector(0, 1000, 0); 
           Fitting.Plane.AxisY = new Vector(0, 0, -1000);            Fitting.Father = Beam; 
           Fitting.Insert(); 
       } 

Examples	849 


Point Fields 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Boolean 
                Tekla.Structures.Model..::..Fitting 
See Also 
Fitting Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	850 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Fitting Members 
Fitting Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Fitting type exposes the following members. 
Constructors 
  	Name	Description 
Fitting Initializes a new instance of the Fitting class with empty attributes. Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the fitting instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple 

Methods	851 


Point Fields 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 
Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	852 








Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the fitting into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing fitting in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a fitting from the model database. The fitting ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
Identifier The identifier of the object. 
(Inherited from Object.) 
Plane	The plane that fits the part. 
See Also 
Fitting Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	853 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting Constructor 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Fitting class with empty attributes. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Fitting() 
Visual Basic 
Public Sub New 
See Also 
Fitting Class 
Fitting Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	854 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Fitting Methods 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Fitting type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the fitting instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	855 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the fitting into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing fitting in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 

Methods	856 





Select 


SetDynamicStringProperty 



Point Fields 
Selects a fitting from the model database. The fitting ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Fitting Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	857 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting..::..Delete Method 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the fitting instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Fitting Class 
Fitting Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	858 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting..::..Insert Method 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the fitting into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Fitting Class 
Fitting Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	859 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting..::..Modify Method 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing fitting in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Fitting Class 
Fitting Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	860 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting..::..Select Method 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a fitting from the model database. The fitting ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Fitting Class 
Fitting Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	861 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Fitting Properties 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Fitting type exposes the following members. 
Properties 
  	Name	Description 
The father object of the boolean operation; the model object instance to operate on. 
(Inherited from Boolean.) 
Identifier The identifier of the object. 
(Inherited from Object.) 
Plane	The plane that fits the part. 
See Also 
Fitting Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	862 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Fitting..::..Plane Property 
Fitting Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The plane that fits the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Plane Plane { get; set; } 
Visual Basic 
Public Property Plane As Plane 
Get 
Set 
Property Value 
Type: Plane 
See Also 
Fitting Class 
Fitting Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	863 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Grid class defines a user defined (possibly magnetic) set of planes helping in modeling work. A grid has grid plane instances as children. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Grid : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Grid 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Grid Grid = new Grid(); 
           Grid.IsMagnetic = true; 
bool Result = false; 
           Result = Grid.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject             Tekla.Structures.Model..::..Grid 



Inheritance Hierarchy	864 


Point Fields 

See Also 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	865 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Grid Members 
Grid Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Grid type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new grid instance. 

The default values are as follows: 

 Name = "Grid"; 
 CoordinateX = "0.00 4*3000.00"; 
 CoordinateY = "0.00 5*6000.00"; 
CoordinateZ = "0.00 6000.00 8000.00 9000.00"; 
Grid 


 LabelX = "A B C D E"; 
 LabelY = "1 2 3 4 5 6"; 
 LabelZ = "+0 +6000 +8000 +9000"; 
 ExtensionLeftX = 2000.0; 
 ExtensionLeftY = 2000.0; 
 ExtensionLeftZ = 2000.0; 
 ExtensionRightX = 2000.0; 
 ExtensionRightY = 2000.0; 
 ExtensionRightZ = 2000.0; 
 IsMagnetic = false; 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the grid with the given ID. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 

Methods	866 





GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 



Point Fields 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 


Methods	867 




GetReportProperty(String, String%) 



Point Fields 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the grid into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the grid with the given ID. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the grid with the given ID. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Obsolete. 
Determines the color of the grid. This works only in 
Color 


wireframe views. The color of grids in rendered views can be changed using the advanced option XS_GRID_COLOR. 

Properties	868 


Point Fields 
CoordinateX	The coordinates for the X-axis. 
CoordinateY	The coordinates for the Y-axis. 
CoordinateZ	The coordinates for the Z-axis. 
ExtensionForMagneticArea Obsolete. 
The extension for the magnetic area. 
ExtensionLeftX	The extension to the left X-axis. ExtensionLeftY	The extension to the left Y-axis. ExtensionLeftZ	The extension to the left Z-axis. ExtensionRightX	The extension to the right X-axis. 
ExtensionRightY	The extension to the right Y-axis. ExtensionRightZ	The extension to the right Z-axis. Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic	Determines whether the grid is magnetic or not. 
LabelX	The labels for the X-axis. 
LabelY	The labels for the Y-axis. 
LabelZ	The labels for the Z-axis. 
Name	The name of the grid. 
See Also 
Grid Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	869 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid Constructor 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new grid instance. 

The default values are as follows: 

 Name = "Grid"; 
 CoordinateX = "0.00 4*3000.00"; 
 CoordinateY = "0.00 5*6000.00"; 
 CoordinateZ = "0.00 6000.00 8000.00 9000.00"; 
 LabelX = "A B C D E"; 
 LabelY = "1 2 3 4 5 6"; 
 LabelZ = "+0 +6000 +8000 +9000"; 
 ExtensionLeftX = 2000.0; 
 ExtensionLeftY = 2000.0; 
 ExtensionLeftZ = 2000.0; 
 ExtensionRightX = 2000.0; 
 ExtensionRightY = 2000.0; 
 ExtensionRightZ = 2000.0; 
 IsMagnetic = false; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Grid() 
Visual Basic 
Public Sub New 
See Also 
Grid Class 
Grid Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	870 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Grid Methods 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Grid type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the grid with the given ID. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	871 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the grid into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the grid with the given ID. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the grid with the given ID. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty 

Methods	872 


Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Grid Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	873 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..Delete Method 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the grid with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	874 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..Insert Method 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the grid into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	875 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..Modify Method 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the grid with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	876 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..Select Method 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the grid with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	877 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Grid Properties 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Grid type exposes the following members. 
Properties 
  	Name	Description 
Obsolete. 
Determines the color of the grid. This works only in wireframe views. The color of grids in rendered views can be changed using the advanced option XS_GRID_COLOR. 
CoordinateX	The coordinates for the X-axis. 
CoordinateY	The coordinates for the Y-axis. 
CoordinateZ	The coordinates for the Z-axis. 
ExtensionForMagneticArea Obsolete. 
The extension for the magnetic area. 
ExtensionLeftX	The extension to the left X-axis. ExtensionLeftY	The extension to the left Y-axis. ExtensionLeftZ	The extension to the left Z-axis. ExtensionRightX	The extension to the right X-axis. 
ExtensionRightY	The extension to the right Y-axis. ExtensionRightZ	The extension to the right Z-axis. Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic	Determines whether the grid is magnetic or not. 
LabelX	The labels for the X-axis. 
LabelY	The labels for the Y-axis. 
LabelZ	The labels for the Z-axis. 
Name	The name of the grid. 



Properties	878 


Point Fields 

See Also 
Grid Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	879 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..Color Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Determines the color of the grid. This works only in wireframe views. The color of grids in rendered views can be changed using the advanced option XS_GRID_COLOR. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported anymore.")] 
public int Color { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported anymore.")>  
Public Property Color As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	880 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..CoordinateX Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The coordinates for the X-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string CoordinateX { get; set; } 
Visual Basic 
Public Property CoordinateX As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	881 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..CoordinateY Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The coordinates for the Y-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string CoordinateY { get; set; } 
Visual Basic 
Public Property CoordinateY As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	882 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..CoordinateZ Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The coordinates for the Z-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string CoordinateZ { get; set; } 
Visual Basic 
Public Property CoordinateZ As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	883 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Grid..::..ExtensionForMagneticArea Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension for the magnetic area. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported anymore.")] 
public double ExtensionForMagneticArea { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported anymore.")>  
Public Property ExtensionForMagneticArea As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	884 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..ExtensionLeftX Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension to the left X-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionLeftX { get; set; } 
Visual Basic 
Public Property ExtensionLeftX As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	885 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..ExtensionLeftY Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension to the left Y-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionLeftY { get; set; } 
Visual Basic 
Public Property ExtensionLeftY As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	886 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..ExtensionLeftZ Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension to the left Z-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionLeftZ { get; set; } 
Visual Basic 
Public Property ExtensionLeftZ As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	887 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..ExtensionRightX Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension to the right X-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionRightX { get; set; } 
Visual Basic 
Public Property ExtensionRightX As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	888 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..ExtensionRightY Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension to the right Y-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionRightY { get; set; } 
Visual Basic 
Public Property ExtensionRightY As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	889 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..ExtensionRightZ Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension to the right Z-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionRightZ { get; set; } 
Visual Basic 
Public Property ExtensionRightZ As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	890 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..IsMagnetic Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Determines whether the grid is magnetic or not. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsMagnetic { get; set; } 
Visual Basic 
Public Property IsMagnetic As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	891 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..LabelX Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The labels for the X-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string LabelX { get; set; } 
Visual Basic 
Public Property LabelX As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	892 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..LabelY Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The labels for the Y-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string LabelY { get; set; } 
Visual Basic 
Public Property LabelY As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	893 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..LabelZ Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The labels for the Z-axis. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string LabelZ { get; set; } 
Visual Basic 
Public Property LabelZ As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	894 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Grid..::..Name Property 
Grid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the grid. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Grid Class 
Grid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	895 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The GridPlane class defines a user defined (possibly magnetic) plane helping in modeling work. A grid plane must always belong to a father grid instance. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class GridPlane : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class GridPlane 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           GridPlane GridPlane = new GridPlane(); 
           Plane plane = new Plane(); 
           plane.Origin = new Point(6000,6000,0);            plane.AxisX = new Vector(-3000,0,0); 
           plane.AxisY = new Vector(0,6000,0); 
           GridPlane.Plane = plane; 
           GridPlane.IsMagnetic = true; 
bool Result = false; 
           Result = GridPlane.Insert(); 
       } 
} 




Examples	896 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..GridPlane 
See Also 
GridPlane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	897 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Members 
GridPlane Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GridPlane type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new grid plane instance. 

The default values are as follows: 

 Plane = new Plane(); 
 Plane.Origin = new Point(500.0, 500.0, 0.0); 
 Plane.AxisX = new Vector(2000.0, 0.0, 0.0); 
GridPlane()()()() 







GridPlane(Plane, String) 


 Plane.AxisY = new Vector(0.0, 0.0, 2000.0); 
 Label = "Default"; 
 IsMagnetic = false; 
 ExtensionLeft = 2000.0; 
 ExtensionRight = 2000.0; 
 ExtensionBelow = 2000.0; 
 ExtensionAbove = 2000.0; 
 DrawingVisibility = false; 
Creates a new grid plane instance taking the plane and label as input. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the grid plane with the given ID. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) GetAllReportProperties	Retrieves all properties for the model object in one 
hashtable. Type for the returned value must be 
Methods	898 








GetAllUserProperties 


GetChildren 


GetCoordinateSystem 



Point Fields 
checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 

Methods	899 


Point Fields 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the grid plane into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the grid plane with the given ID. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the grid plane with the given ID. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Obsolete. 
The color of the grid plane. This works only in wireframe views. The color of grid planes in rendered views can be changed using the advanced option XS_GRID_COLOR. 
DrawingVisibility	The visibility of the grid plane in drawings. ExtensionAbove	The line extension above. 
ExtensionBelow	The line extension below. 

Properties	900 


Point Fields 
ExtensionForMagneticArea Obsolete. 
The extension for the magnetic area. 
ExtensionLeft	The line extension on the left. 
ExtensionRight	The line extension on the right. 
Father	The father grid of the grid plane. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic	Whether the grid plane is magnetic or not. 
Label	The label for the grid plane. 
Plane	The plane defining the position of the grid plane. 
See Also 
GridPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	901 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Constructor 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Creates a new grid plane instance. 

The default values are as follows: 

 Plane = new Plane(); 
 Plane.Origin = new Point(500.0, 500.0, 0.0); 
 Plane.AxisX = new Vector(2000.0, 0.0, 0.0); 
GridPlane()()()() 







GridPlane(Plane, String) 


 Plane.AxisY = new Vector(0.0, 0.0, 2000.0); 
 Label = "Default"; 
 IsMagnetic = false; 
 ExtensionLeft = 2000.0; 
 ExtensionRight = 2000.0; 
 ExtensionBelow = 2000.0; 
 ExtensionAbove = 2000.0; 
 DrawingVisibility = false; 
Creates a new grid plane instance taking the plane and label as input. 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	902 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Constructor 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new grid plane instance. 

The default values are as follows: 

 Plane = new Plane(); 
 Plane.Origin = new Point(500.0, 500.0, 0.0); 
 Plane.AxisX = new Vector(2000.0, 0.0, 0.0); 
 Plane.AxisY = new Vector(0.0, 0.0, 2000.0); 
 Label = "Default"; 
 IsMagnetic = false; 
 ExtensionLeft = 2000.0; 
 ExtensionRight = 2000.0; 
 ExtensionBelow = 2000.0; 
 ExtensionAbove = 2000.0; 
 DrawingVisibility = false; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GridPlane() 
Visual Basic 
Public Sub New 
See Also 
GridPlane Class 
GridPlane Members 
GridPlane Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	903 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Constructor (Plane, String) 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new grid plane instance taking the plane and label as input. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GridPlane( 
Plane Plane, 
string Label 
) 
Visual Basic 
Public Sub New (  
Plane As Plane, 
Label As String 
) 
Parameters 

Plane 
Type: Tekla.Structures.Model..::..Plane The plane that defines the grid plane. 

Label 
Type: System..::..String 
The label for the grid plane. 
See Also 
GridPlane Class 
GridPlane Members 
GridPlane Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	904 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Methods 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GridPlane type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the grid plane with the given ID. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	905 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the grid plane into the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the grid plane with the given ID. 
(Overrides ModelObject..::..Modify()()()().) 
Select	Selects the grid plane with the given ID. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty 

Methods	906 


Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
GridPlane Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	907 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Delete Method 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the grid plane with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	908 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Insert Method 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the grid plane into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	909 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Modify Method 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the grid plane with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	910 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Select Method 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the grid plane with the given ID. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	911 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane Properties 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GridPlane type exposes the following members. 
Properties 
  	Name	Description 
Obsolete. 
The color of the grid plane. This works only in wireframe views. The color of grid planes in rendered views can be changed using the advanced option XS_GRID_COLOR. 
DrawingVisibility	The visibility of the grid plane in drawings. ExtensionAbove	The line extension above. 
ExtensionBelow	The line extension below. 
ExtensionForMagneticArea Obsolete. 
The extension for the magnetic area. 
ExtensionLeft	The line extension on the left. 
ExtensionRight	The line extension on the right. 
Father	The father grid of the grid plane. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
IsMagnetic	Whether the grid plane is magnetic or not. 
Label	The label for the grid plane. 
Plane	The plane defining the position of the grid plane. 
See Also 
GridPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	912 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Color Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The color of the grid plane. This works only in wireframe views. The color of grid planes in rendered views can be changed using the advanced option XS_GRID_COLOR. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported anymore.")] 
public int Color { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported anymore.")>  
Public Property Color As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	913 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..DrawingVisibility Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The visibility of the grid plane in drawings. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool DrawingVisibility { get; set; } 
Visual Basic 
Public Property DrawingVisibility As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	914 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..ExtensionAbove Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line extension above. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionAbove { get; set; } 
Visual Basic 
Public Property ExtensionAbove As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	915 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..ExtensionBelow Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line extension below. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionBelow { get; set; } 
Visual Basic 
Public Property ExtensionBelow As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	916 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GridPlane..::..ExtensionForMagneticArea Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extension for the magnetic area. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported anymore.")] 
public double ExtensionForMagneticArea { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported anymore.")>  
Public Property ExtensionForMagneticArea As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	917 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..ExtensionLeft Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line extension on the left. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionLeft { get; set; } 
Visual Basic 
Public Property ExtensionLeft As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	918 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..ExtensionRight Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line extension on the right. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ExtensionRight { get; set; } 
Visual Basic 
Public Property ExtensionRight As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	919 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Father Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The father grid of the grid plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Grid Father { get; set; } 
Visual Basic 
Public Property Father As Grid 
Get 
Set 
Property Value 
Type: Grid 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	920 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..IsMagnetic Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Whether the grid plane is magnetic or not. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsMagnetic { get; set; } 
Visual Basic 
Public Property IsMagnetic As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	921 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Label Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The label for the grid plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Label { get; set; } 
Visual Basic 
Public Property Label As String 
Get 
Set 
Property Value 
Type: String 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	922 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GridPlane..::..Plane Property 
GridPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The plane defining the position of the grid plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Plane Plane { get; set; } 
Visual Basic 
Public Property Plane As Plane 
Get 
Set 
Property Value 
Type: Plane 
See Also 
GridPlane Class 
GridPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	923 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The HierarchicDefinition class defines a hierarchy structure. This hierarchy structure can be instantiated and extended by hierarchical objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class HierarchicDefinition : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class HierarchicDefinition 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           HierarchicDefinition scenarioDefinition = new HierarchicDefinition(); 
           scenarioDefinition.Name = "Scenario type"; 
           scenarioDefinition.HierarchyType = HierarchicDefinitionTypeEnum.DOT_HIERARCHIC_TASK_SC            scenarioDefinition.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..HierarchicDefinition 





Inheritance Hierarchy	924 


Point Fields 

See Also 
HierarchicDefinition Members Tekla.Structures.Model Namespace Tekla.Structures.Model..::..HierarchicObject 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	925 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Members 
HierarchicDefinition Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The HierarchicDefinition type exposes the following members. 
Constructors 
  	Name	Description 
HierarchicDefinition()()()()	Creates a new hierarchical definition instance. 
Instantiates a hierarchical definition with a 
known identifier. The instantiation has to be done 
HierarchicDefinition(Identifier) 


before the hierarchical definition instance can be selected. 
Methods 
  	Name	Description 
Associates hierarchical objects with the hierarchical definition. Fails if the hierarchical definition doesn't exist in the model. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the hierarchical definition instance from the model. The ID must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 

Methods	926 





GetChildren 


GetCoordinateSystem 



Point Fields 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	927 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


RemoveObjects 


Select 


SetDynamicStringProperty 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the hierarchical definition instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the hierarchical definition instance in the model. The ID must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Removes associations to the given list of hierarchical objects. Fails if the hierarchical definition doesn't exist in the model. 
Selects the hierarchical definition instance from the model. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
CustomType	The custom type of the hierarchical definition. 
Drawable	Defines whether the hierarchical definition is a drawable area 
in the model. 
Father	The father of the hierarchical definition. 
HierarchicChildren  An array list that contains the hierarchical definition's 
children. 
HierarchyIdentifier The GUID of the hierarchical definition. 


Properties	928 


Point Fields 
HierarchyType	The type of the hierarchical definition. Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the hierarchical definition. 
See Also 
HierarchicDefinition Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	929 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Constructor 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
HierarchicDefinition()()()()	Creates a new hierarchical definition instance. 
Instantiates a hierarchical definition with a 
known identifier. The instantiation has to be done 
HierarchicDefinition(Identifier) 

See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 


before the hierarchical definition instance can be selected. 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	930 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Constructor 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new hierarchical definition instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicDefinition() 
Visual Basic 
Public Sub New 
See Also 
HierarchicDefinition Class 
HierarchicDefinition Members 
HierarchicDefinition Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	931 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Constructor (Identifier) 
HierarchicDefinition Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Instantiates a hierarchical definition with a known identifier. The instantiation has to be done before the hierarchical definition instance can be selected. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicDefinition( 
Identifier ID 
) 
Visual Basic 
Public Sub New (  ID As Identifier 
) 
Parameters 

ID 
Type: Tekla.Structures..::..Identifier 
The identifier of an existing hierarchical definition. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures; 
public class Example 
{ 
public void Example1() 
       { 
           Identifier id = new Identifier(357); 
           HierarchicDefinition hierarchicalDefinition = new HierarchicDefinition(id); 
       } 
} 





Examples	932 


Point Fields 

See Also 
HierarchicDefinition Class HierarchicDefinition Members HierarchicDefinition Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	933 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Methods 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The HierarchicDefinition type exposes the following members. 
Methods 
  	Name	Description 
Associates hierarchical objects with the hierarchical definition. Fails if the hierarchical definition doesn't exist in the model. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the hierarchical definition instance from the model. The ID must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	934 


Point Fields 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the hierarchical definition instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 


Methods	935 





Modify 


RemoveObjects 


Select 


SetDynamicStringProperty 



Point Fields 
Modifies the hierarchical definition instance in the model. The ID must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Removes associations to the given list of hierarchical objects. Fails if the hierarchical definition doesn't exist in the model. 
Selects the hierarchical definition instance from the model. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
HierarchicDefinition Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	936 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..AddObjects Method 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Associates hierarchical objects with the hierarchical definition. Fails if the hierarchical definition doesn't exist in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddObjects( 
ArrayList Objects 
) 
Visual Basic 
Public Function AddObjects (  
Objects As ArrayList 
) As Boolean 
Parameters 

Objects 
Type: System.Collections..::..ArrayList The hierarchical objects. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	937 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition..::..Delete Method 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the hierarchical definition instance from the model. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 

Type: Boolean 
True if the deletion was successful. 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	938 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition..::..Insert Method 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the hierarchical definition instance in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 

Type: Boolean 
True if the insertion was successful. 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	939 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition..::..Modify Method 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the hierarchical definition instance in the model. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 

Type: Boolean 
True if the modification was successful. 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	940 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..RemoveObjects Method 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Removes associations to the given list of hierarchical objects. Fails if the hierarchical definition doesn't exist in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveObjects( 
ArrayList Objects 
) 
Visual Basic 
Public Function RemoveObjects (  
Objects As ArrayList 
) As Boolean 
Parameters 

Objects 
Type: System.Collections..::..ArrayList The hierarchical objects. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	941 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition..::..Select Method 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the hierarchical definition instance from the model. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 

Type: Boolean 
True if the selection was successful. 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	942 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition Properties 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The HierarchicDefinition type exposes the following members. 
Properties 
  	Name	Description 
CustomType	The custom type of the hierarchical definition. 
Drawable	Defines whether the hierarchical definition is a drawable area 
in the model. 
Father	The father of the hierarchical definition. 
HierarchicChildren  An array list that contains the hierarchical definition's 
children. 
HierarchyIdentifier The GUID of the hierarchical definition. 
HierarchyType	The type of the hierarchical definition. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the hierarchical definition. 
See Also 
HierarchicDefinition Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	943 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..CustomType Property 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The custom type of the hierarchical definition. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string CustomType { get; set; } 
Visual Basic 
Public Property CustomType As String 
Get 
Set 
Property Value 
Type: String 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	944 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..Drawable Property 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines whether the hierarchical definition is a drawable area in the model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Drawable { get; set; } 
Visual Basic 
Public Property Drawable As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	945 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition..::..Father Property 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The father of the hierarchical definition. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicDefinition Father { get; set; } 
Visual Basic 
Public Property Father As HierarchicDefinition 
Get 
Set 
Property Value 

Type: HierarchicDefinition 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	946 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..HierarchicChildren Property HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
An array list that contains the hierarchical definition's children. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList HierarchicChildren { get; set; } 
Visual Basic 
Public Property HierarchicChildren As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	947 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..HierarchyIdentifier Property HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GUID of the hierarchical definition. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string HierarchyIdentifier { get; set; } 
Visual Basic 
Public Property HierarchyIdentifier As String 
Get 
Set 
Property Value 
Type: String 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	948 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicDefinition..::..HierarchyType Property 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the hierarchical definition. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicDefinitionTypeEnum HierarchyType { get; set; } 
Visual Basic 
Public Property HierarchyType As HierarchicDefinitionTypeEnum 
Get 
Set 
Property Value 

Type: HierarchicDefinitionTypeEnum 
See Also 
HierarchicDefinition Class 
HierarchicDefinition Members 
Tekla.Structures.Model Namespace Tekla.Structures.Model..::..HierarchicDefinitionTypeEnum 

Copyright  © Tekla 2013. All rights reserved. 














See Also	949 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinition..::..Name Property 
HierarchicDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the hierarchical definition. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
HierarchicDefinition Class HierarchicDefinition Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	950 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicDefinitionTypeEnum Enumeration 
See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the different types of classification hierarchies. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum HierarchicDefinitionTypeEnum 
Visual Basic 
Public Enumeration HierarchicDefinitionTypeEnum 
Members 
Member name	Value	Description 
DOT_HIERARCHIC_CUSTOM_TYPE	0	The custom type 
classification hierarchy. 
DOT_HIERARCHIC_LOGICAL_BUILDING_AREA 1	The logical building area 
classification hierarchy. DOT_HIERARCHIC_OBJECT_TYPE	2	The object type classification 
hierarchy. DOT_HIERARCHIC_TASK_WORK_TYPE	3	The task work type 
classification hierarchy. DOT_HIERARCHIC_TASK_SCENARIO	4	The task scenario 
classification hierarchy. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	951 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The HierarchicObject class defines an object in a tree-structured hierarchy. The hierarchy structure is defined by hierarchical definitions which the hierarchical objects instantiate. Hierarchical objects may contain other hierarchical objects, thus forming a sub-hierarchy, or model objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class HierarchicObject : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class HierarchicObject 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           HierarchicDefinition scenarioDefinition = new HierarchicDefinition(); 
           scenarioDefinition.Name = "Scenario type"; 
           scenarioDefinition.HierarchyType = HierarchicDefinitionTypeEnum.DOT_HIERARCHIC_TASK_SC            scenarioDefinition.Insert(); 
           HierarchicObject scenario = new HierarchicObject();            scenario.Name = "First scenario"; 
           scenario.Definition = scenarioDefinition; 
           scenario.Insert(); 
       } 
} 





Examples	952 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..HierarchicObject 
See Also 
HierarchicObject Members 
Tekla.Structures.Model Namespace Tekla.Structures.Model..::..HierarchicDefinition 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	953 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Members 
HierarchicObject Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The HierarchicObject type exposes the following members. 
Constructors 
  	Name	Description 
HierarchicObject()()()()	Creates a new hierarchical object instance. 
Instantiates a hierarchical object with a known 
HierarchicObject(Identifier) 


identifier. The instantiation has to be done before the hierarchical definition instance can be selected. 
Methods 
  	Name	Description 
Associates model objects with the hierarchical object. Fails if the hierarchical definition doesn't exist in the model. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the hierarchical object instance from the model. The ID must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 

GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 

Methods	954 








GetCoordinateSystem 



Point Fields 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	955 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


RemoveObjects 


Select 


SetDynamicStringProperty 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the hierarchical object instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the hierarchical object instance in the model. The ID must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Removes associations to the given list of model objects. Fails if the hierarchical definition doesn't exist in the model. 
Selects the hierarchical object instance from the model. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Definition	The hierarchical definition which the hierarchical object is 
associated with. 
Father	The father of the hierarchical object. 
HierarchicChildren An array list that contains the hierarchical object's hierarchical children (of the type hierarchical object). 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the hierarchical object. 

Properties	956 


Point Fields 

See Also 
HierarchicObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	957 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Constructor 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
HierarchicObject()()()()	Creates a new hierarchical object instance. 
Instantiates a hierarchical object with a known 
HierarchicObject(Identifier) 


identifier. The instantiation has to be done before the hierarchical definition instance can be selected. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	958 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Constructor 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new hierarchical object instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicObject() 
Visual Basic 
Public Sub New 
See Also 
HierarchicObject Class 
HierarchicObject Members 
HierarchicObject Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	959 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Constructor (Identifier) 
HierarchicObject Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Instantiates a hierarchical object with a known identifier. The instantiation has to be done before the hierarchical definition instance can be selected. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicObject( 
Identifier ID 
) 
Visual Basic 
Public Sub New (  ID As Identifier 
) 
Parameters 

ID 
Type: Tekla.Structures..::..Identifier 
The identifier of an existing hierarchical object. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures; 
public class Example 
{ 
public void Example1() 
       { 
           Identifier id = new Identifier(357); 
           HierarchicObject hierarchicalObject = new HierarchicObject(id);        } 
} 





Examples	960 


Point Fields 

See Also 
HierarchicObject Class HierarchicObject Members HierarchicObject Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	961 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Methods 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The HierarchicObject type exposes the following members. 
Methods 
  	Name	Description 
Associates model objects with the hierarchical object. Fails if the hierarchical definition doesn't exist in the model. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the hierarchical object instance from the model. The ID must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	962 


Point Fields 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the hierarchical object instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 


Methods	963 





Modify 


RemoveObjects 


Select 


SetDynamicStringProperty 



Point Fields 
Modifies the hierarchical object instance in the model. The ID must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Removes associations to the given list of model objects. Fails if the hierarchical definition doesn't exist in the model. 
Selects the hierarchical object instance from the model. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
HierarchicObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	964 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicObject..::..AddObjects Method 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Associates model objects with the hierarchical object. Fails if the hierarchical definition doesn't exist in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddObjects( 
ArrayList Objects 
) 
Visual Basic 
Public Function AddObjects (  
Objects As ArrayList 
) As Boolean 
Parameters 

Objects 
Type: System.Collections..::..ArrayList The model objects. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	965 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Delete Method 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the hierarchical object instance from the model. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 

Type: Boolean 
True if the deletion was successful. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	966 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Insert Method 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the hierarchical object instance in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 

Type: Boolean 
True if the insertion was successful. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	967 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Modify Method 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the hierarchical object instance in the model. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 

Type: Boolean 
True if the modification was successful. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	968 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicObject..::..RemoveObjects Method 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Removes associations to the given list of model objects. Fails if the hierarchical definition doesn't exist in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveObjects( 
ArrayList Objects 
) 
Visual Basic 
Public Function RemoveObjects (  
Objects As ArrayList 
) As Boolean 
Parameters 

Objects 
Type: System.Collections..::..ArrayList The model objects. 

Return Value 
Type: Boolean 
True if successful. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	969 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Select Method 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the hierarchical object instance from the model. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 

Type: Boolean 
True if the selection was successful. 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	970 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject Properties 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The HierarchicObject type exposes the following members. 
Properties 
  	Name	Description 
Definition	The hierarchical definition which the hierarchical object is 
associated with. 
Father	The father of the hierarchical object. 
HierarchicChildren An array list that contains the hierarchical object's hierarchical children (of the type hierarchical object). 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	The name of the hierarchical object. 
See Also 
HierarchicObject Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	971 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Definition Property 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The hierarchical definition which the hierarchical object is associated with. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicDefinition Definition { get; set; } 
Visual Basic 
Public Property Definition As HierarchicDefinition 
Get 
Set 
Property Value 

Type: HierarchicDefinition 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	972 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Father Property 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The father of the hierarchical object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicObject Father { get; set; } 
Visual Basic 
Public Property Father As HierarchicObject 
Get 
Set 
Property Value 

Type: HierarchicObject 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	973 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 HierarchicObject..::..HierarchicChildren Property 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
An array list that contains the hierarchical object's hierarchical children (of the type hierarchical object). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList HierarchicChildren { get; set; } 
Visual Basic 
Public Property HierarchicChildren As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	974 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
HierarchicObject..::..Name Property 
HierarchicObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the hierarchical object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
HierarchicObject Class HierarchicObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	975 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
IAssemblable Interface 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IAssemblable interface dictates which model objects are capabable of belonging to an assembly at the leaf level. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public interface IAssemblable 
Visual Basic 
Public Interface IAssemblable 
See Also 
IAssemblable Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	976 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
IAssemblable Members 
IAssemblable Interface  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IAssemblable type exposes the following members. 
Methods 
  	Name	Description 
GetAssembly Returns the assembly that the assemblable belongs to. See Also 
IAssemblable Interface 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	977 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
IAssemblable Methods 
IAssemblable Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IAssemblable type exposes the following members. 
Methods 
  	Name	Description 
GetAssembly Returns the assembly that the assemblable belongs to. See Also 
IAssemblable Interface 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	978 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
IAssemblable..::..GetAssembly Method 
IAssemblable Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the assembly that the assemblable belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
Assembly GetAssembly() 
Visual Basic 
Function GetAssembly As Assembly 
Return Value 

Type: Assembly 
The assembly that the assemblable belongs to. 
See Also 
IAssemblable Interface IAssemblable Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	979 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputItem Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The InputItem class is used to store input objects and positions. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class InputItem 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class InputItem 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..InputItem 
See Also 
InputItem Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	980 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputItem Members 
InputItem Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The InputItem type exposes the following members. 
Methods 
  	Name	Description 
GetData	Returns the data of the input item. See also: 
InputItem..::..InputTypeEnum. 
GetInputType Returns the type of the input item. 
See Also 
InputItem Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	981 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputItem Methods 
InputItem Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The InputItem type exposes the following members. 
Methods 
  	Name	Description 
GetData	Returns the data of the input item. See also: 
InputItem..::..InputTypeEnum. 
GetInputType Returns the type of the input item. 
See Also 
InputItem Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	982 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputItem..::..GetData Method 
InputItem Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns the data of the input item. See also: InputItem..::..InputTypeEnum. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object GetData() 
Visual Basic 
Public Function GetData As Object 
Return Value 
Type: Object 
The input data. 
See Also 
InputItem Class 
InputItem Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	983 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputItem..::..GetInputType Method 
InputItem Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the type of the input item. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputItem..::..InputTypeEnum GetInputType() 
Visual Basic 
Public Function GetInputType As InputItem..::..InputTypeEnum 
Return Value 
Type: InputItem..::..InputTypeEnum The type of the input item. 
See Also 
InputItem Class 
InputItem Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	984 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputItem..::..InputTypeEnum Enumeration 
InputItem Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the type of the input. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum InputTypeEnum 
Visual Basic 
Public Enumeration InputTypeEnum 
Members 
Member name	Value	Description 
INPUT_1_POINT	0	The input is one point. The data is returned as a point. INPUT_2_POINTS	1	The input is two points. The data is returned as an array 
list of points. 
INPUT_POLYGON	2	The input is any number of points (a polygon). The data 
is returned as an array list of points. 
INPUT_1_OBJECT	3	The input is one model object. The data is returned as a 
model object. 
INPUT_N_OBJECTS 4	The input is any number of model objects. The data is 
returned as an array list of model objects. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	985 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Load class is an abstract base class for all loads. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class Load : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class Load 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Load 
                Tekla.Structures.Model..::..LoadArea 
                Tekla.Structures.Model..::..LoadLine 
                Tekla.Structures.Model..::..LoadPoint 
                Tekla.Structures.Model..::..LoadTemperature 
                Tekla.Structures.Model..::..LoadUniform 
See Also 
Load Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	986 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Load Members 
Load Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Load type exposes the following members. 
Constructors 
  	Name	Description 
Load	Creates a new load instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple properties at once. 

Methods	987 






GetDoubleUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 
Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	988 








Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. BoundingBoxDx	The dimension of the bounding box 
in the X direction. 
BoundingBoxDy	The dimension of the bounding box 
in the Y direction. 
BoundingBoxDz	The dimension of the bounding box 
in the Z direction. 
Indicates whether fixed support conditions are created automatically. 
FatherId	The identifier of the father object 
that the load is attached to. 
Group	The load group object for the load. 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 


Properties	989 


Point Fields 
LoadDispersionAngle	The load dispersion angle. 
PartFilter	The part filter. 
PartNames	The part names. 
PrimaryAxisDirection	The vector for the primary axis 
direction. 
Spanning	The load spanning. 
Weight	The weight. 
See Also 
Load Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	990 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load Constructor 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new load instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Load() 
Visual Basic 
Public Sub New 
See Also 
Load Class 
Load Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	991 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Load Methods 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Load type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the instance from the model database. 
(Inherited from ModelObject.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


GetDoubleUserProperties 

GetDynamicStringProperty 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 

Methods	992 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 

Methods	993 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Load Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	994 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Load Properties 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Load type exposes the following members. 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. BoundingBoxDx	The dimension of the bounding box 
in the X direction. 
BoundingBoxDy	The dimension of the bounding box 
in the Y direction. 
BoundingBoxDz	The dimension of the bounding box 
in the Z direction. 
Indicates whether fixed support conditions are created automatically. 
FatherId	The identifier of the father object 
that the load is attached to. 
Group	The load group object for the load. 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
LoadDispersionAngle	The load dispersion angle. 
PartFilter	The part filter. 
PartNames	The part names. 
PrimaryAxisDirection	The vector for the primary axis 
direction. 
Spanning	The load spanning. 
Weight	The weight. 




Properties	995 


Point Fields 

See Also 
Load Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	996 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Load..::..AutomaticPrimaryAxisWeight Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The automatic primary axis weight. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AutomaticPrimaryAxisWeight { get; set; } 
Visual Basic 
Public Property AutomaticPrimaryAxisWeight As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	997 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..BoundingBoxDx Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The dimension of the bounding box in the X direction. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double BoundingBoxDx { get; set; } 
Visual Basic 
Public Property BoundingBoxDx As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	998 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..BoundingBoxDy Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The dimension of the bounding box in the Y direction. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double BoundingBoxDy { get; set; } 
Visual Basic 
Public Property BoundingBoxDy As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	999 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..BoundingBoxDz Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The dimension of the bounding box in the Z direction. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double BoundingBoxDz { get; set; } 
Visual Basic 
Public Property BoundingBoxDz As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1000 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Load..::..CreateFixedSupportConditionsAutomatically Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Indicates whether fixed support conditions are created automatically. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CreateFixedSupportConditionsAutomatically { get; set; } 
Visual Basic 
Public Property CreateFixedSupportConditionsAutomatically As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1001 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..FatherId Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The identifier of the father object that the load is attached to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier FatherId { get; set; } 
Visual Basic 
Public Property FatherId As Identifier 
Get 
Set 
Property Value 
Type: Identifier 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1002 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..Group Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load group object for the load. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadGroup Group { get; set; } 
Visual Basic 
Public Property Group As LoadGroup 
Get 
Set 
Property Value 
Type: LoadGroup 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1003 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..LoadAttachment Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load attachment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Load..::..LoadAttachmentEnum LoadAttachment { get; set; } 
Visual Basic 
Public Property LoadAttachment As Load..::..LoadAttachmentEnum 
Get 
Set 
Property Value 

Type: Load..::..LoadAttachmentEnum 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1004 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..LoadDispersionAngle Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load dispersion angle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LoadDispersionAngle { get; set; } 
Visual Basic 
Public Property LoadDispersionAngle As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1005 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..PartFilter Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The part filter. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PartFilter { get; set; } 
Visual Basic 
Public Property PartFilter As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1006 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..PartNames Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The part names. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Load..::..LoadPartNamesEnum PartNames { get; set; } 
Visual Basic 
Public Property PartNames As Load..::..LoadPartNamesEnum 
Get 
Set 
Property Value 

Type: Load..::..LoadPartNamesEnum 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1007 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..PrimaryAxisDirection Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The vector for the primary axis direction. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector PrimaryAxisDirection { get; set; } 
Visual Basic 
Public Property PrimaryAxisDirection As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1008 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..Spanning Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load spanning. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Load..::..LoadSpanningEnum Spanning { get; set; } 
Visual Basic 
Public Property Spanning As Load..::..LoadSpanningEnum 
Get 
Set 
Property Value 

Type: Load..::..LoadSpanningEnum 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1009 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..Weight Property 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weight. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Weight { get; set; } 
Visual Basic 
Public Property Weight As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Load Class 
Load Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1010 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..LoadAttachmentEnum Enumeration 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load attachment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LoadAttachmentEnum 
Visual Basic 
Public Enumeration LoadAttachmentEnum 
Members 
Member name	Value	Description 
LOAD_ATTACHMENT_ATTACH_TO_MEMBER 4001	Attach to member. LOAD_ATTACHMENT_DONT_ATTACH	4003	Don't attach. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1011 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..LoadPartNamesEnum Enumeration 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load part names. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LoadPartNamesEnum 
Visual Basic 
Public Enumeration LoadPartNamesEnum 
Members 
Member name	Value		Description LOAD_PART_NAMES_EXCLUDE 0	Exclude parts by name. 
LOAD_PART_NAMES_INCLUDE	1	Include parts by name. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1012 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Load..::..LoadSpanningEnum Enumeration 
Load Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load spanning. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LoadSpanningEnum 
Visual Basic 
Public Enumeration LoadSpanningEnum 
Members 
Member name	Value		Description LOAD_SPANNING_SINGLE	1	Single spanning. 
LOAD_SPANNING_DOUBLE 2	Double spanning. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1013 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoadArea class defines a linearly-distributed force bound by a triangle or a quadrangle. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LoadArea : Load 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LoadArea 
Inherits Load 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           LoadArea L = new LoadArea(); 
           L.P1 = new Vector(1000,2000,3000); 
           L.P2 = new Vector(4000,5000,6000); 
           L.P3 = new Vector(7000,8000,9000); 
           L.DistanceA = 5; 
           L.Position1 = new Point(6000,6000,0); 
           L.Position2 = new Point(8000,6000,0); 
           L.Position3 = new Point(8000,9000,0); 
           L.LoadForm = LoadArea.AreaLoadFormEnum.LOAD_FORM_AREA_PARALLELOGRAM; 
           L.AutomaticPrimaryAxisWeight = true; 
           L.BoundingBoxDx = 500; 
           L.BoundingBoxDy = 500; 
           L.BoundingBoxDz = 500; 
           L.LoadDispersionAngle = 5; 
           L.PartFilter = "testing"; 
           L.PartNames = Load.LoadPartNamesEnum.LOAD_PART_NAMES_INCLUDE; 

Examples	1014 


Point Fields 
           L.PrimaryAxisDirection = new Vector(1000, 500, 0); 
           L.Spanning = Load.LoadSpanningEnum.LOAD_SPANNING_SINGLE;            L.Weight = 2; 
           L.CreateFixedSupportConditionsAutomatically = true; 
if (!L.Insert()) 
               Console.WriteLine("LoadArea Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Load 
                Tekla.Structures.Model..::..LoadArea 
See Also 
LoadArea Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




























See Also	1015 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea Members 
LoadArea Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadArea type exposes the following members. 
Constructors 
  	Name	Description 
LoadArea Creates a new load area instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load area instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1016 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load area into the model database. 

Methods	1017 







Modify 



Point Fields 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing load area in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load area from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
DistanceA	The distance a (for enlarging or 
reducing the loaded area). FatherId	The identifier of the father object 

Properties	1018 


Point Fields 
that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
(Inherited from Load.) 
LoadForm	The load form. 
The load magnitude vector P1. The values are given in the local 
P1 



P2 



P3 


coordinate system of the load (not in the current coordinate system). 
The load magnitude vector P2. The values are given in the local coordinate system of the load (not in the current coordinate system). 
The load magnitude vector P3. The values are given in the local coordinate system of the load (not in the current coordinate system). 
The load magnitude vector P4. This one cannot be set. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position1	The first position point. 
Position2	The second position point. 
Position3	The third position point. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Weight	The weight. 
(Inherited from Load.) 



Properties	1019 


Point Fields 

See Also 
LoadArea Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1020 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea Constructor 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new load area instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadArea() 
Visual Basic 
Public Sub New 
See Also 
LoadArea Class 
LoadArea Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1021 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea Methods 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadArea type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load area instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1022 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load area into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the existing load area in the model 
database to match the current one. At the moment it is not possible to change the load attachment or the father. 

Methods	1023 


Point Fields 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load area from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LoadArea Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1024 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Delete Method 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the load area instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1025 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Insert Method 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the load area into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1026 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Modify Method 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing load area in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1027 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Select Method 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a load area from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1028 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea Properties 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadArea type exposes the following members. 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
DistanceA	The distance a (for enlarging or 
reducing the loaded area). 
The identifier of the father object that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
Properties	1029 


Point Fields 
(Inherited from Load.) LoadForm	The load form. 
The load magnitude vector P1. The values are given in the local 
P1 



P2 



P3 


coordinate system of the load (not in the current coordinate system). 
The load magnitude vector P2. The values are given in the local coordinate system of the load (not in the current coordinate system). 
The load magnitude vector P3. The values are given in the local coordinate system of the load (not in the current coordinate system). 
The load magnitude vector P4. This one cannot be set. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position1	The first position point. 
Position2	The second position point. 
Position3	The third position point. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadArea Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1030 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..DistanceA Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The distance a (for enlarging or reducing the loaded area). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DistanceA { get; set; } 
Visual Basic 
Public Property DistanceA As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1031 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..LoadForm Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load form. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadArea..::..AreaLoadFormEnum LoadForm { get; set; } 
Visual Basic 
Public Property LoadForm As LoadArea..::..AreaLoadFormEnum 
Get 
Set 
Property Value 

Type: LoadArea..::..AreaLoadFormEnum 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1032 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..P1 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector P1. The values are given in the local coordinate system of the load (not in the current coordinate system). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P1 { get; set; } 
Visual Basic 
Public Property P1 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1033 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..P2 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector P2. The values are given in the local coordinate system of the load (not in the current coordinate system). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P2 { get; set; } 
Visual Basic 
Public Property P2 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1034 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..P3 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector P3. The values are given in the local coordinate system of the load (not in the current coordinate system). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P3 { get; set; } 
Visual Basic 
Public Property P3 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1035 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..P4 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector P4. This one cannot be set. The values are given in the local coordinate system of the load (not in the current coordinate system). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P4 { get; set; } 
Visual Basic 
Public Property P4 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1036 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Position1 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The first position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position1 { get; set; } 
Visual Basic 
Public Property Position1 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1037 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Position2 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position2 { get; set; } 
Visual Basic 
Public Property Position2 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1038 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadArea..::..Position3 Property 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The third position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position3 { get; set; } 
Visual Basic 
Public Property Position3 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadArea Class 
LoadArea Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1039 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadArea..::..AreaLoadFormEnum Enumeration 
LoadArea Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The area load form. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum AreaLoadFormEnum 
Visual Basic 
Public Enumeration AreaLoadFormEnum 
Members 
Member name	Value		Description LOAD_FORM_AREA_PARALLELOGRAM 1002	The area load form is a 
parallelogram. LOAD_FORM_AREA_TRIANGLE	1003	The area load form is a triangle. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1040 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoadGroup class implements grouping functionality related to all loads. Each load should be assigned to a load group. Each load group contains loads caused by the same action and to which you want to refer collectively. 

Tekla Structures assumes that all loads in a group 

 Have the same partial safety and other combination factors 
 Have the same action direction 
 Occur at the same time and all together 
You may create new load groups, modify existing ones and delete load groups via the .NET interface. You may also change the assigned load group of a load and list all the load groups found in the model via the ModelObjectSelector interface. The model 
always has at least one load group. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LoadGroup : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LoadGroup 
Inherits ModelObject 
Examples 
Creating a new load group: 

  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           LoadGroup WindLoads = new LoadGroup(); 

Examples	1041 


Point Fields 

           WindLoads.GroupName = "ExtremeNorthWind"; 
           WindLoads.GroupType = LoadGroup.LoadGroupType.EUROCODE_WIND_LOAD;            WindLoads.Direction = LoadGroup.LoadGroupDirection.DIR_Y; 
           WindLoads.Compatible = 2; 
           WindLoads.Incompatible = 15; 
           WindLoads.Color = LoadGroup.Colors.RED;   
           WindLoads.Insert(); 
       } 
} 
Selecting and browsing through all load groups: 
  	Copy 
using Tekla.Structures.Model; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           ModelObjectEnumerator LoadGroups =  
               Model.GetModelObjectSelector().GetAllObjectsWithType(ModelObject.ModelObjectEnum.L 
foreach (LoadGroup group in LoadGroups) 
           { 
               Console.WriteLine("Group: " + group.GroupName + "(ID " + group.Identifier.ID + ")"            } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..LoadGroup 
See Also 
LoadGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1042 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup Members 
LoadGroup Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadGroup type exposes the following members. 
Constructors 
  	Name	Description 
LoadGroup Creates a new load group instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load group instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1043 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load group into the model database. 

Methods	1044 







Modify 



Point Fields 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing load group in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load group from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
The load group color. This variable indicates the color with which 
Color 


all loads that belong to this same group are drawn in Tekla Structures views. 
This variable is used to store information on which groups are compatible with each other in structural analysis load combination. Load combination is a process in which some simultaneously acting load groups are multiplied by their partial safety factors and combined with each other according to specific rules. To accurately combine loads which have the same load group type, you need to identify which load groups can occur at the same time, i.e. are compatible. This variable stores one integer, and all groups who have this same integer are known to be compatible with each other. Depending on the analysis needs, they may be calculated together, in smaller combinations, or separately. 
Direction	The load group direction. 
GroupName	The load group name. The maximum size is 126 characters. GroupType	The load group type. 
Identifier	The identifier of the object. 
(Inherited from Object.) 

Properties	1045 








Incompatible 



Point Fields 
This variable is used to store information on which groups exclude each other in structural analysis load combination. Load combination is a process in which some simultaneously acting load groups are multiplied by their partial safety factors and combined with each other according to specific rules. To accurately combine loads which have the same load group type, you need to identify which load groups exclude each other, i.e. are incompatible. This variable stores one integer, and all groups who have this same integer are known to be incompatible with each other. 
See Also 
LoadGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	1046 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup Constructor 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new load group instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadGroup() 
Visual Basic 
Public Sub New 
See Also 
LoadGroup Class 
LoadGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1047 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup Methods 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadGroup type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load group instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1048 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load group into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the existing load group in the model 
database to match the current one. At the moment it is not possible to change the load attachment or the father. 

Methods	1049 


Point Fields 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load group from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LoadGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1050 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Delete Method 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the load group instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1051 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Insert Method 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the load group into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1052 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Modify Method 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing load group in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1053 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Select Method 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a load group from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1054 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup Properties 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadGroup type exposes the following members. 
Properties 
  	Name	Description 
The load group color. This variable indicates the color with which 
Color 


all loads that belong to this same group are drawn in Tekla Structures views. 
This variable is used to store information on which groups are compatible with each other in structural analysis load combination. Load combination is a process in which some simultaneously acting load groups are multiplied by their partial safety factors and combined with each other according to specific rules. To accurately combine loads which have the same load group type, you need to identify which load groups can occur at the same time, i.e. are compatible. This variable stores one integer, and all groups who have this same integer are known to be compatible with each other. Depending on the analysis needs, they may be calculated together, in smaller combinations, or separately. 
Direction	The load group direction. 
GroupName	The load group name. The maximum size is 126 characters. GroupType	The load group type. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
This variable is used to store information on which groups exclude each other in structural analysis load combination. Load combination is a process in which some simultaneously acting load groups are multiplied by their partial safety factors and combined 
Incompatible 


with each other according to specific rules. To accurately combine loads which have the same load group type, you need to identify which load groups exclude each other, i.e. are incompatible. This variable stores one integer, and all groups who have this same integer are known to be incompatible with each other. 


Properties	1055 


Point Fields 

See Also 
LoadGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1056 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Color Property 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load group color. This variable indicates the color with which all loads that belong to this same group are drawn in Tekla Structures views. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadGroup..::..Colors Color { get; set; } 
Visual Basic 
Public Property Color As LoadGroup..::..Colors 
Get 
Set 
Property Value 

Type: LoadGroup..::..Colors 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1057 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Compatible Property 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
This variable is used to store information on which groups are compatible with each other in structural analysis load combination. Load combination is a process in which some simultaneously acting load groups are multiplied by their partial safety factors and combined with each other according to specific rules. To accurately combine loads which have the same load group type, you need to identify which load groups can occur at the same time, i.e. are compatible. This variable stores one integer, and all groups who have this same integer are known to be compatible with each other. Depending on the analysis needs, they may be calculated together, in smaller combinations, or separately. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Compatible { get; set; } 
Visual Basic 
Public Property Compatible As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	1058 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Direction Property 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load group direction. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadGroup..::..LoadGroupDirection Direction { get; set; } 
Visual Basic 
Public Property Direction As LoadGroup..::..LoadGroupDirection 
Get 
Set 
Property Value 

Type: LoadGroup..::..LoadGroupDirection 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1059 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..GroupName Property 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load group name. The maximum size is 126 characters. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string GroupName { get; set; } 
Visual Basic 
Public Property GroupName As String 
Get 
Set 
Property Value 
Type: String 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1060 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..GroupType Property 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load group type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadGroup..::..LoadGroupType GroupType { get; set; } 
Visual Basic 
Public Property GroupType As LoadGroup..::..LoadGroupType 
Get 
Set 
Property Value 

Type: LoadGroup..::..LoadGroupType 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1061 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Incompatible Property 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
This variable is used to store information on which groups exclude each other in structural analysis load combination. Load combination is a process in which some simultaneously acting load groups are multiplied by their partial safety factors and combined with each other according to specific rules. To accurately combine loads which have the same load group type, you need to identify which load groups exclude each other, i.e. are incompatible. This variable stores one integer, and all groups who have this same integer are known to be incompatible with each other. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Incompatible { get; set; } 
Visual Basic 
Public Property Incompatible As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
LoadGroup Class 
LoadGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1062 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..Colors Enumeration 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible display colors for loads in a load group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum Colors 
Visual Basic 
Public Enumeration Colors 
Members 
Member name  Value		Description 
BLACK	0	The black display color. 
WHITE	1	The white display color. 
RED	2	The red display color. 
GREEN	3	The green display color. 
BLUE	4	The blue display color. 
CYAN	5	The cyan display color. 
YELLOW	6	The yellow display color. 
MAGENTA	7	The magenta display color. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	1063 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadGroup..::..LoadGroupDirection Enumeration 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible directions. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LoadGroupDirection 
Visual Basic 
Public Enumeration LoadGroupDirection 
Members 
Member name  Value		Description 
DIR_X	1	The X direction. 
DIR_Y	2	The Y direction. 
DIR_Z	3	The Z direction. 
DIR_NEG_X	4	The negative X direction. DIR_NEG_Y	5	The negative Y direction. DIR_NEG_Z	6	The negative Z direction. See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1064 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadGroup..::..LoadGroupType Enumeration 
LoadGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible types for load groups. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LoadGroupType 
Visual Basic 
Public Enumeration LoadGroupType 
Members 
Member name	Value	Description 
The Eurocode 
EUROCODE_DEFAULT_GROUP	1000 


EUROCODE_SELF_WEIGHT	1001 


EUROCODE_PERMANENT_LOAD	1002 


EUROCODE_PRE_STRESS_LOAD	1003 


EUROCODE_LIVE_LOAD_HOUSING	1004 


default group type. 
The Eurocode self weight type. 
The Eurocode permanent load type. 
The Eurocode pre-stress load type. 
The Eurocode live load housing type. 
The Eurocode live load 
public buildings type. 
EUROCODE_LIVE_LOAD_THEATRES_RESTAURANTS	1006	The Eurocode 
live load 

Members	1065 


Point Fields 





EUROCODE_LIVE_LOAD_WAREHOUSES	1007 



EUROCODE_LIVE_LOAD_STORAGE_BUILDINGS	1008 



EUROCODE_TRAFFIC_LOAD_LIGHT_VEHICLES	1009 



EUROCODE_TRAFFIC_LOAD_HEAVY_VEHICLES	1010 


EUROCODE_TRAFFIC_LOAD_ROOFS	1011 


EUROCODE_SNOW_LOAD	1012 


EUROCODE_WIND_LOAD	1013 


EUROCODE_FORCES_DUE_TO_TEMPERATURE_EFFECTS	1014 



EUROCODE_IMPERFECTION_LOAD_DUE_TO_DEAD_LOADS	1015 



EUROCODE_IMPERFECTION_LOAD_DUE_TO_LIVE_LOADS	1016 



EUROCODE_IMPERFECTION_LOAD_DUE_TO_SNOW_LOADS 1017 





theatres, restaurants type. 
The Eurocode live load warehouses type. 
The Eurocode live load storage buildings type. 
The Eurocode traffic load light vehicles type. 
The Eurocode traffic load heavy vehicles type. 
The Eurocode traffic load roofs type. 
The Eurocode snow load type. 
The Eurocode wind load type. 
The Eurocode forces due to temperature effects type. 
The Eurocode imperfection load due to dead loads type. 
The Eurocode imperfection load due to 
live loads type. 
The Eurocode imperfection load due to snow loads type. 


Members	1066 


Point Fields 

EUROCODE_ACCIDENTAL_LOAD	1018 


EUROCODE_EARTHQUAKE_LOAD	1019 


BRITISH_CODE_DEAD_LOAD_ALONE	2001 


BRITISH_CODE_DEADLOAD	2002 


BRITISH_CODE_IMPOSED_LOAD	2003 


BRITISH_CODE_WIND_LOAD	2004 


BRITISH_CODE_TEMPERATURE_LOAD	2005 



BRITISH_CODE_VERTICAL_CRANE_LOAD	2006 



BRITISH_CODE_HORIZONTAL_CRANE_LOAD	2007 





The Eurocode accidental load type. 
The Eurocode earthquake load type. 
The British code dead load alone type. 
The British code dead load type. 
The British code imposed load type. 
The British code wind load type. 
The British code temperature load type. 
The British code vertical crane load type. 
The British code horizontal crane load type. 
The AISC dead load alone type. 
AISC_DEAD_LOAD	3002	The AISC dead 
load type. AISC_LIVE_LOAD	3003	The AISC live 
load type. AISC_ROOF_LIVE_LOAD	3004	The AISC roof 
live load type. AISC_WIND_LOAD	3005	The AISC wind 
load type. 
The AISC 
AISC_SNOW_LOAD	3006 


snow load type. 

Members	1067 


Point Fields 

AISC_RAINWATER_LOAD	3007 


AISC_EARTHQUAKE_LOAD	3008 


CM66_PERMANENT_LOAD_FR	6001 


CM66_EXPLOITATION_LOAD_FR	6002 


CM66_TEMPERATURE_LOAD_FR	6003 


CM66_WIND_LOAD_FR	6004 


CM66_SNOW_LOAD_FR	6005 


CM66_SEISMIC_LOAD_HORIZONTAL_FR	6006 


CM66_SEISMIC_LOAD_VERTICAL_FR	6007 


BAEL91_PERMANENT_LOAD_FR	7001 


BAEL91_EXPLOITATION_LOAD_FR	7002 


BAEL91_TEMPERATURE_LOAD_FR	7003 


BAEL91_WIND_LOAD_FR	7004 


BAEL91_SNOW_LOAD_FR	7005 


BAEL91_SEISMIC_LOAD_FR	7006 





The AISC rainwater load type. 
The AISC earthquake load type. 
The CM66 permanent load type. 
The CM66 exploitation load type. 
The CM66 temperature load type. 
The CM66 wind load type. 
The CM66 snow load type. 
The CM66 seismic load horizontal type. 
The CM66 seismic load vertical type. 
The BAEL91 permanent load type. 
The BAEL91 exploitation load type. 
The BAEL91 temperature load type. 
The BAEL91 wind load type. 
The BAEL91 snow load type. 
The BAEL91 seismic load type. 

Members	1068 


Point Fields 
The BAEL91 accidental 
load type. 
UBC_DEAD_LOAD	8001	The UBC dead 
load type. UBC_LIVE_LOAD	8002	The UBC live 
load type. UBC_ROOF_LIVE_LOAD	8003	The UBC roof 
live load type. UBC_WIND_LOAD	8004	The UBC wind 
load type. UBC_SNOW_LOAD	8005	The UBC snow 
load type. 
The UBC 
UBC_TEMPERATURE_LOAD	8006 


temperature load type. 
The UBC fluids load type. 
UBC_SOIL_LOAD	8008	The UBC soil 
load type. 
The UBC 
UBC_PONDING_LOAD	8009 


ponding load type. 
The UBC seismic load type. 
IBC_DEAD_LOAD	9001	The IBC dead 
load type. IBC_LIVE_LOAD	9002	The IBC live 
load type. IBC_ROOF_LIVE_LOAD	9003	The IBC roof 
live load type. IBC_WIND_LOAD	9004	The IBC wind 
load type. IBC_SNOW_LOAD	9005	The IBC snow 
load type. 
The IBC temperature load type. 
IBC_FLUIDS_LOAD	9007	The IBC fluids 
load type. IBC_SOIL_LOAD	9008	The IBC soil 
load type. 

Members	1069 


Point Fields 
IBC_RAIN_LOAD	9009	The IBC rain 
load type. 
The IBC 
IBC_PONDING_LOAD	9010 


ponding load type. 
The IBC seismic load type. 
ACI_DEAD_LOAD	9101	The ACI dead 
load type. ACI_LIVE_LOAD	9102	The ACI live 
load type. ACI_ROOF_LIVE_LOAD	9103	The ACI roof 
live load type. ACI_WIND_LOAD	9104	The ACI wind 
load type. 
The ACI seismic load type. 
ACI_SNOW_LOAD	9106	The ACI snow 
load type. ACI_FLUIDS_LOAD	9107	The ACI fluids 
load type. ACI_SOIL_LOAD	9108	The ACI soil 
load type. ACI_RAIN_LOAD	9109	The ACI rain 
load type. 
The ACI 
ACI_TEMPERATURE_LOAD	9110 

See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


temperature load type. 











See Also	1070 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoadLine class defines a linearly-distributed force or torsion. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LoadLine : Load 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LoadLine 
Inherits Load 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           LoadLine L = new LoadLine(); 
           L.P1 = new Vector(0000,0000,-1000); 
           L.P2 = new Vector(0000,0000,-1000); 
           L.DistanceA = 5; 
           L.DistanceB = 6; 
           L.Torsion1 = 1000; 
           L.Torsion2 = 2000; 
           L.Position1 = new Point(3000,12000,0); 
           L.Position2 = new Point(4000,12000,0); 
           L.LoadForm = LoadLine.LineLoadFormEnum.LOAD_FORM_LINE_1; 
           L.AutomaticPrimaryAxisWeight = true; 
           L.BoundingBoxDx = 500; 
           L.BoundingBoxDy = 500; 
           L.BoundingBoxDz = 500; 
           L.LoadDispersionAngle = 5; 
           L.PartFilter = "testing"; 
           L.PartNames = Load.LoadPartNamesEnum.LOAD_PART_NAMES_INCLUDE; 

Examples	1071 


Point Fields 
           L.PrimaryAxisDirection = new Vector(1000, 500, 0); 
           L.Spanning = Load.LoadSpanningEnum.LOAD_SPANNING_SINGLE;            L.Weight = 2; 
           L.CreateFixedSupportConditionsAutomatically = true; 
if (!L.Insert()) 
               Console.WriteLine("LoadLine Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Load 
                Tekla.Structures.Model..::..LoadLine 
See Also 
LoadLine Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




























See Also	1072 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine Members 
LoadLine Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadLine type exposes the following members. 
Constructors 
  	Name	Description 
LoadLine Creates a new load line instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load line instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1073 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load line into the model database. 

Methods	1074 







Modify 



Point Fields 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing load line in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load line from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
DistanceA	The distance a (for shortening or 
dividing the length of a line load). DistanceB	The distance b (for shortening or 

Properties	1075 


Point Fields 
dividing the length of a line load). 
The identifier of the father object that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
(Inherited from Load.) 
LoadForm	The load form. 
The load magnitude vector at the start position. The values are given 
P1 


in the local coordinate system of the load (not in the current coordinate system). 
The load magnitude vector at the 
end position. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position1	The first input position point. 
Position2	The second input position point. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Torsion1	The first torsion. 
Torsion2	The second torsion. 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadLine Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1076 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine Constructor 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new load line instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadLine() 
Visual Basic 
Public Sub New 
See Also 
LoadLine Class 
LoadLine Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1077 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine Methods 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadLine type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load line instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1078 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load line into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the existing load line in the model 
database to match the current one. At the moment it is not possible to change the load attachment or the father. 

Methods	1079 


Point Fields 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load line from the model database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LoadLine Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1080 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Delete Method 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the load line instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1081 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Insert Method 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the load line into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1082 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Modify Method 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing load line in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1083 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Select Method 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a load line from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1084 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine Properties 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadLine type exposes the following members. 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
DistanceA	The distance a (for shortening or 
dividing the length of a line load). DistanceB	The distance b (for shortening or 
dividing the length of a line load). 
The identifier of the father object that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 

Properties	1085 


Point Fields 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
(Inherited from Load.) LoadForm	The load form. 
The load magnitude vector at the start position. The values are given 
P1 


in the local coordinate system of the load (not in the current coordinate system). 
The load magnitude vector at the 
end position. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position1	The first input position point. 
Position2	The second input position point. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Torsion1	The first torsion. 
Torsion2	The second torsion. 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadLine Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1086 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..DistanceA Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The distance a (for shortening or dividing the length of a line load). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DistanceA { get; set; } 
Visual Basic 
Public Property DistanceA As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1087 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..DistanceB Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The distance b (for shortening or dividing the length of a line load). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DistanceB { get; set; } 
Visual Basic 
Public Property DistanceB As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1088 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..LoadForm Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The load form. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadLine..::..LineLoadFormEnum LoadForm { get; set; } 
Visual Basic 
Public Property LoadForm As LoadLine..::..LineLoadFormEnum 
Get 
Set 
Property Value 

Type: LoadLine..::..LineLoadFormEnum 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1089 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..P1 Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector at the start position. The values are given in the local coordinate system of the load (not in the current coordinate system). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P1 { get; set; } 
Visual Basic 
Public Property P1 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1090 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..P2 Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector at the end position. The values are given in the local coordinate system of the load (not in the current coordinate system). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P2 { get; set; } 
Visual Basic 
Public Property P2 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1091 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Position1 Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The first input position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position1 { get; set; } 
Visual Basic 
Public Property Position1 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1092 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Position2 Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second input position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position2 { get; set; } 
Visual Basic 
Public Property Position2 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1093 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Torsion1 Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The first torsion. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Torsion1 { get; set; } 
Visual Basic 
Public Property Torsion1 As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1094 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadLine..::..Torsion2 Property 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second torsion. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Torsion2 { get; set; } 
Visual Basic 
Public Property Torsion2 As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadLine Class 
LoadLine Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1095 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadLine..::..LineLoadFormEnum Enumeration 
LoadLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line load form. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LineLoadFormEnum 
Visual Basic 
Public Enumeration LineLoadFormEnum 
Members 
Member name	Value	Description 
LOAD_FORM_LINE_1 1001	The load magnitude is uniform across the loaded 
length. 
The load has different magnitudes at the ends of the 
LOAD_FORM_LINE_2 1002 


LOAD_FORM_LINE_3 1003 


LOAD_FORM_LINE_4 1004 


loaded length. The magnitude changes linearly between the ends. 
The load magnitude changes linearly, from zero at the ends of the loaded length, to a fixed value in the middle of the loaded length. 
The load magnitude changes linearly, from zero at one end of the loaded length, through two (different) values, back to zero at the other end. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1096 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoadPoint class defines a concentrated force or a bending moment. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LoadPoint : Load 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LoadPoint 
Inherits Load 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam FatherBeam = new Beam(new Point(3000,6000,0), new Point(4000,6000,0)); 
if (!FatherBeam.Insert()) 
               Console.WriteLine("Father Beam Insert failed!"); 
           LoadPoint L = new LoadPoint(); 
           L.P = new Vector(3000,4000,5000); 
           L.Moment = new Vector(6000,7000,8000);            L.Position = new Point(3000,6000,0); 
           L.FatherId = FatherBeam.Identifier; 
           L.AutomaticPrimaryAxisWeight = true; 
           L.BoundingBoxDx = 500; 
           L.BoundingBoxDy = 500; 
           L.BoundingBoxDz = 500; 
           L.LoadDispersionAngle = 1; 
           L.PartFilter = "testing"; 
           L.PartNames = Load.LoadPartNamesEnum.LOAD_PART_NAMES_INCLUDE; 

Examples	1097 


Point Fields 
           L.PrimaryAxisDirection = new Vector(1000, 500, 0); 
           L.Spanning = Load.LoadSpanningEnum.LOAD_SPANNING_SINGLE;            L.Weight = 2; 
           L.CreateFixedSupportConditionsAutomatically = true; 
if (!L.Insert()) 
               Console.WriteLine("LoadPoint Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Load 
                Tekla.Structures.Model..::..LoadPoint 
See Also 
LoadPoint Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




























See Also	1098 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint Members 
LoadPoint Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadPoint type exposes the following members. 
Constructors 
  	Name	Description 
LoadPoint Creates a new load point instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load point instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1099 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load point into the model database. 

Methods	1100 







Modify 



Point Fields 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing load point in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load point from the model database. The 
ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


CreateFixedSupportConditionsAutomatically 


FatherId 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
The identifier of the father object that the load is attached to. (Inherited from Load.) 


Properties	1101 


Point Fields 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
(Inherited from Load.) 
The moment vector. The values are given in the local coordinate system 
Moment 


of the load (not in the current coordinate system). 
The load vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position	The position. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1102 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint Constructor 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new load point instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadPoint() 
Visual Basic 
Public Sub New 
See Also 
LoadPoint Class 
LoadPoint Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1103 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint Methods 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadPoint type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load point instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1104 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load point into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the existing load point in the model 
database to match the current one. At the moment it is not possible to change the load attachment or the father. 

Methods	1105 


Point Fields 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load point from the model database. The 
ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LoadPoint Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1106 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..Delete Method 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the load point instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1107 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..Insert Method 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the load point into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1108 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..Modify Method 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing load point in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1109 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..Select Method 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a load point from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1110 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint Properties 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadPoint type exposes the following members. 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


CreateFixedSupportConditionsAutomatically 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
The identifier of the father object that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
(Inherited from Load.) 
Moment 

Properties	1111 


Point Fields 
The moment vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
The load vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position	The position. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadPoint Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1112 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..Moment Property 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The moment vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector Moment { get; set; } 
Visual Basic 
Public Property Moment As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1113 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..P Property 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P { get; set; } 
Visual Basic 
Public Property P As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1114 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadPoint..::..Position Property 
LoadPoint Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position { get; set; } 
Visual Basic 
Public Property Position As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadPoint Class 
LoadPoint Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1115 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoadTemperature class defines a temperature change in a part, or a temperature difference between two part surfaces. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LoadTemperature : Load 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LoadTemperature 
Inherits Load 
Examples 
  	Copy 
using System; 
using Tekla.Structures.Geometry3d; 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           LoadTemperature temperatureLoad = new LoadTemperature(); 
           temperatureLoad.Position1 = new Point(0, 0, 0); 
           temperatureLoad.Position2 = new Point(1000, 0, 0); 
           temperatureLoad.BoundingBoxDx = 500; 
           temperatureLoad.BoundingBoxDy = 500; 
           temperatureLoad.BoundingBoxDz = 500; 
           temperatureLoad.PartNames = Load.LoadPartNamesEnum.LOAD_PART_NAMES_INCLUDE;            temperatureLoad.PartFilter = "example"; 
           temperatureLoad.TemperatureChangeForAxialElongation = 1.0; 
           temperatureLoad.TemperatureDifferentialSideToSide = 2.0; 
           temperatureLoad.TemperatureDifferentialTopToBottom = 3.0; 
           temperatureLoad.InitialAxialElongation = 4.0; 
if (!temperatureLoad.Insert()) 
           { 
               Console.WriteLine("Temperature load insert failed!");            } 

Examples	1116 


Point Fields 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Load 
                Tekla.Structures.Model..::..LoadTemperature 
See Also 
LoadTemperature Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	1117 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature Members 
LoadTemperature Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadTemperature type exposes the following members. 
Constructors 
  	Name	Description 
LoadTemperature Initializes a new instance of the LoadTemperature class. Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load temperature instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1118 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	1119 





Insert 



Modify 



Point Fields 
Inserts the load temperature into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing load temperature in the model database to match the current one. At the moment 
it is not possible to change the load attachment or the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load temperature from the model 
database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Obsolete. 
AutomaticPrimaryAxisWeight 


BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


Property not supported in LoadTemperature class. 
The dimension of the bounding box in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Obsolete. 
Property not supported in LoadTemperature class. 
FatherId	The identifier of the father object 
that the load is attached to. 

Properties	1120 


Point Fields 
(Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) InitialAxialElongation	Gets or sets the initial axial 
elongation. 
LoadAttachment	The load attachment. 
(Inherited from Load.) 
Obsolete. 
Property not supported in LoadTemperature class. 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position1	Gets or sets the first input position 
point. 
Position2	Gets or sets the second input 
position point. 
Obsolete. 
PrimaryAxisDirection 


Property not supported in LoadTemperature class. 
Obsolete. 
Property not supported in LoadTemperature class. 
TemperatureChangeForAxialElongation	Gets or sets the temperature change 
for axial elongation. TemperatureDifferentialSideToSide	Gets or sets the temperature 
differential from side to side. TemperatureDifferentialTopToBottom	Gets or sets the temperature 
differential from top to bottom. 
Obsolete. 
Weight 

See Also 
LoadTemperature Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


Property not supported in LoadTemperature class. 




See Also	1121 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature Constructor 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadTemperature() 
Visual Basic 
Public Sub New 
See Also 
LoadTemperature Class 
LoadTemperature Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1122 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature Methods 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadTemperature type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load temperature instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1123 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the load temperature into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the existing load temperature in the model 
database to match the current one. At the moment 
it is not possible to change the load attachment or 

Methods	1124 


Point Fields 
the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load temperature from the model 
database. The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LoadTemperature Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	1125 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Delete Method 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the load temperature instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1126 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Insert Method 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the load temperature into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1127 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Modify Method 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing load temperature in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1128 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Select Method 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a load temperature from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1129 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature Properties 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadTemperature type exposes the following members. 
Properties 
  	Name	Description 
Obsolete. 
AutomaticPrimaryAxisWeight 


BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


CreateFixedSupportConditionsAutomatically 


Property not supported in LoadTemperature class. 
The dimension of the bounding box in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Obsolete. 
Property not supported in LoadTemperature class. 
The identifier of the father object that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) InitialAxialElongation	Gets or sets the initial axial 
elongation. 
LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	Obsolete. 
Properties	1130 


Point Fields 
Property not supported in LoadTemperature class. 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Position1	Gets or sets the first input position 
point. 
Position2	Gets or sets the second input 
position point. 
Obsolete. 
PrimaryAxisDirection 


Property not supported in LoadTemperature class. 
Obsolete. 
Property not supported in LoadTemperature class. 
TemperatureChangeForAxialElongation	Gets or sets the temperature change 
for axial elongation. TemperatureDifferentialSideToSide	Gets or sets the temperature 
differential from side to side. TemperatureDifferentialTopToBottom	Gets or sets the temperature 
differential from top to bottom. 
Obsolete. 
Weight 

See Also 
LoadTemperature Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


Property not supported in LoadTemperature class. 















See Also	1131 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..AutomaticPrimaryAxisWeight Property 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Property not supported in LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)] 
public bool AutomaticPrimaryAxisWeight { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)>  
Public Property AutomaticPrimaryAxisWeight As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1132 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..CreateFixedSupportConditionsAutomatically Property LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Property not supported in LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)] 
public bool CreateFixedSupportConditionsAutomatically { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)>  
Public Property CreateFixedSupportConditionsAutomatically As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1133 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..InitialAxialElongation Property LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the initial axial elongation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double InitialAxialElongation { get; set; } 
Visual Basic 
Public Property InitialAxialElongation As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1134 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..LoadDispersionAngle Property LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Property not supported in LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)] 
public double LoadDispersionAngle { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)>  
Public Property LoadDispersionAngle As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1135 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Position1 Property 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the first input position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position1 { get; set; } 
Visual Basic 
Public Property Position1 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1136 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Position2 Property 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the second input position point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position2 { get; set; } 
Visual Basic 
Public Property Position2 As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1137 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..PrimaryAxisDirection Property LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Property not supported in LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)] 
public Vector PrimaryAxisDirection { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)>  
Public Property PrimaryAxisDirection As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1138 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Spanning Property 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Property not supported in LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)] 
public Load..::..LoadSpanningEnum Spanning { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)>  
Public Property Spanning As Load..::..LoadSpanningEnum 
Get 
Set 
Property Value 

Type: Load..::..LoadSpanningEnum 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1139 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..TemperatureChangeForAxialElongation Property LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the temperature change for axial elongation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double TemperatureChangeForAxialElongation { get; set; } 
Visual Basic 
Public Property TemperatureChangeForAxialElongation As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1140 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..TemperatureDifferentialSideToSide Property 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the temperature differential from side to side. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double TemperatureDifferentialSideToSide { get; set; } 
Visual Basic 
Public Property TemperatureDifferentialSideToSide As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1141 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 LoadTemperature..::..TemperatureDifferentialTopToBottom Property LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the temperature differential from top to bottom. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double TemperatureDifferentialTopToBottom { get; set; } 
Visual Basic 
Public Property TemperatureDifferentialTopToBottom As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1142 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadTemperature..::..Weight Property 
LoadTemperature Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Property not supported in LoadTemperature class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)] 
public double Weight { get; set; } 
Visual Basic 
<ObsoleteAttribute("Property not supported in LoadTemperature class.",  
true)>  
Public Property Weight As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadTemperature Class LoadTemperature Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1143 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoadUniform class defines a uniformly-distributed force bounded by a polygon. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LoadUniform : Load 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LoadUniform 
Inherits Load 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           LoadUniform L = new LoadUniform(); 
           L.P1 = new Vector(1000,2000,3000); 
           L.DistanceA = 5; 
           L.Polygon.Points.Add(new Point(9000, 12000, 0)); 
           L.Polygon.Points.Add(new Point(11000, 12000, 0));            L.Polygon.Points.Add(new Point(11000, 15000, 0));            L.Polygon.Points.Add(new Point(7000, 15000, 0)); 
           L.AutomaticPrimaryAxisWeight = true; 
           L.BoundingBoxDx = 500; 
           L.BoundingBoxDy = 500; 
           L.BoundingBoxDz = 500; 
           L.LoadDispersionAngle = 3; 
           L.PartFilter = "testing"; 
           L.PartNames = Load.LoadPartNamesEnum.LOAD_PART_NAMES_INCLUDE;            L.PrimaryAxisDirection = new Vector(1000, 500, 0); 
           L.Spanning = Load.LoadSpanningEnum.LOAD_SPANNING_SINGLE; 
           L.Weight = 2; 

Examples	1144 


Point Fields 
           L.CreateFixedSupportConditionsAutomatically = true; 
if (!L.Insert()) 
               Console.WriteLine("LoadUniform Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Load 
                Tekla.Structures.Model..::..LoadUniform 
See Also 
LoadUniform Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	1145 


Point Fields 
ï»¿  
  Collapse AllExpand All          	  Code: All  Code: Multiple  Code: C#  Code: 
Visual Basic          	  Members: Show All  Members: Filtered  Members: 
Filtered  Members: Filtered   
C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform Members 
LoadUniform Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadUniform type exposes the following members. 
Constructors 
  	Name	Description 
LoadUniform Creates a new load uniform instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load uniform instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1146 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load uniform into the model database. 

Methods	1147 







Modify 



Point Fields 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing load uniform in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load uniform from the model database. 
The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
DistanceA	The distance a (for enlarging or 
reducing the loaded area). FatherId	The identifier of the father object 

Properties	1148 


Point Fields 
that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
(Inherited from Load.) 
The load magnitude vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Polygon	The position points for the uniform 
load. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadUniform Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1149 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform Constructor 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new load uniform instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoadUniform() 
Visual Basic 
Public Sub New 
See Also 
LoadUniform Class 
LoadUniform Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1150 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform Methods 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadUniform type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the load uniform instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1151 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the load uniform into the model database. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the existing load uniform in the model 
database to match the current one. At the moment it is not possible to change the load attachment or the father. 

Methods	1152 


Point Fields 
(Overrides ModelObject..::..Modify()()()().) 
Selects a load uniform from the model database. 
The ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LoadUniform Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1153 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..Delete Method 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the load uniform instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1154 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..Insert Method 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the load uniform into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1155 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..Modify Method 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing load uniform in the model database to match the current one. At the moment it is not possible to change the load attachment or the father. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1156 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..Select Method 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a load uniform from the model database. The ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1157 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform Properties 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoadUniform type exposes the following members. 
Properties 
  	Name	Description 
AutomaticPrimaryAxisWeight	The automatic primary axis weight. 
(Inherited from Load.) 
The dimension of the bounding box 
BoundingBoxDx 


BoundingBoxDy 


BoundingBoxDz 


in the X direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Y direction. 
(Inherited from Load.) 
The dimension of the bounding box in the Z direction. 
(Inherited from Load.) 
Indicates whether fixed support conditions are created automatically. 
(Inherited from Load.) 
DistanceA	The distance a (for enlarging or 
reducing the loaded area). 
The identifier of the father object that the load is attached to. (Inherited from Load.) 
Group	The load group object for the load. 
(Inherited from Load.) 
Identifier	The identifier of the object. 
(Inherited from Object.) LoadAttachment	The load attachment. 
(Inherited from Load.) LoadDispersionAngle	The load dispersion angle. 
Properties	1158 


Point Fields 
(Inherited from Load.) 
The load magnitude vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
PartFilter	The part filter. 
(Inherited from Load.) 
PartNames	The part names. 
(Inherited from Load.) 
Polygon	The position points for the uniform 
load. 
The vector for the primary axis direction. 
(Inherited from Load.) 
Spanning	The load spanning. 
(Inherited from Load.) 
Weight	The weight. 
(Inherited from Load.) 
See Also 
LoadUniform Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1159 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..DistanceA Property 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The distance a (for enlarging or reducing the loaded area). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DistanceA { get; set; } 
Visual Basic 
Public Property DistanceA As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1160 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..P1 Property 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The load magnitude vector. The values are given in the local coordinate system of the load (not in the current coordinate system). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector P1 { get; set; } 
Visual Basic 
Public Property P1 As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1161 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoadUniform..::..Polygon Property 
LoadUniform Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position points for the uniform load. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Polygon 
Get 
Set 
Property Value 
Type: Polygon 
See Also 
LoadUniform Class 
LoadUniform Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1162 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LogicalWeld class represents a group of welds in the model. A logical weld contains a list of children welds. The primary properties need to be the same in all the children welds. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class LogicalWeld : BaseWeld 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class LogicalWeld 
Inherits BaseWeld 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Weld Weld1 = new Weld(); 
           Weld Weld2 = new Weld(); 
           Weld1.TypeBelow = Weld.WeldTypeEnum.WELD_TYPE_SLOT;            Weld2.TypeBelow = Weld.WeldTypeEnum.WELD_TYPE_SEAM; 
           LogicalWeld LogicalWeld = new LogicalWeld(Weld1);            LogicalWeld.AddWeld(Weld2); 
           LogicalWeld.Insert(); 
           LogicalWeld.SetMainWeld(Weld2); 
           LogicalWeld.RemoveWeld(Weld1); 
           LogicalWeld.Modify(); 
           LogicalWeld.Explode(); 
       } 
} 

Examples	1163 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseWeld 
                Tekla.Structures.Model..::..LogicalWeld 
See Also 
LogicalWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	1164 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld Members 
LogicalWeld Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LogicalWeld type exposes the following members. 
Constructors 
  	Name	Description 
LogicalWeld Creates a new logical weld instance. 
Methods 
  	Name	Description 
AddWeld	Adds a weld to the logical weld. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the logical weld instance with the given identifier from the model database and also the children welds. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Explode	Removes the logical weld from the model but not 
the children welds. 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 


Methods	1165 





GetCoordinateSystem 



Point Fields 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetMainWeld	Returns the main weld of the logical weld. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
(Inherited from BaseWeld.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Methods	1166 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

GetWeldGeometries 


Insert 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
(Inherited from BaseWeld.) 
Inserts the logical weld into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing logical weld in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
RemoveWeld	Removes a weld from the logical weld. 
Selects a logical weld from the model database. The logical weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Select(BaseWeld)	Selects the logical weld that a child weld belongs 
to. 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetMainWeld	Sets the main weld for the logical weld. 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
(Inherited from BaseWeld.) AngleBelow	Gets or sets the angle below. 

Properties	1167 






AroundWeld 



Point Fields 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is an around weld (true) or an edge weld (false). 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
(Inherited from BaseWeld.) 
ContourAbove	Gets or sets the contour above. 
(Inherited from BaseWeld.) 
ContourBelow	Gets or sets the contour below. 
(Inherited from BaseWeld.) 
EffectiveThroatAbove	Gets or sets the effective throat above. 
(Inherited from BaseWeld.) 
EffectiveThroatBelow	Gets or sets the effective throat below. 
(Inherited from BaseWeld.) 
ElectrodeClassification	Gets or sets the weld electrode classification. 
(Inherited from BaseWeld.) 
ElectrodeCoefficient	Gets or sets the electrode strength coefficient. 
(Inherited from BaseWeld.) 
ElectrodeStrength	Gets or sets the electrode strength. 
(Inherited from BaseWeld.) 
FinishAbove	Gets or sets the finish above. 
(Inherited from BaseWeld.) 
FinishBelow	Gets or sets the finish below. 
(Inherited from BaseWeld.) Identifier	The identifier of the object. 
(Inherited from Object.) 
IncrementAmountAbove Gets or sets the increment amount above. 
(Inherited from BaseWeld.) 
IncrementAmountBelow Gets or sets the increment amount below. 
(Inherited from BaseWeld.) 
IntermittentType	Gets or sets the weld intermittent type. 
(Inherited from BaseWeld.) 
LengthAbove	Gets or sets the length above. 
(Inherited from BaseWeld.) 
LengthBelow	Gets or sets the length below. 
(Inherited from BaseWeld.) 
MainObject	Gets or sets the main part of the weld. 
(Inherited from BaseWeld.) 
NDTInspection	Gets or sets the NDT inspection level. 
(Inherited from BaseWeld.) 
PitchAbove	Gets or sets the pitch above. 
(Inherited from BaseWeld.) 
Properties	1168 


Point Fields 
PitchBelow	Gets or sets the pitch below. 
(Inherited from BaseWeld.) 
Placement	Gets or sets the weld placement. 
(Inherited from BaseWeld.) 
PrefixAboveLine	Gets or sets the size prefix above the line. 
(Inherited from BaseWeld.) 
PrefixBelowLine	Gets or sets the size prefix below the line. 
(Inherited from BaseWeld.) 
Preparation	Gets or sets the weld preparation. 
(Inherited from BaseWeld.) 
ProcessType	Gets or sets the process type. 
(Inherited from BaseWeld.) 
ReferenceText	Gets or sets the reference text. 
(Inherited from BaseWeld.) 
RootFaceAbove	Gets or sets the root face above. 
(Inherited from BaseWeld.) 
RootFaceBelow	Gets or sets the root face below. 
(Inherited from BaseWeld.) RootOpeningAbove	Gets or sets the root opening above. 
(Inherited from BaseWeld.) RootOpeningBelow	Gets or sets the root opening below. 
(Inherited from BaseWeld.) SecondaryObject	Gets or sets the secondary part of the weld. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
(Inherited from BaseWeld.) 
SizeAbove	Gets or sets the size above. 
(Inherited from BaseWeld.) SizeBelow	Gets or sets the size below. 
(Inherited from BaseWeld.) 
Obsolete. 
Standard 


Gets or sets the weld detail/standard. (Inherited from BaseWeld.) 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
(Inherited from BaseWeld.) 
TypeAbove	Gets or sets the type above. 
(Inherited from BaseWeld.) 
TypeBelow	Gets or sets the type below. 
(Inherited from BaseWeld.) 
WeldNumber	Gets the weld number. 
(Inherited from BaseWeld.) 
Properties	1169 


Point Fields 
WeldNumberPrefix	Gets or sets the weld number prefix. 
(Inherited from BaseWeld.) 
See Also 
LogicalWeld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	1170 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld Constructor 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new logical weld instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LogicalWeld( 
BaseWeld MainWeld 
) 
Visual Basic 
Public Sub New (  
MainWeld As BaseWeld 
) 
Parameters 

MainWeld 
Type: Tekla.Structures.Model..::..BaseWeld 
The main weld for the logical weld. 
See Also 
LogicalWeld Class 
LogicalWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1171 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld Methods 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LogicalWeld type exposes the following members. 
Methods 
  	Name	Description 
AddWeld	Adds a weld to the logical weld. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the logical weld instance with the given identifier from the model database and also the children welds. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Explode	Removes the logical weld from the model but not 
the children welds. 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple properties at once. 

Methods	1172 


Point Fields 
(Inherited from ModelObject.) GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetMainWeld	Returns the main weld of the logical weld. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
(Inherited from BaseWeld.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. 

Methods	1173 




GetUserProperty(String, String%) 

GetWeldGeometries 


Insert 



Point Fields 
(Inherited from ModelObject.) 

Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
(Inherited from BaseWeld.) 
Inserts the logical weld into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing logical weld in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
RemoveWeld	Removes a weld from the logical weld. 
Selects a logical weld from the model database. The logical weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Select(BaseWeld)	Selects the logical weld that a child weld belongs 
to. 
Sets a dynamic string property for the model 
SetDynamicStringProperty 


object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetMainWeld	Sets the main weld for the logical weld. 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
LogicalWeld Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1174 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..AddWeld Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a weld to the logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddWeld( 
BaseWeld Weld 
) 
Visual Basic 
Public Function AddWeld (  
Weld As BaseWeld 
) As Boolean 
Parameters 

Weld 
Type: Tekla.Structures.Model..::..BaseWeld The weld to be added. 

Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1175 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Delete Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the logical weld instance with the given identifier from the model database and also the children welds. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1176 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Explode Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Removes the logical weld from the model but not the children welds. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Explode() 
Visual Basic 
Public Function Explode As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1177 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..GetMainWeld Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the main weld of the logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseWeld GetMainWeld() 
Visual Basic 
Public Function GetMainWeld As BaseWeld 
Return Value 

Type: BaseWeld 
The main weld of the logical weld. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1178 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Insert Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the logical weld into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1179 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Modify Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing logical weld in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1180 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..RemoveWeld Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Removes a weld from the logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveWeld( 
BaseWeld Weld 
) 
Visual Basic 
Public Function RemoveWeld (  
Weld As BaseWeld 
) As Boolean 
Parameters 

Weld 
Type: Tekla.Structures.Model..::..BaseWeld The weld to be removed. 

Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1181 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Select Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Selects a logical weld from the model database. The logical weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Select(BaseWeld) Selects the logical weld that a child weld belongs to. 
See Also 
LogicalWeld Class 
LogicalWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1182 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Select Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a logical weld from the model database. The logical weld identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members 
Select Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1183 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..Select Method (BaseWeld) 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the logical weld that a child weld belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Select( 
BaseWeld ChildWeld 
) 
Visual Basic 
Public Function Select (  
ChildWeld As BaseWeld 
) As Boolean 
Parameters 

ChildWeld 
Type: Tekla.Structures.Model..::..BaseWeld 
A child weld whose logical weld we want to select. 

Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members 
Select Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1184 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld..::..SetMainWeld Method 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the main weld for the logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetMainWeld( 
BaseWeld Weld 
) 
Visual Basic 
Public Function SetMainWeld (  
Weld As BaseWeld 
) As Boolean 
Parameters 

Weld 
Type: Tekla.Structures.Model..::..BaseWeld The weld to be set as the main weld. 

Return Value 
Type: Boolean 
True on success. 
See Also 
LogicalWeld Class 
LogicalWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1185 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LogicalWeld Properties 
LogicalWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LogicalWeld type exposes the following members. 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
(Inherited from BaseWeld.) AngleBelow	Gets or sets the angle below. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is an 
AroundWeld 


around weld (true) or an edge weld (false). 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
(Inherited from BaseWeld.) 
ContourAbove	Gets or sets the contour above. 
(Inherited from BaseWeld.) 
ContourBelow	Gets or sets the contour below. 
(Inherited from BaseWeld.) 
EffectiveThroatAbove	Gets or sets the effective throat above. 
(Inherited from BaseWeld.) 
EffectiveThroatBelow	Gets or sets the effective throat below. 
(Inherited from BaseWeld.) 
ElectrodeClassification	Gets or sets the weld electrode classification. 
(Inherited from BaseWeld.) 
ElectrodeCoefficient	Gets or sets the electrode strength coefficient. 
(Inherited from BaseWeld.) 
ElectrodeStrength	Gets or sets the electrode strength. 
(Inherited from BaseWeld.) 
FinishAbove	Gets or sets the finish above. 
(Inherited from BaseWeld.) 
Properties	1186 


Point Fields 
FinishBelow	Gets or sets the finish below. 
(Inherited from BaseWeld.) Identifier	The identifier of the object. 
(Inherited from Object.) IncrementAmountAbove Gets or sets the increment amount above. 
(Inherited from BaseWeld.) IncrementAmountBelow Gets or sets the increment amount below. 
(Inherited from BaseWeld.) IntermittentType	Gets or sets the weld intermittent type. 
(Inherited from BaseWeld.) 
LengthAbove	Gets or sets the length above. 
(Inherited from BaseWeld.) 
LengthBelow	Gets or sets the length below. 
(Inherited from BaseWeld.) 
MainObject	Gets or sets the main part of the weld. 
(Inherited from BaseWeld.) 
NDTInspection	Gets or sets the NDT inspection level. 
(Inherited from BaseWeld.) 
PitchAbove	Gets or sets the pitch above. 
(Inherited from BaseWeld.) 
PitchBelow	Gets or sets the pitch below. 
(Inherited from BaseWeld.) 
Placement	Gets or sets the weld placement. 
(Inherited from BaseWeld.) 
PrefixAboveLine	Gets or sets the size prefix above the line. 
(Inherited from BaseWeld.) 
PrefixBelowLine	Gets or sets the size prefix below the line. 
(Inherited from BaseWeld.) 
Preparation	Gets or sets the weld preparation. 
(Inherited from BaseWeld.) 
ProcessType	Gets or sets the process type. 
(Inherited from BaseWeld.) 
ReferenceText	Gets or sets the reference text. 
(Inherited from BaseWeld.) 
RootFaceAbove	Gets or sets the root face above. 
(Inherited from BaseWeld.) 
RootFaceBelow	Gets or sets the root face below. 
(Inherited from BaseWeld.) RootOpeningAbove	Gets or sets the root opening above. 
(Inherited from BaseWeld.) RootOpeningBelow	Gets or sets the root opening below. 
(Inherited from BaseWeld.) SecondaryObject	Gets or sets the secondary part of the weld. 
(Inherited from BaseWeld.) 
Properties	1187 


Point Fields 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
(Inherited from BaseWeld.) 
SizeAbove	Gets or sets the size above. 
(Inherited from BaseWeld.) SizeBelow	Gets or sets the size below. 
(Inherited from BaseWeld.) 
Obsolete. 
Standard 


Gets or sets the weld detail/standard. (Inherited from BaseWeld.) 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
(Inherited from BaseWeld.) 
TypeAbove	Gets or sets the type above. 
(Inherited from BaseWeld.) 
TypeBelow	Gets or sets the type below. 
(Inherited from BaseWeld.) 
WeldNumber	Gets the weld number. 
(Inherited from BaseWeld.) 
WeldNumberPrefix	Gets or sets the weld number prefix. 
(Inherited from BaseWeld.) 
See Also 
LogicalWeld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1188 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Material Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Material class represents a single material that parts can be made of. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Material 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Material 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Beam beam = new Beam(new Point(5000, 7000, 0), new Point(6000, 7000, 0));            beam.Material.MaterialString = "K40-1"; 
           beam.Profile.ProfileString = "250*250"; 
           beam.Finish = "PAINT"; 
bool result = false; 
           result = beam.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Material 





Inheritance Hierarchy	1189 


Point Fields 

See Also 
Material Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1190 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Material Members 
Material Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Material type exposes the following members. 
Constructors 
  	Name	Description 
Material Instantiates an empty material instance. Properties 
  	Name	Description 
MaterialString Identifies the material in a string format. See Also 
Material Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1191 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Material Constructor 
Material Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates an empty material instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Material() 
Visual Basic 
Public Sub New 
See Also 
Material Class 
Material Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1192 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Material Properties 
Material Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Material type exposes the following members. 
Properties 
  	Name	Description 
MaterialString Identifies the material in a string format. See Also 
Material Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1193 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Material..::..MaterialString Property 
Material Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Identifies the material in a string format. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string MaterialString { get; set; } 
Visual Basic 
Public Property MaterialString As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Material Class 
Material Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1194 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Model class represents a single model open in Tekla Structures. Before interaction with the model, the user will have to create one instance of this class. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Model 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Model 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Model 
See Also 
Model Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1195 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Model Members 
Model Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Model type exposes the following members. 
Constructors 
  	Name	Description 
Model	Creates a "handle" to the currently open model. Methods 
  	Name	Description 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches 
the drawing of the changed product model to the visible 
CommitChanges()()()() 


views. A dependent plug-in should never call CommitChanges, since this would make undo very difficult for the user to do. However, non-dependent plug-ins require a separate commit if new objects are created. 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches 
the drawing of the changed product model to the visible views. A plug-in should never call CommitChanges, 
since this would make undo very difficult for the user to do. 
GetClashCheckHandler	Returns a new clash check handler. 
Returns true if a proper connection to the Tekla Structures process has been established. If, for some reason, the connection has been lost, the method will return false. Currently, there's no way to re-establish the connection. 
GetGUIDByIdentifier	Returns the GUID of the given identifier instance. 


Methods	1196 


Point Fields 
GetIdentifierByGUID	Returns an identifier instance that has the given GUID 
in the model. 
GetInfo	Returns information about the currently open model. 
GetModelObjectSelector Returns a ModelObjectSelector instance from which 
different kind of selections can be made. 
GetPhases	Returns information about the current model's phases. 
GetProjectInfo	Returns information about the current model's project. 
Returns a new work plane handler for the model. The 
GetWorkPlaneHandler 


SelectModelObject 


work plane handler can be used to manipulate the current work plane in the model. 
Takes as input an identifier to an object and then checks its type and instantiates and selects it before returning it. 
See Also 
Model Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




























See Also	1197 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model Constructor 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a "handle" to the currently open model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Model() 
Visual Basic 
Public Sub New 
See Also 
Model Class 
Model Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1198 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Model Methods 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Model type exposes the following members. 
Methods 
  	Name	Description 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches 
the drawing of the changed product model to the visible 
CommitChanges()()()() 


views. A dependent plug-in should never call CommitChanges, since this would make undo very difficult for the user to do. However, non-dependent plug-ins require a separate commit if new objects are created. 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches 
the drawing of the changed product model to the visible views. A plug-in should never call CommitChanges, 
since this would make undo very difficult for the user to do. 
GetClashCheckHandler	Returns a new clash check handler. 
Returns true if a proper connection to the Tekla Structures process has been established. If, for some reason, the connection has been lost, the method will return false. Currently, there's no way to re-establish the connection. 
GetGUIDByIdentifier	Returns the GUID of the given identifier instance. GetIdentifierByGUID	Returns an identifier instance that has the given GUID 
in the model. 
GetInfo	Returns information about the currently open model. 
GetModelObjectSelector Returns a ModelObjectSelector instance from which 
different kind of selections can be made. 

Methods	1199 


Point Fields 
GetPhases	Returns information about the current model's phases. GetProjectInfo	Returns information about the current model's project. 
Returns a new work plane handler for the model. The 
GetWorkPlaneHandler 


SelectModelObject 


work plane handler can be used to manipulate the current work plane in the model. 
Takes as input an identifier to an object and then checks its type and instantiates and selects it before returning it. 
See Also 
Model Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	1200 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..CommitChanges Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches 
the drawing of the changed product model to the visible 
CommitChanges()()()() 






CommitChanges(String) 


views. A dependent plug-in should never call CommitChanges, since this would make undo very difficult for the user to do. However, non-dependent plug-ins require a separate commit if new objects are created. 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches 
the drawing of the changed product model to the visible views. A plug-in should never call CommitChanges, since this would make undo very difficult for the user to do. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1201 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..CommitChanges Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches the drawing of the changed product model to the visible views. A dependent plug-in 
should never call CommitChanges, since this would make undo very difficult for the user to do. However, non-dependent plug-ins require a separate commit if new objects are created. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CommitChanges() 
Visual Basic 
Public Function CommitChanges As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Model Class 
Model Members 
CommitChanges Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1202 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..CommitChanges Method (String) 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Commits the changes made to the model database so far. One commit is something that a user can later on undo with the undo command. A commit also launches the drawing of the changed product model to the visible views. A plug-in should never call CommitChanges, since this would make undo very difficult for the user to do. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CommitChanges( 
string Message 
) 
Visual Basic 
Public Function CommitChanges (  
Message As String 
) As Boolean 
Parameters 

Message 
Type: System..::..String 
The message to be saved with the commit. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Model Class 
Model Members 
CommitChanges Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1203 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Model..::..GetClashCheckHandler Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new clash check handler. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ClashCheckHandler GetClashCheckHandler() 
Visual Basic 
Public Function GetClashCheckHandler As ClashCheckHandler 
Return Value 

Type: ClashCheckHandler 
The new clash check handler instance. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1204 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..GetConnectionStatus Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if a proper connection to the Tekla Structures process has been established. If, for some reason, the connection has been lost, the method will return false. Currently, there's no way to re-establish the connection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetConnectionStatus() 
Visual Basic 
Public Function GetConnectionStatus As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1205 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..GetGUIDByIdentifier Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the GUID of the given identifier instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string GetGUIDByIdentifier( 
Identifier identifier 
) 
Visual Basic 
Public Function GetGUIDByIdentifier (  
identifier As Identifier 
) As String 
Parameters 

identifier 
Type: Tekla.Structures..::..Identifier 
The identifier to look for in the model. 

Return Value 

Type: String 
The GUID of the identifier. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1206 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..GetIdentifierByGUID Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an identifier instance that has the given GUID in the model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier GetIdentifierByGUID( 
string guid 
) 
Visual Basic 
Public Function GetIdentifierByGUID (  
guid As String 
) As Identifier 
Parameters 

guid 
Type: System..::..String 
The GUID to look for in the model. 

Return Value 

Type: Identifier 
The identifier of the GUID, or null if not found. 
See Also 
Model Class 
Model Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1207 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..GetInfo Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns information about the currently open model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelInfo GetInfo() Visual Basic 
Public Function GetInfo As ModelInfo 
Return Value 

Type: ModelInfo 
A ModelInfo instance on success. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1208 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Model..::..GetModelObjectSelector Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a ModelObjectSelector instance from which different kind of selections can be made. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectSelector GetModelObjectSelector() 
Visual Basic 
Public Function GetModelObjectSelector As ModelObjectSelector 
Return Value 

Type: ModelObjectSelector 
A new ModelObjectSelector instance. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1209 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..GetPhases Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns information about the current model's phases. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PhaseCollection GetPhases() 
Visual Basic 
Public Function GetPhases As PhaseCollection 
Return Value 

Type: PhaseCollection 
A PhaseCollection instance on success. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1210 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..GetProjectInfo Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns information about the current model's project. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ProjectInfo GetProjectInfo() 
Visual Basic 
Public Function GetProjectInfo As ProjectInfo 
Return Value 

Type: ProjectInfo 
A ProjectInfo instance on success. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1211 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Model..::..GetWorkPlaneHandler Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a new work plane handler for the model. The work plane handler can be used to manipulate the current work plane in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public WorkPlaneHandler GetWorkPlaneHandler() 
Visual Basic 
Public Function GetWorkPlaneHandler As WorkPlaneHandler 
Return Value 

Type: WorkPlaneHandler 
The new work plane handler instance. 
See Also 
Model Class 
Model Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1212 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Model..::..SelectModelObject Method 
Model Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Takes as input an identifier to an object and then checks its type and instantiates and selects it before returning it. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject SelectModelObject( 
Identifier ID 
) 
Visual Basic 
Public Function SelectModelObject (  
ID As Identifier 
) As ModelObject 
Parameters 

ID 
Type: Tekla.Structures..::..Identifier 
The identifier of the model object that is to be selected. 

Return Value 

Type: ModelObject 
The selected model object with the given identifier. 
See Also 
Model Class 
Model Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1213 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelHandler class provides information about the currently open Tekla Structures model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ModelHandler 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelHandler 
Examples 
The following example opens the model that is in the C:\teklastructuresmodels\NewModel17 folder and shows a message if the opening was successful. 

  	Copy 
using Tekla.Structures.Model; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           ModelHandler handler = new ModelHandler(); 
if (handler.IsModelSaved()) 
           { 
if (handler.Open("C:\\teklastructuresmodels\\NewModel17")) 
                   MessageBox.Show("The model opened successfully."); 
           } 
else 
               MessageBox.Show("The current model is not saved."); 
       } 
} 




Examples	1214 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ModelHandler 
See Also 
ModelHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	1215 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler Members 
ModelHandler Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelHandler type exposes the following members. 
Constructors 
  	Name	Description 
ModelHandler Creates a new ModelHandler instance. 
Methods 
  	Name	Description 
CreateNewMultiUserModel	Creates a new multi-user model. CreateNewSingleUserModel Creates a new single user model. IsModelAutoSaved	Tells whether a model has auto saved information. IsModelSaved	Tells whether current model has been saved. 
Open	Opens a new model to Tekla Structures without 
saving changes to current model. 
Save	Saves current model with comment and user 
information. 
See Also 
ModelHandler Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1216 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler Constructor 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new ModelHandler instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelHandler() 
Visual Basic 
Public Sub New 
See Also 
ModelHandler Class 
ModelHandler Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1217 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler Methods 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelHandler type exposes the following members. 
Methods 
  	Name	Description 
CreateNewMultiUserModel	Creates a new multi-user model. CreateNewSingleUserModel Creates a new single user model. IsModelAutoSaved	Tells whether a model has auto saved information. IsModelSaved	Tells whether current model has been saved. 
Open	Opens a new model to Tekla Structures without 
saving changes to current model. 
Save	Saves current model with comment and user 
information. 
See Also 
ModelHandler Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1218 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHandler..::..CreateNewMultiUserModel Method 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new multi-user model. 
Current model is not saved in the operation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CreateNewMultiUserModel( 
string ModelName, 
string ModelFolder, 
string ServerName 
) 
Visual Basic 
Public Function CreateNewMultiUserModel (  
ModelName As String, 
ModelFolder As String, 
ServerName As String 
) As Boolean 
Parameters 

ModelName 
Type: System..::..String 
The name for the new model. 

ModelFolder 
Type: System..::..String 
The folder path for the new model. 

ServerName 
Type: System..::..String 
The multi user server name. 

Return Value 
Type: Boolean True on success. 



Syntax	1219 


Point Fields 

See Also 
ModelHandler Class 
ModelHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	1220 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHandler..::..CreateNewSingleUserModel Method 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new single user model. 
Current model is not saved in the operation. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CreateNewSingleUserModel( 
string ModelName, 
string ModelFolder, 
string Template = "" 
) 
Visual Basic 
Public Function CreateNewSingleUserModel (  
ModelName As String, 
ModelFolder As String, 
        Optional  


ModelName 
Type: System..::..String 
The name for the new model. 

ModelFolder 
Type: System..::..String 
The folder path for the new model. 

Template (Optional) 
Type: System..::..String 
The optional template name for the new model. 

Return Value 
Type: Boolean True on success. 



Syntax	1221 


Point Fields 

See Also 
ModelHandler Class 
ModelHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	1222 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHandler..::..IsModelAutoSaved Method 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Tells whether a model has auto saved information. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsModelAutoSaved( 
string ModelFolder 
) 
Visual Basic 
Public Function IsModelAutoSaved (  
ModelFolder As String 
) As Boolean 
Parameters 

ModelFolder 
Type: System..::..String 
The model folder path to be used. 

Return Value 

Type: Boolean 
True if there is auto saved information. 
See Also 
ModelHandler Class 
ModelHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1223 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler..::..IsModelSaved Method 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Tells whether current model has been saved. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsModelSaved() 
Visual Basic 
Public Function IsModelSaved As Boolean 
Return Value 

Type: Boolean 
True if there are no unsaved changes in the model. 
See Also 
ModelHandler Class 
ModelHandler Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1224 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler..::..Open Method 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Opens a new model to Tekla Structures without saving changes to current model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Open( 
string ModelFolder, 
bool OpenAutoSaved = false 
) 
Visual Basic 
Public Function Open (  ModelFolder As String, 
        Optional  


ModelFolder 
Type: System..::..String 
The model folder path to be used. 
OpenAutoSaved (Optional) 
Type: System..::..Boolean 
Tells whether to open auto saved information or not. Optional parameter, default = false 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelHandler Class 
ModelHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1225 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelHandler..::..Save Method 
ModelHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Saves current model with comment and user information. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Save( 
string Comment = "", 
string User = "" 
) 
Visual Basic 
Public Function Save (  
        Optional  
User As String = "" ) As Boolean 
Parameters 

Comment (Optional) 
Type: System..::..String 
The comment for save operation, used only with multi-user models. 

User (Optional) 
Type: System..::..String 
The user identification, used only with multi-user models. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelHandler Class 
ModelHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1226 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelInfo class provides information about the currently open Tekla Structures model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ModelInfo 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelInfo 
Examples 
When Tekla Structures is running the length of the model name tells you whether the model is open. 

  	Copy 
using Tekla.Structures.Model; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
    { 
        Model CurrentModel = new Model(); 
        ModelInfo Info = CurrentModel.GetInfo(); 
if (CurrentModel.GetConnectionStatus()) 
        { 
if (Info.ModelName.Length == 0) 
            { 
                MessageBox.Show("A Tekla Structures model is not open.");             } 
        } 
    } 
} 




Examples	1227 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ModelInfo 
See Also 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	1228 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo Members 
ModelInfo Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelInfo type exposes the following members. 
Properties 
  	Name	Description 
CurrentPhase	The number of the Tekla Structures model's current phase. ModelName	The name of the Tekla Structures model. 
ModelPath	The path to the Tekla Structures model. 
NorthDirection	The north direction of the current Tekla Structures model. SharedModel	The read-only property of the Tekla Structures model's sharing 
status. 
SingleUserModel The read-only property if the Tekla Structures model is a single 
user model. 
See Also 
ModelInfo Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1229 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo Properties 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelInfo type exposes the following members. 
Properties 
  	Name	Description 
CurrentPhase	The number of the Tekla Structures model's current phase. ModelName	The name of the Tekla Structures model. 
ModelPath	The path to the Tekla Structures model. 
NorthDirection	The north direction of the current Tekla Structures model. SharedModel	The read-only property of the Tekla Structures model's sharing 
status. 
SingleUserModel The read-only property if the Tekla Structures model is a single 
user model. 
See Also 
ModelInfo Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1230 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo..::..CurrentPhase Property 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The number of the Tekla Structures model's current phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int CurrentPhase { get; set; } 
Visual Basic 
Public Property CurrentPhase As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
ModelInfo Class 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1231 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo..::..ModelName Property 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the Tekla Structures model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ModelName { get; set; } 
Visual Basic 
Public Property ModelName As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ModelInfo Class 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1232 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo..::..ModelPath Property 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The path to the Tekla Structures model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ModelPath { get; set; } 
Visual Basic 
Public Property ModelPath As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ModelInfo Class 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1233 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo..::..NorthDirection Property 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The north direction of the current Tekla Structures model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double NorthDirection { get; set; } 
Visual Basic 
Public Property NorthDirection As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
ModelInfo Class 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1234 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo..::..SharedModel Property 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The read-only property of the Tekla Structures model's sharing status. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SharedModel { get; } 
Visual Basic 
Public ReadOnly Property SharedModel As Boolean 
Get 
Property Value 
Type: Boolean 
See Also 
ModelInfo Class 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1235 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelInfo..::..SingleUserModel Property 
ModelInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The read-only property if the Tekla Structures model is a single user model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SingleUserModel { get; } 
Visual Basic 
Public ReadOnly Property SingleUserModel As Boolean 
Get 
Property Value 
Type: Boolean 
See Also 
ModelInfo Class 
ModelInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1236 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelObject class is an abstract base class for all model objects, such as parts, bolts, welds and reinforcements. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class ModelObject : Object,  
IComparable, IEquatable<ModelObject> 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class ModelObject 
Inherits Object 
Implements IComparable, IEquatable(Of ModelObject) 
Remarks 
One way to find out the correct names of the report properties is to open the Template Editor. With the Template Editor you can see the listing of all the properties that can be added to report templates. 
Examples 
In the following example a connection to the Tekla Structures model has already been established and next the values of some user-defined attributes (UDAs) are going to be found out. The UDAs asked are the string value of CHECKED_BY, the double value of CHECKED_DATE, and the integer value of OBJECT_LOCKED. 

  	Copy 
using Tekla.Structures.Model; 
using System; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 


Examples	1237 


Point Fields 
           ModelObjectEnumerator ObjectEnum = Model.GetModelObjectSelector().GetAllObjects(); 
           ObjectEnum.SelectInstances = false; // Set the "SelectInstances" to false to speed up  
string Result = "CHECKED BY, CHECKED DATE, OBJECT LOCKED \n"; while(ObjectEnum.MoveNext()) 
           { 
if(ObjectEnum.Current != null) 
               { 
                   Beam BeamObject = ObjectEnum.Current as Beam; 
if(BeamObject != null) 
                   { 
string CheckedBy = ""; 
double DateCheckedValue = 0.0; 
int LockedStatus = -1; 
                       DateTime DateChecked = new System.DateTime(1970, 1, 1); 
                       BeamObject.GetUserProperty("CHECKED_BY", ref CheckedBy); 
                       BeamObject.GetUserProperty("CHECKED_DATE", ref DateCheckedValue); 
                       BeamObject.GetUserProperty("OBJECT_LOCKED", ref LockedStatus); 
if(CheckedBy.Length > 0 || DateCheckedValue > 0.0 || 
                           LockedStatus != -1) 
                       DateChecked = DateChecked.AddSeconds(DateCheckedValue); 
                       Result += CheckedBy; 
                       Result += ", "; 
                       Result += DateChecked.ToString("dd.MM.yyyy"); 
if(LockedStatus == 1) 
                       { 
                           Result += ", Locked\n"; 
                       } 
else 
                       { 
                           Result += ", Not locked\n"; 
                       } 
                   } 
               } 
           } 
           MessageBox.Show(Result); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Assembly 
            Tekla.Structures.Model..::..BaseComponent 
            Tekla.Structures.Model..::..BaseWeld 
            Tekla.Structures.Model..::..BoltGroup 
            Tekla.Structures.Model..::..Boolean 
            Tekla.Structures.Model..::..ControlCircle 
            Tekla.Structures.Model..::..ControlLine 
            Tekla.Structures.Model..::..ControlPlane 
            Tekla.Structures.Model..::..ControlPoint 
            Tekla.Structures.Model..::..Grid 
            Tekla.Structures.Model..::..GridPlane 

Inheritance Hierarchy	1238 


Point Fields 
            Tekla.Structures.Model..::..HierarchicDefinition 
            Tekla.Structures.Model..::..HierarchicObject 
            Tekla.Structures.Model..::..Load 
            Tekla.Structures.Model..::..LoadGroup 
            Tekla.Structures.Model..::..Part 
            Tekla.Structures.Model..::..PolymeshObjectBase 
            Tekla.Structures.Model..::..PourObject 
            Tekla.Structures.Model..::..RebarSplice 
            Tekla.Structures.Model..::..ReferenceModel 
            Tekla.Structures.Model..::..ReferenceModelObject             Tekla.Structures.Model..::..Reinforcement 
            Tekla.Structures.Model..::..SurfaceTreatment 
            Tekla.Structures.Model..::..Task 
            Tekla.Structures.Model..::..TaskDependency 
            Tekla.Structures.Model..::..TaskWorktype 
See Also 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




























See Also	1239 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject Members 
ModelObject Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObject type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
Delete	Deletes the instance from the model database. 
Equals	Check if Identifiers of model objects are same. 
Retrieves all properties for the model object in 
GetAllReportProperties 


one hashtable. Type for the returned value must be checked using type casting. 
Retrieves all properties for the model object in 
one hashtable. Type for the returned value must 
be checked using type casting. 
GetChildren	Returns an enumerator of all the children model 
objects. 
GetCoordinateSystem	Returns the coordinate system for the given model 
object. 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
GetDoubleUserProperties	Retrieves all double properties for the model 
object. 
GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 
GetFatherComponent	Returns the father component of the model object. 
GetHierarchicObjects	Returns an enumerator of all the connected 
hierarchic objects. 
Retrieves multiple integer report properties for 
GetIntegerReportProperties 


the model object. It is faster to fetch multiple properties at once. 


Methods	1240 


Point Fields 
GetIntegerUserProperties	Retrieves all integer properties for the model 
object. 
Retrieves the phase of the model object (the phase 
GetPhase 

GetReportProperty(String, Double%) 
GetReportProperty(String, Int32%) 
GetReportProperty(String, String%) 


number, the phase name, the phase comment and whether the phase is the current one or not). 
Retrieves a double property of the report for the model object. 
Retrieves an integer property of the report for the model object. 
Retrieves a string property of the report for the model object. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
GetStringUserProperties	Retrieves all string properties for the model 
object. 
GetUserProperty(String, 
Double%)	Retrieves a double property for the model object. 
GetUserProperty(String, 
Int32%) 
GetUserProperty(String, 
String%)	Retrieves a string property for the model object. 
Insert	Inserts the model object instance into the model 
database. 
Modify	Modifies the model instance in the model 
database. 
Select	Selects the model object instance from the model 
database. 
SetDynamicStringProperty	Sets a dynamic string property for the model 
object. 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
SetPhase	Sets the phase of the model object. 
SetUserProperty(String, 
Double)	Sets a double property for the model object. 
SetUserProperty(String, 
Int32)	Sets an integer property for the model object. 
SetUserProperty(String, 
String)	Sets a string property for the model object. 
Properties 
  	Name	Description 


Properties	1241 


Point Fields 
Identifier The identifier of the object. 
(Inherited from Object.) 
See Also 
ModelObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	1242 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject Methods 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObject type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
Delete	Deletes the instance from the model database. 
Equals	Check if Identifiers of model objects are same. 
Retrieves all properties for the model object in 
GetAllReportProperties 


one hashtable. Type for the returned value must be checked using type casting. 
Retrieves all properties for the model object in 
one hashtable. Type for the returned value must 
be checked using type casting. 
GetChildren	Returns an enumerator of all the children model 
objects. 
GetCoordinateSystem	Returns the coordinate system for the given model 
object. 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
GetDoubleUserProperties	Retrieves all double properties for the model 
object. 
GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 
GetFatherComponent	Returns the father component of the model object. 
GetHierarchicObjects	Returns an enumerator of all the connected 
hierarchic objects. 
Retrieves multiple integer report properties for 
GetIntegerReportProperties 


the model object. It is faster to fetch multiple properties at once. 


Methods	1243 


Point Fields 
GetIntegerUserProperties	Retrieves all integer properties for the model 
object. 
Retrieves the phase of the model object (the phase 
GetPhase 

GetReportProperty(String, Double%) 
GetReportProperty(String, Int32%) 
GetReportProperty(String, String%) 


number, the phase name, the phase comment and whether the phase is the current one or not). 
Retrieves a double property of the report for the model object. 
Retrieves an integer property of the report for the model object. 
Retrieves a string property of the report for the model object. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
GetStringUserProperties	Retrieves all string properties for the model 
object. 
GetUserProperty(String, 
Double%)	Retrieves a double property for the model object. 
GetUserProperty(String, 
Int32%) 
GetUserProperty(String, 
String%)	Retrieves a string property for the model object. 
Insert	Inserts the model object instance into the model 
database. 
Modify	Modifies the model instance in the model 
database. 
Select	Selects the model object instance from the model 
database. 
SetDynamicStringProperty	Sets a dynamic string property for the model 
object. 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
SetPhase	Sets the phase of the model object. 
SetUserProperty(String, 
Double)	Sets a double property for the model object. 
SetUserProperty(String, 
Int32)	Sets an integer property for the model object. 
SetUserProperty(String, 
String)	Sets a string property for the model object. 
See Also 
ModelObject Class 
Tekla.Structures.Model Namespace 

See Also	1244 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1245 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..CompareTo Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Compares Identifiers of model objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int CompareTo( 
Object obj 
) 
Visual Basic 
Public Function CompareTo (  
obj As Object 
) As Integer 
Parameters 

obj 
Type: System..::..Object 
The model object to be used in comparison. 

Return Value 

Type: Int32 
0 if object Identifiers are the same, 1 if given object Identifier is bigger, -1 otherwise. 

Implements 

IComparable..::..CompareTo(Object) 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1246 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..Delete Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the instance from the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Delete() 
Visual Basic 
Public MustOverride Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1247 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..Equals Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Check if Identifiers of model objects are same. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Equals( 
ModelObject other 
) 
Visual Basic 
Public Function Equals (  
other As ModelObject 
) As Boolean 
Parameters 

other 
Type: Tekla.Structures.Model..::..ModelObject The model object to be used in comparison. 

Return Value 

Type: Boolean 
true if object Identifiers are the same, false otherwise, 

Implements 

IEquatable<(Of <(<'T>)>)>..::..Equals(T) 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1248 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetAllReportProperties Method 
ModelObject Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetAllReportProperties( 
ArrayList stringNames, 
ArrayList doubleNames, 
ArrayList integerNames, 
ref Hashtable values 
) 
Visual Basic 
Public Function GetAllReportProperties (  
stringNames As ArrayList, 
doubleNames As ArrayList, 
integerNames As ArrayList, 
ByRef values As Hashtable 
) As Boolean 
Parameters 

stringNames 
Type: System.Collections..::..ArrayList 
An array list containing the names of the string properties. 

doubleNames 
Type: System.Collections..::..ArrayList 
An array list containing the names of the double properties. 

integerNames 
Type: System.Collections..::..ArrayList 
An array list containing the names of the integer properties. 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table list that contains all the values that were retrieved successfully. 

Syntax	1249 


Point Fields 
Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
Examples 
In the following example a connection to the Tekla Structures model has already been established and next the values of some report properties attributes are going to be found out for bolt groups in model. 

  	Copy 
using Tekla.Structures.Model; 
using System; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
        { 
            ArrayList sNames = new ArrayList(); 
            sNames.Add("NAME"); 
            sNames.Add("SCREW_NAME"); 
            sNames.Add("SCREW_TYPE"); 
            sNames.Add("TYPE"); 
            sNames.Add("TYPE1"); 
            sNames.Add("TYPE2"); 
            sNames.Add("TYPE3"); 
            sNames.Add("TYPE4"); 
            sNames.Add("STANDARD"); 
            sNames.Add("SHORT_NAME"); 
            sNames.Add("MATERIAL"); 
            sNames.Add("FINISH"); 
            sNames.Add("GRADE"); 
            ArrayList iNames = new ArrayList(); 
            iNames.Add("DATE"); 
            iNames.Add("FATHER_ID"); 
            iNames.Add("GROUP_ID"); 
            iNames.Add("HIERARCHY_LEVEL"); 
            iNames.Add("MODEL_TOTAL"); 
            ArrayList dNames = new ArrayList(); 
            dNames.Add("EXTRA_LENGTH"); 
            dNames.Add("FLANGE_THICKNESS"); 
            dNames.Add("FLANGE_WIDTH"); 
            dNames.Add("HEIGHT"); 
            dNames.Add("LENGTH"); 
            dNames.Add("PRIMARYWEIGHT"); 
            dNames.Add("PROFILE_WEIGHT"); 
            dNames.Add("ROUNDING_RADIUS"); 
            dNames.Add("LENGTH"); 
            dNames.Add("DIAMETER"); 
            dNames.Add("WEIGHT"); 
            dNames.Add("HEAD_DIAMETER"); 
            dNames.Add("THICKNESS"); 
            dNames.Add("WASHER.THICKNESS"); 
            dNames.Add("WASHER.INNER_DIAMETER"); 
            dNames.Add("WASHER.OUTER_DIAMETER"); 
            dNames.Add("WASHER.THICKNESS1"); 
            dNames.Add("WASHER.INNER_DIAMETER1");             dNames.Add("WASHER.OUTER_DIAMETER1"); 

Examples	1250 


Point Fields 
            dNames.Add("WASHER.THICKNESS2"); 
            dNames.Add("WASHER.INNER_DIAMETER2");             dNames.Add("WASHER.OUTER_DIAMETER2");             dNames.Add("NUT.THICKNESS"); 
            dNames.Add("NUT.INNER_DIAMETER"); 
            dNames.Add("NUT.OUTER_DIAMETER"); 
            dNames.Add("NUT.THICKNESS2"); 
            dNames.Add("NUT.OUTER_DIAMETER2"); 
            ModelObjectEnumerator.AutoFetch = true; 
            ModelObjectEnumerator myEnum = myModel.GetModelObjectSelector().GetAllObjectsWithType 
while (myEnum.MoveNext()) 
            { 
try 
                { 
                    myObject = myEnum.Current as ModelObject; 
if (myObject != null) 
                    { 
                        Hashtable sValues = new Hashtable(sNames.Count + dNames.Count + iNames.Co 
if (myObject.GetAllReportProperties(sNames, dNames, iNames, ref sValues)) 
                        { 
foreach (DictionaryEntry value in sValues) 
                                Console.WriteLine(value.Key.ToString() + " : " + value.Value.ToSt 
                        } 
                    } 
                } 
catch { } 
             } 
         } 
} 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	1251 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetAllUserProperties Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetAllUserProperties( 
ref Hashtable values 
) 
Visual Basic 
Public Function GetAllUserProperties (  
ByRef values As Hashtable 
) As Boolean 
Parameters 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1252 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..GetChildren Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the children model objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public virtual ModelObjectEnumerator GetChildren() 
Visual Basic 
Public Overridable Function GetChildren As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1253 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetCoordinateSystem Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the coordinate system for the given model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CoordinateSystem GetCoordinateSystem() 
Visual Basic 
Public Function GetCoordinateSystem As CoordinateSystem 
Return Value 

Type: CoordinateSystem 
The coordinate system for the given model object. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1254 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetDoubleReportProperties Method ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetDoubleReportProperties( 
ArrayList names, 
ref Hashtable values 
) 
Visual Basic 
Public Function GetDoubleReportProperties (  
names As ArrayList, 
ByRef values As Hashtable 
) As Boolean 
Parameters 

names 
Type: System.Collections..::..ArrayList 
An array list containing the names of the properties. 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 


See Also	1255 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1256 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetDoubleUserProperties Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves all double properties for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetDoubleUserProperties( 
ref Hashtable values 
) 
Visual Basic 
Public Function GetDoubleUserProperties (  
ByRef values As Hashtable 
) As Boolean 
Parameters 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1257 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetDynamicStringProperty Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets a dynamic string property from the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetDynamicStringProperty( 
string name, 
ref string value 
) 
Visual Basic 
Public Function GetDynamicStringProperty (  
name As String, 
ByRef value As String 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be set. 

value 
Type: System..::..String% 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1258 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetFatherComponent Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the father component of the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public BaseComponent GetFatherComponent() 
Visual Basic 
Public Function GetFatherComponent As BaseComponent 
Return Value 

Type: BaseComponent 
A base component on success, otherwise null. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1259 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetHierarchicObjects Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the connected hierarchic objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetHierarchicObjects() 
Visual Basic 
Public Function GetHierarchicObjects As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1260 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetIntegerReportProperties Method ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetIntegerReportProperties( 
ArrayList names, 
ref Hashtable values 
) 
Visual Basic 
Public Function GetIntegerReportProperties (  
names As ArrayList, 
ByRef values As Hashtable 
) As Boolean 
Parameters 

names 
Type: System.Collections..::..ArrayList 
An array list containing the names of the properties. 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 


See Also	1261 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1262 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetIntegerUserProperties Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves all integer properties for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetIntegerUserProperties( 
ref Hashtable values 
) 
Visual Basic 
Public Function GetIntegerUserProperties (  
ByRef values As Hashtable 
) As Boolean 
Parameters 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1263 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..GetPhase Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetPhase( 
out Phase phase 
) 
Visual Basic 
Public Function GetPhase (  
        < 


phase 
Type: Tekla.Structures.Model..::..Phase% The returned phase. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1264 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetReportProperty Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetReportProperty(String, 
Double%) 
GetReportProperty(String, Int32%) 
GetReportProperty(String, String%) 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 


Retrieves an integer property of the report for the model object. 
Retrieves a string property of the report for the model object. 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	1265 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetReportProperty Method (String, Double%) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves a double property of the report for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetReportProperty( 
string name, 
ref double value 
) 
Visual Basic 
Public Function GetReportProperty (  
name As String, 
ByRef value As Double 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be retrieved. 

value 
Type: System..::..Double% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ModelObject Class 
ModelObject Members 
GetReportProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1266 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetReportProperty Method (String, Int32%) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves an integer property of the report for the model object. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetReportProperty( 
string name, 
ref int value 
) 
Visual Basic 
Public Function GetReportProperty (  
name As String, 
ByRef value As Integer 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be retrieved. 

value 
Type: System..::..Int32% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ModelObject Class 
ModelObject Members 
GetReportProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1267 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetReportProperty Method (String, String%) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a string property of the report for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetReportProperty( 
string name, 
ref string value 
) 
Visual Basic 
Public Function GetReportProperty (  
name As String, 
ByRef value As String 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be retrieved. 

value 
Type: System..::..String% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ModelObject Class 
ModelObject Members 
GetReportProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1268 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetStringReportProperties Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetStringReportProperties( 
ArrayList names, 
ref Hashtable values 
) 
Visual Basic 
Public Function GetStringReportProperties (  
names As ArrayList, 
ByRef values As Hashtable 
) As Boolean 
Parameters 

names 
Type: System.Collections..::..ArrayList 
An array list containing the names of the properties. 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 


See Also	1269 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1270 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetStringUserProperties Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves all string properties for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetStringUserProperties( 
ref Hashtable values 
) 
Visual Basic 
Public Function GetStringUserProperties (  
ByRef values As Hashtable 
) As Boolean 
Parameters 

values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1271 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetUserProperty Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetUserProperty(String, 
Double%) 











Copyright  © Tekla 2013. All rights reserved. 


















See Also	1272 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetUserProperty Method (String, Double%) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a double property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string name, 
ref double value 
) 
Visual Basic 
Public Function GetUserProperty (  
name As String, 
ByRef value As Double 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be retrieved. 

value 
Type: System..::..Double% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ModelObject Class 
ModelObject Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1273 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetUserProperty Method (String, Int32%) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves an integer property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string name, 
ref int value 
) 
Visual Basic 
Public Function GetUserProperty (  
name As String, 
ByRef value As Integer 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be retrieved. 

value 
Type: System..::..Int32% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ModelObject Class 
ModelObject Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1274 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..GetUserProperty Method (String, String%) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a string property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string name, 
ref string value 
) 
Visual Basic 
Public Function GetUserProperty (  
name As String, 
ByRef value As String 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be retrieved. 

value 
Type: System..::..String% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ModelObject Class 
ModelObject Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1275 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..Insert Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the model object instance into the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Insert() 
Visual Basic 
Public MustOverride Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1276 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..Modify Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the model instance in the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Modify() 
Visual Basic 
Public MustOverride Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1277 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..Select Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the model object instance from the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Select() 
Visual Basic 
Public MustOverride Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1278 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..SetDynamicStringProperty Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a dynamic string property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetDynamicStringProperty( 
string name, 
string value 
) 
Visual Basic 
Public Function SetDynamicStringProperty (  
name As String, 
value As String 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be set. 

value 
Type: System..::..String 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1279 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..SetLabel Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetLabel( 
string label 
) 
Visual Basic 
Public Function SetLabel (  
label As String 
) As Boolean 
Parameters 

label 
Type: System..::..String 
The label to set to the model object. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1280 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject..::..SetPhase Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the phase of the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetPhase( 
Phase phase 
) 
Visual Basic 
Public Function SetPhase (  
phase As Phase 
) As Boolean 
Parameters 

phase 
Type: Tekla.Structures.Model..::..Phase 
The new phase. A phase with this phase's number must exist in the database. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObject Class 
ModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1281 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..SetUserProperty Method 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
SetUserProperty(String, Double)	Sets a double property for the model object. SetUserProperty(String, Int32)	Sets an integer property for the model object. SetUserProperty(String, String)	Sets a string property for the model object. 
See Also 
ModelObject Class 
ModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1282 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..SetUserProperty Method (String, Double) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a double property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string name, 
double value 
) 
Visual Basic 
Public Function SetUserProperty (  
name As String, 
value As Double 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be set. 

value 
Type: System..::..Double 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ModelObject Class 
ModelObject Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1283 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..SetUserProperty Method (String, Int32) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets an integer property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string name, 
int value 
) 
Visual Basic 
Public Function SetUserProperty (  
name As String, 
value As Integer 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be set. 

value 
Type: System..::..Int32 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ModelObject Class 
ModelObject Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1284 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..SetUserProperty Method (String, String) 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a string property for the model object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string name, 
string value 
) 
Visual Basic 
Public Function SetUserProperty (  
name As String, 
value As String 
) As Boolean 
Parameters 

name 
Type: System..::..String 
The name of the property to be set. 

value 
Type: System..::..String 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ModelObject Class 
ModelObject Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1285 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObject Properties 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObject type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
See Also 
ModelObject Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	1286 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObject..::..ModelObjectEnum Enumeration 
ModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
All possible concrete model object subclasses are defined here. This enumeration can be used to fetch certain types of objects from the Tekla Structures model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ModelObjectEnum 
Visual Basic 
Public Enumeration ModelObjectEnum 
Members 
Member name	Value		Description 
UNKNOWN	0	The unknown model object. 
BEAM	1	The beam. 
POLYBEAM	2	The polybeam. 
CONTOURPLATE	3	The contour plate. 
BOOLEANPART	4	The boolean part. 
FITTING	5	The fitting. 
CUTPLANE	6	The cutplane. 
SURFACE_TREATMENT	7	The surface treatment. 
WELD	8	The weld. 
ASSEMBLY	9	The assembly. 
SINGLEREBAR	10	The single rebar. 
REBARGROUP	11	The rebar group. 
REBARMESH	12	The rebar mesh. 
REBARSTRAND	13	The rebar strand. 
CONTROL_PLANE	14	The control plane. 
BOLT_ARRAY	15	The bolt array. 
BOLT_CIRCLE	16	The bolt circle. 

Members	1287 


Point Fields 
BOLT_XYLIST	17	The bolt XY list. 
LOAD_POINT	18	The point load. 
LOAD_LINE	19	The line load. 
LOAD_AREA	20	The area load. 
LOAD_UNIFORM	21	The uniform load. 
GRID	22	The grid. 
GRIDPLANE	23	The grid plane. 
CONNECTION	24	The connection. 
COMPONENT	25	The component. 
SEAM	26	The seam. 
DETAIL	27	The detail. 
REFERENCE_MODEL	28	The reference model. REBAR_SPLICE	29	The rebar splice. 
LOAD_GROUP	30	The load group. 
TASK	31	The task. 
TASK_DEPENDENCY	32	The task dependency. TASK_WORKTYPE	34	The task worktype. 
POLYGON_WELD	35	The polygon weld. 
LOGICAL_WELD	36	The logical weld. 
CIRCLEREBAR	37	The circle rebar. 
HIERARCHIC_DEFINITION	38	The hierarchic definition. HIERARCHIC_OBJECT	39	The hierarchic object. ANALYSIS_GEOMETRY	40	The analysis geometry. ANALYSIS_PART	41	The analysis part. 
REFERENCE_MODEL_OBJECT 42	The reference model object. CUSTOM_PART	43	The custom part object. 
CIRCLE_REBARGROUP	44	The circle rebar group. CURVED_REBARGROUP	45	The curved rebar group. EDGE_CHAMFER	46	The edge chamfer. 
POUR_OBJECT	47	The pour object. 
POUR_BREAK	48	The pour break. 
CONTROL_LINE	50	The control line. 
LOAD_TEMPERATURE	51	The temperature load. 
BREP	52	The Brep part instance. 
CONTROL_CIRCLE	53	The control circle. CONTROL_POINT	54	The control point. 




Members	1288 


Point Fields 

See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












































See Also	1289 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectEnumerator Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelObjectEnumerator class provides the means to iterate through model object instances in the current model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ModelObjectEnumerator : IEnumerator 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelObjectEnumerator 
Implements IEnumerator 
Examples 
A model object enumerator can be used in a foreach loop: 

  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           ModelObjectEnumerator Objects = Model.GetModelObjectSelector().GetAllObjectsWithType(M 
foreach (Beam obj in Objects)  
           { 
if(obj != null) 
               { 
                   Solid Solid = obj.GetSolid(); 
               } 
           } 
       } 
} 
Another way is to browse items "manually": 
  	Copy 
using Tekla.Structures.Model; 

Examples	1290 


Point Fields 

public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           ModelObjectEnumerator Enum = Model.GetModelObjectSelector().GetAllObjects(); 
while(Enum.MoveNext()) 
           { 
               Beam B = Enum.Current as Beam; 
if(B != null) 
               { 
                   Solid Solid = B.GetSolid(); 
               } 
           } 
       } 
} 
A model object enumerator with AutoFetch set to true in a foreach loop: 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           ModelObjectEnumerator.AutoFetch = true; 
           ModelObjectEnumerator Objects = Model.GetModelObjectSelector().GetAllObjectsWithType(M 
foreach (Beam obj in Objects)  
           { 
if(obj != null) 
               { 
                   Solid Solid = obj.GetSolid(); 
               } 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ModelObjectEnumerator 
See Also 
ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1291 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectEnumerator Members 
ModelObjectEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectEnumerator type exposes the following members. 
Methods 
  	Name	Description 
GetEnumerator Gets the enumerator. 
GetSize	Returns the total amount of items. 
MoveNext	Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
Properties 
  	Name	Description 
Indicates that the objects are fetched from the model when the enumerator is created. Object information is therefore not anymore fetched when 'Current' item is asked from the enumerator. Warning: changing of TransformationPlane after creation of enumerator or during the enumeration requires a separate selection of object for refreshing the values. Property value is used for all enumerators in application 
Current	The current model object instance active in the enumerator. The 
value is null if there are no more objects left. 
Indicates that the instance Select() is called when the 'Current' item is asked from the enumerator. The user can set this to 
'false' if no members are ever asked from the instance. This is 
SelectInstances 


the case when, for example, asking only a report property from the identifier. Warning: normally the user should not change this value. 
See Also 
ModelObjectEnumerator Class Tekla.Structures.Model Namespace 


See Also	1292 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1293 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectEnumerator Methods 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectEnumerator type exposes the following members. 
Methods 
  	Name	Description 
GetEnumerator Gets the enumerator. 
GetSize	Returns the total amount of items. 
MoveNext	Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
See Also 
ModelObjectEnumerator Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1294 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..GetEnumerator Method ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the enumerator. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator GetEnumerator() 
Visual Basic 
Public Function GetEnumerator As IEnumerator 
Return Value 
Type: IEnumerator 
The enumerator. 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1295 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..GetSize Method 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the total amount of items. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int GetSize() 
Visual Basic 
Public Function GetSize As Integer 
Return Value 

Type: Int32 
The total amount of items. 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1296 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..MoveNext Method 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next item in the enumerator. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1297 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..Reset Method 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator to the beginning. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1298 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectEnumerator Properties 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Indicates that the objects are fetched from the model when the enumerator is created. Object information is therefore not anymore fetched when 'Current' item is asked from the enumerator. Warning: changing of TransformationPlane after creation of enumerator or during the enumeration requires a separate selection of object for refreshing the values. Property value is used for all enumerators in application 
Current	The current model object instance active in the enumerator. The 
value is null if there are no more objects left. 
Indicates that the instance Select() is called when the 'Current' item is asked from the enumerator. The user can set this to 
'false' if no members are ever asked from the instance. This is 
SelectInstances 


the case when, for example, asking only a report property from the identifier. Warning: normally the user should not change this value. 
See Also 
ModelObjectEnumerator Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	1299 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..AutoFetch Property 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Indicates that the objects are fetched from the model when the enumerator is created. Object information is therefore not anymore fetched when 'Current' item is asked from the enumerator. Warning: changing of TransformationPlane after creation of 
enumerator or during the enumeration requires a separate selection of object for refreshing the values. Property value is used for all enumerators in application Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool AutoFetch { get; set; } 
Visual Basic 
Public Shared Property AutoFetch As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1300 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..Current Property 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The current model object instance active in the enumerator. The value is null if there are no more objects left. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject Current { get; } 
Visual Basic 
Public ReadOnly Property Current As ModelObject 
Get 
Property Value 

Type: ModelObject 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1301 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..SelectInstances Property 
ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Indicates that the instance Select() is called when the 'Current' item is asked from the enumerator. The user can set this to 'false' if no members are ever asked from the instance. This is the case when, for example, asking only a report property from the identifier. Warning: normally the user should not change this value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SelectInstances { get; set; } 
Visual Basic 
Public Property SelectInstances As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
ModelObjectEnumerator Class ModelObjectEnumerator Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1302 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectEnumerator..::..EnumeratorTypeEnum Enumeration ModelObjectEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The types of enumerator available. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum EnumeratorTypeEnum 
Visual Basic 
Public Enumeration EnumeratorTypeEnum 
Members 
Member name	Value	Description 
ALL_SELECTED	1	Selects all user selected objects 
from the model. 
ALL_OBJECTS	2	Selects all objects from the 
model. MODELOBJECT_CHILDREN	3	Selects children of specified type 
of given ModelObject BY_FILTER_NAME	4	Selects all the ModelObjects for 
a given filter name 
Selects all connected components of given ModelObject 
BY_BOUNDING_BOX	6	Selects all objects intersecting 
with given bounding box ALL_OBJECTS_WITH_TYPE	7	All Objects with type given in 
type in the "subtype". REFERENCE_MODEL_OBJECTS	8	Selects sub objects of given 
ReferenceModel. 
Selects fathers of specified type 
MODELOBJECT_FATHERS	9 


of given ModelObject (Tasks mainly) 


Members	1303 


Point Fields 
Selects all connected dependencies of given ModelObject (Tasks mainly) 
TASKS_OF_SELECTED_OBJECTS	11	Selects all tasks of selected 
objects MODIFIED_OBJECTS_AFTER_STAMP	12	Selects all modified objects 
FILTERED_OBJECTS_WITH_TYPE	13	Filtered objects with type given 
in type in the "subtype". DELETED_OBJECTS_AFTER_STAMP	14	Selects all modified objects 
ALL_PRESELECTED	15	Selects all preselected objects. 
Selects all objects that intersect 
BY_BOUNDING_BOX_AND_VIEW	16 


CONVERTED_FROM_REFERENCE_MODEL 17 

See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


with the given bounding box and that are visible in the given view. 
Selects objects that were converted from a given reference model (if they weren't unlinked) 

























See Also	1304 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelObjectSelector class can be used to make different model object selections from the current model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ModelObjectSelector 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelObjectSelector 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           ModelObjectSelector Selector = Model.GetModelObjectSelector(); 
foreach(ModelObject MO in Selector) 
           { 
               Beam B = MO as Beam; 
if(B != null) 
               { 
                   Solid solid = B.GetSolid(); 
               } 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ModelObjectSelector 

Inheritance Hierarchy	1305 


Point Fields 

See Also 
ModelObjectSelector Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1306 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Members 
ModelObjectSelector Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectSelector type exposes the following members. 
Methods 
  	Name	Description 
Returns an enumerator of all 
GetAllObjects 




GetAllObjectsWithType(array<Type>[]()[][]) 




GetAllObjectsWithType(ModelObject..::..ModelObjectEnum) 



GetEnumerator 


the model objects in the current model. 
Returns an enumerator of all 
the model objects in the current model with the given base type. 
Returns an enumerator of all 
the model objects in the current model with the given type. 
Returns an enumerator of all 
the model objects in the current model. 
Returns an enumerator of the model objects in the current model with the given type and selected by the filter. 
GetObjectsByBoundingBox	Returns an 
enumerator of the model objects in the 

Methods	1307 





















GetObjectsByFilter 






GetObjectsByFilterName 



See Also 
ModelObjectSelector Class Tekla.Structures.Model Namespace 



Point Fields 
current model colliding with the given geometrical bounding box. Note that this method uses approximate bounding boxes and thus is NOT EXACT, and may return objects not necessarily colliding with the given box but only being somewhere near to it. 
Returns an enumerator of the model objects in the current model selected by the 
given selection 
filter definition. 
Returns an enumerator of the model objects in the current model selected by the 
given selection filter. 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1308 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Methods 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectSelector type exposes the following members. 
Methods 
  	Name	Description 
Returns an enumerator of all 
GetAllObjects 




GetAllObjectsWithType(array<Type>[]()[][]) 




GetAllObjectsWithType(ModelObject..::..ModelObjectEnum) 



GetEnumerator 


the model objects in the current model. 
Returns an enumerator of all 
the model objects in the current model with the given base type. 
Returns an enumerator of all 
the model objects in the current model with the given type. 
Returns an enumerator of all 
the model objects in the current model. 
Returns an enumerator of the model objects in the current model with the given type and selected by the filter. 
GetObjectsByBoundingBox	Returns an 
enumerator of the model objects in the 

Methods	1309 





















GetObjectsByFilter 






GetObjectsByFilterName 



See Also 
ModelObjectSelector Class Tekla.Structures.Model Namespace 



Point Fields 
current model colliding with the given geometrical bounding box. Note that this method uses approximate bounding boxes and thus is NOT EXACT, and may return objects not necessarily colliding with the given box but only being somewhere near to it. 
Returns an enumerator of the model objects in the current model selected by the 
given selection 
filter definition. 
Returns an enumerator of the model objects in the current model selected by the 
given selection filter. 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1310 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetAllObjects Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the model objects in the current model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetAllObjects() 
Visual Basic 
Public Function GetAllObjects As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of all the model objects. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1311 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetAllObjectsWithType Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Returns an enumerator of all 
the model objects in 
GetAllObjectsWithType(array<Type>[]()[][]) 




GetAllObjectsWithType(ModelObject..::..ModelObjectEnum) 


See Also 
ModelObjectSelector Class ModelObjectSelector Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


the current model with the given base type. 
Returns an enumerator of all 
the model objects in the current model with the given type. 














See Also	1312 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetAllObjectsWithType Method (array<Type>[]()[][]) ModelObjectSelector Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the model objects in the current model with the given base type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetAllObjectsWithType( 
Type[] TypeFilter 
) 
Visual Basic 
Public Function GetAllObjectsWithType (  
TypeFilter As Type() 
) As ModelObjectEnumerator 
Parameters 

TypeFilter 
Type: array<System..::..Type>[]()[][] 
The types of the objects to return. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of all the model objects with the given types. 
Examples 
In the following example a connection to the Tekla Structures model is established and all parts and boolean objects are fetched for enumeration from the model. 

  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 


Examples	1313 


Point Fields 
           System.Type[] Types = new System.Type[2];            Types.SetValue(typeof(Part),0); 
           Types.SetValue(typeof(Boolean),1); 
           ModelObjectEnumerator myEnum = Model.GetModelObjectSelector().GetAllObjectsWithType(Ty        } 
} 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
GetAllObjectsWithType Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	1314 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetAllObjectsWithType Method (ModelObject..::..ModelObjectEnum) 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the model objects in the current model with the given type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetAllObjectsWithType( 
ModelObject..::..ModelObjectEnum Enum 
) 
Visual Basic 
Public Function GetAllObjectsWithType (  
Enum As ModelObject..::..ModelObjectEnum 
) As ModelObjectEnumerator 
Parameters 

Enum 
Type: Tekla.Structures.Model..::..ModelObject..::..ModelObjectEnum The type of the objects to return. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of all the model objects with the given type. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
GetAllObjectsWithType Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	1315 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetEnumerator Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the model objects in the current model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetEnumerator() 
Visual Basic 
Public Function GetEnumerator As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of all the model objects. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1316 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetFilteredObjectsWithType Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of the model objects in the current model with the given type and selected by the filter. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetFilteredObjectsWithType( 
ModelObject..::..ModelObjectEnum Enum, 
string FilterName 
) 
Visual Basic 
Public Function GetFilteredObjectsWithType (  
Enum As ModelObject..::..ModelObjectEnum, 
FilterName As String 
) As ModelObjectEnumerator 
Parameters 

Enum 
Type: Tekla.Structures.Model..::..ModelObject..::..ModelObjectEnum The type of the objects to return. 

FilterName 
Type: System..::..String 
The name of an existing selection filter to apply. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of the model objects with the given type and selected by the filter. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model Namespace 


See Also	1317 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1318 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetObjectsByBoundingBox Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of the model objects in the current model colliding with the given geometrical bounding box. Note that this method uses approximate bounding boxes and thus is NOT EXACT, and may return objects not necessarily colliding with 
the given box but only being somewhere near to it. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetObjectsByBoundingBox( 
Point MinPoint, 
Point MaxPoint 
) 
Visual Basic 
Public Function GetObjectsByBoundingBox (  
MinPoint As Point, 
MaxPoint As Point 
) As ModelObjectEnumerator 
Parameters 

MinPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The minimum point of the bounding box. 

MaxPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The maximum point of the bounding box. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of the model objects colliding with the given bounding box. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model Namespace 

See Also	1319 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1320 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetObjectsByFilter Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of the model objects in the current model selected by the given selection filter definition. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetObjectsByFilter( 
FilterExpression FilterExpression 
) 
Visual Basic 
Public Function GetObjectsByFilter (  FilterExpression As FilterExpression 
) As ModelObjectEnumerator 
Parameters 

FilterExpression 
Type: Tekla.Structures.Filtering..::..FilterExpression 
The definition of a selection filter to apply. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of the objects selected by the filter. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1321 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetObjectsByFilterName Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of the model objects in the current model selected by the given selection filter. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetObjectsByFilterName( 
string FilterName 
) 
Visual Basic 
Public Function GetObjectsByFilterName (  
FilterName As String 
) As ModelObjectEnumerator 
Parameters 

FilterName 
Type: System..::..String 
The name of an existing selection filter to apply. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of the objects selected by the filter. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1322 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The NumberingSeries class describes how an object is to be numbered. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class NumberingSeries 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class NumberingSeries 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..NumberingSeries 
See Also 
NumberingSeries Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1323 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries Members 
NumberingSeries Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The NumberingSeries type exposes the following members. 
Constructors 
  	Name	Description 
NumberingSeries()()()()	Instantiates a default numbering. NumberingSeries(String, 
Int32) 
Properties 
  	Name	Description 
Prefix	The prefix in numbering. StartNumber The start number in numbering. 
See Also 
NumberingSeries Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1324 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries Constructor 
NumberingSeries Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
NumberingSeries()()()()	Instantiates a default numbering. NumberingSeries(String, 
Int32) 
See Also 
NumberingSeries Class NumberingSeries Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1325 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries Constructor 
NumberingSeries Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a default numbering. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public NumberingSeries() 
Visual Basic 
Public Sub New 
See Also 
NumberingSeries Class 
NumberingSeries Members 
NumberingSeries Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1326 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries Constructor (String, Int32) 
NumberingSeries Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a numbering series with the given arguments. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public NumberingSeries( 
string Prefix, 
int Number 
) 
Visual Basic 
Public Sub New (  
Prefix As String, 
Number As Integer 
) 
Parameters 

Prefix 
Type: System..::..String The prefix to be used. 

Number 
Type: System..::..Int32 
The start number to be used. 
See Also 
NumberingSeries Class NumberingSeries Members NumberingSeries Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1327 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries Properties 
NumberingSeries Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The NumberingSeries type exposes the following members. 
Properties 
  	Name	Description 
Prefix	The prefix in numbering. 
StartNumber The start number in numbering. 
See Also 
NumberingSeries Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1328 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
NumberingSeries..::..Prefix Property 
NumberingSeries Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The prefix in numbering. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Prefix { get; set; } 
Visual Basic 
Public Property Prefix As String 
Get 
Set 
Property Value 
Type: String 
See Also 
NumberingSeries Class NumberingSeries Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1329 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 NumberingSeries..::..StartNumber Property 
NumberingSeries Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The start number in numbering. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int StartNumber { get; set; } 
Visual Basic 
Public Property StartNumber As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
NumberingSeries Class NumberingSeries Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1330 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Object Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Object class is an abstract base class for all the objects Tekla Structures has. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class Object 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class Object 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
See Also 
Object Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1331 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Object Members 
Object Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Object type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
See Also 
Object Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1332 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Object Properties 
Object Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Object type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
See Also 
Object Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1333 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Object..::..Identifier Property 
Object Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The identifier of the object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier Identifier { get; set; } 
Visual Basic 
Public Property Identifier As Identifier 
Get 
Set 
Property Value 
Type: Identifier 
See Also 
Object Class 
Object Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1334 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Offset Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Offset class defines the offset value of start points and end points. The offset is the distance from the current work plane in the three global directions. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Offset 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Offset 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point point = new Point(0, 0, 0); 
           Point point2 = new Point(1000, 0, 0); 
           Beam beam = new Beam(point, point2); 
           beam.StartPointOffset.Dx = 105.0;            beam.StartPointOffset.Dy = 205.0;            beam.StartPointOffset.Dz = 305.0; 
           beam.EndPointOffset.Dx = 405.0; 
           beam.EndPointOffset.Dy = 505.0; 
           beam.EndPointOffset.Dz = 605.0; 
           beam.Profile.ProfileString = "HEA400";            beam.Finish = "PAINT"; 
bool result = false; 
           result = beam.Insert(); 
       } 

Examples	1335 


Point Fields 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Offset 
See Also 
Offset Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	1336 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Offset Members 
Offset Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Offset type exposes the following members. 
Constructors 
  	Name	Description 
Offset	Instantiates an offset with zero distance. 
Properties 
  	Name	Description 
Dx	The current object's Dx offset. This value is defined using the object's 
coordinate system. 
Dy	The current object's Dy offset. This value is defined using the current work 
plane. 
Dz	The current object's Dz offset. This value is defined using the current work 
plane. 
See Also 
Offset Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1337 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Offset Constructor 
Offset Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates an offset with zero distance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Offset() 
Visual Basic 
Public Sub New 
See Also 
Offset Class 
Offset Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1338 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Offset Properties 
Offset Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Offset type exposes the following members. 
Properties 
  	Name	Description 
Dx	The current object's Dx offset. This value is defined using the object's 
coordinate system. 
Dy	The current object's Dy offset. This value is defined using the current work 
plane. 
Dz	The current object's Dz offset. This value is defined using the current work 
plane. 
See Also 
Offset Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1339 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Offset..::..Dx Property 
Offset Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The current object's Dx offset. This value is defined using the object's coordinate system. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Dx { get; set; } 
Visual Basic 
Public Property Dx As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Offset Class 
Offset Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1340 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Offset..::..Dy Property 
Offset Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The current object's Dy offset. This value is defined using the current work plane. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Dy { get; set; } 
Visual Basic 
Public Property Dy As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Offset Class 
Offset Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1341 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Offset..::..Dz Property 
Offset Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The current object's Dz offset. This value is defined using the current work plane. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Dz { get; set; } 
Visual Basic 
Public Property Dz As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Offset Class 
Offset Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1342 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Part class represents a part in the model. A part can be either a beam, a polybeam or a contour plate. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class Part : ModelObject,  
IAssemblable 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class Part 
Inherits ModelObject 
Implements IAssemblable 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Part 
                Tekla.Structures.Model..::..Beam 
                Tekla.Structures.Model..::..Brep 
                Tekla.Structures.Model..::..ContourPlate 
                Tekla.Structures.Model..::..PolyBeam 
See Also 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1343 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Part Members 
Part Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Part type exposes the following members. 
Constructors 
  	Name	Description 
Initializes a new instance of the Part class with default attributes. 

The default values are set as follows: 

 Position = new Position(); 
 Profile = new Profile(); 
 Material = new Material(); 
Part 


 DeformingData = new DeformingData(); 
 Name = ""; 
 Class = ""; 
 Finish = ""; 
 PartNumber = new NumberingSeries("P", 1); 
 AssemblyNumber = new NumberingSeries("A", 1); 
 CastUnitType = CastUnitTypeEnum.PRECAST; 
Methods 
  	Name	Description 
Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
CompareTo(Part)	Compares the instantiated part with 
another one. 
Deletes the instance from the model 
Delete 


Equals 


database. 
(Inherited from ModelObject.) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 

Methods	1344 






GetAllReportProperties 



Point Fields 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the 
model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the part 
belongs to. 
GetBolts	Returns an enumerator of all the 
connected bolts. 
GetBooleans	Returns an enumerator of all the 
connected boolean objects. GetCenterLine	Returns the center line for the given 
part. 
Returns an enumerator of all the 
GetChildren 


GetComponents 


GetCoordinateSystem 



GetDoubleReportProperties 


children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 

Methods	1345 






GetIntegerReportProperties 



Point Fields 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
GetPours	Returns an enumerator of all the 
pours that the part belongs to. GetReferenceLine	Returns the reference line for the 
given part. 
GetReinforcements	Returns an enumerator of all the 
connected reinforcements. 
Retrieves a double property of the 
GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
GetSolid(FormingStates)	Returns the solid of the part. 
GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetSurfaceObjects	Returns an enumerator of all the 
connected surface objects. GetSurfaceTreatments	Returns an enumerator of all the 
connected surface treatments. 

Methods	1346 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
GetWelds	Returns an enumerator of all the 
connected welds. 
Inserts the model object instance 
Insert 


Modify 


Select 


SetDynamicStringProperty 


into the model database. (Inherited from ModelObject.) 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. (Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
AssemblyNumber Gets or sets the assembly number. Defines the numbering in 
the assembly sense. 
CastUnitType	Gets or sets the cast unit type of the part. 

Properties	1347 


Point Fields 
Class	Gets or sets the class of the part. 
DeformingData	Gets or sets the deforming data of the part. 
Finish	Gets or sets the finish of the part. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
Name	Gets or sets the name of the part. 
PartNumber	Gets or sets the part number. Defines the numbering in the 
part sense. 
Position	Gets or sets the part position. Defines the way the part is 
positioned in the model. 
PourPhase	Gets or sets the pour phase of the part. 
Profile	Gets or sets the profile of the part. 
See Also 
Part Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	1348 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part Constructor 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the Part class with default attributes. 

The default values are set as follows: 

 Position = new Position(); 
 Profile = new Profile(); 
 Material = new Material(); 
 DeformingData = new DeformingData(); 
 Name = ""; 
 Class = ""; 
 Finish = ""; 
 PartNumber = new NumberingSeries("P", 1); 
 AssemblyNumber = new NumberingSeries("A", 1); 
 CastUnitType = CastUnitTypeEnum.PRECAST; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Part() 
Visual Basic 
Public Sub New 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1349 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Part Methods 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Part type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
CompareTo(Part)	Compares the instantiated part with 
another one. 
Deletes the instance from the model 
Delete 


Equals 



GetAllReportProperties 


database. 
(Inherited from ModelObject.) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the part 
belongs to. 
GetBolts	Returns an enumerator of all the 
connected bolts. 
GetBooleans	Returns an enumerator of all the 
connected boolean objects. 
GetCenterLine 
Methods	1350 







GetChildren 


GetComponents 


GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
Returns the center line for the given part. 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 


GetPours 


whether the phase is the current one or not). 
(Inherited from ModelObject.) 

Methods	1351 


Point Fields 
Returns an enumerator of all the pours that the part belongs to. 
GetReferenceLine	Returns the reference line for the 
given part. 
GetReinforcements	Returns an enumerator of all the 
connected reinforcements. 
Retrieves a double property of the 
GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
GetSolid(FormingStates)	Returns the solid of the part. 
GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetSurfaceObjects	Returns an enumerator of all the 
connected surface objects. GetSurfaceTreatments	Returns an enumerator of all the 
connected surface treatments. 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
GetWelds	Returns an enumerator of all the 
connected welds. 
Inserts the model object instance 
Insert 

Modify 


into the model database. (Inherited from ModelObject.) 

Methods	1352 








Select 


SetDynamicStringProperty 



Point Fields 
Modifies the model instance in the model database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. (Inherited from ModelObject.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 

See Also 
Part Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
















See Also	1353 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..CompareTo Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
CompareTo(Object) Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
CompareTo(Part)	Compares the instantiated part with another one. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1354 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..CompareTo Method (Part) 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Compares the instantiated part with another one. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CompareTo( 
Part partToCompare 
) 
Visual Basic 
Public Function CompareTo (  
partToCompare As Part 
) As Boolean 
Parameters 

partToCompare 
Type: Tekla.Structures.Model..::..Part 
The part to compare with. 

Return Value 

Type: Boolean 
True if there are no differences, false otherwise. 
Remarks 
If the numbering hasn't been performed the function will also return false. 
See Also 
Part Class 
Part Members 
CompareTo Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1355 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetAssembly Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the assembly that the part belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly GetAssembly() 
Visual Basic 
Public Function GetAssembly As Assembly 
Return Value 

Type: Assembly 
The assembly that the part belongs to. 

Implements 

IAssemblable..::..GetAssembly()()()() 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1356 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetBolts Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected bolts. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetBolts() 
Visual Basic 
Public Function GetBolts As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1357 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetBooleans Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected boolean objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetBooleans() 
Visual Basic 
Public Function GetBooleans As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1358 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetCenterLine Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the center line for the given part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetCenterLine( 
bool withCutsFittings 
) 
Visual Basic 
Public Function GetCenterLine (  
withCutsFittings As Boolean 
) As ArrayList 
Parameters 

withCutsFittings 
Type: System..::..Boolean 
Defines if the center line is created from a solid with cuts and fittings or not. 

Return Value 

Type: ArrayList 
A list of points that define the center line for the given part. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1359 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetComponents Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetComponents() 
Visual Basic 
Public Function GetComponents As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1360 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Part..::..GetDSTVCoordinateSystem Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Get DSTV coordinate system. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CoordinateSystem GetDSTVCoordinateSystem() 
Visual Basic 
Public Function GetDSTVCoordinateSystem As CoordinateSystem 
Return Value 

Type: CoordinateSystem 
The NC-DSTV coordinate system of the part on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1361 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetPartMark Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the part mark. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string GetPartMark() 
Visual Basic 
Public Function GetPartMark As String 
Return Value 

Type: String 
A string with the part mark. 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1362 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetPours Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the pours that the part belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetPours() 
Visual Basic 
Public Function GetPours As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1363 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetReferenceLine Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the reference line for the given part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetReferenceLine( 
bool withCutsFittings 
) 
Visual Basic 
Public Function GetReferenceLine (  
withCutsFittings As Boolean 
) As ArrayList 
Parameters 

withCutsFittings 
Type: System..::..Boolean 
Defines if the reference line is created from a solid with cuts and fittings or not. 

Return Value 

Type: ArrayList 
A list of points that define the reference line for the given part. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1364 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetReinforcements Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected reinforcements. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetReinforcements() 
Visual Basic 
Public Function GetReinforcements As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1365 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetSolid Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetSolid()()()()	Returns the solid of the part. 
GetSolid(FormingStates)	Returns the solid of the part. 
GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1366 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetSolid Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the solid of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid() 
Visual Basic 
Public Function GetSolid As Solid 
Return Value 

Type: Solid 
The solid of the part. 
See Also 
Part Class 
Part Members 
GetSolid Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1367 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetSolid Method (FormingStates) 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the solid of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid( 
FormingStates formingStates 
) 
Visual Basic 
Public Function GetSolid (  
formingStates As FormingStates 
) As Solid 
Parameters 

formingStates 
Type: Tekla.Structures.Forming..::..FormingStates 
Solid forming information. 

Return Value 

Type: Solid 
The solid of the part. 
See Also 
Part Class 
Part Members 
GetSolid Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1368 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetSolid Method (Solid..::..SolidCreationTypeEnum) 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the solid of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid( 
Solid..::..SolidCreationTypeEnum solidCreationType 
) 
Visual Basic 
Public Function GetSolid (  
solidCreationType As Solid..::..SolidCreationTypeEnum 
) As Solid 
Parameters 

solidCreationType 
Type: Tekla.Structures.Model..::..Solid..::..SolidCreationTypeEnum 
The type to be used in solid creation. 

Return Value 

Type: Solid 
The solid of the part. 
See Also 
Part Class 
Part Members 
GetSolid Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1369 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetSurfaceObjects Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected surface objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetSurfaceObjects() 
Visual Basic 
Public Function GetSurfaceObjects As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1370 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetSurfaceTreatments Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the connected surface treatments. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetSurfaceTreatments() 
Visual Basic 
Public Function GetSurfaceTreatments As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1371 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..GetWelds Method 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected welds. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetWelds() 
Visual Basic 
Public Function GetWelds As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Part Class 
Part Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1372 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Part Properties 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Part type exposes the following members. 
Properties 
  	Name	Description 
AssemblyNumber Gets or sets the assembly number. Defines the numbering in 
the assembly sense. 
CastUnitType	Gets or sets the cast unit type of the part. 
Class	Gets or sets the class of the part. 
DeformingData	Gets or sets the deforming data of the part. 
Finish	Gets or sets the finish of the part. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
Name	Gets or sets the name of the part. 
PartNumber	Gets or sets the part number. Defines the numbering in the 
part sense. 
Position	Gets or sets the part position. Defines the way the part is 
positioned in the model. 
PourPhase	Gets or sets the pour phase of the part. 
Profile	Gets or sets the profile of the part. 
See Also 
Part Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1373 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..AssemblyNumber Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the assembly number. Defines the numbering in the assembly sense. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public NumberingSeries AssemblyNumber { get; set; } 
Visual Basic 
Public Property AssemblyNumber As NumberingSeries 
Get 
Set 
Property Value 

Type: NumberingSeries 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1374 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..CastUnitType Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the cast unit type of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Part..::..CastUnitTypeEnum CastUnitType { get; set; } 
Visual Basic 
Public Property CastUnitType As Part..::..CastUnitTypeEnum 
Get 
Set 
Property Value 

Type: Part..::..CastUnitTypeEnum 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1375 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..Class Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the class of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Class { get; set; } 
Visual Basic 
Public Property Class As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1376 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..DeformingData Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the deforming data of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DeformingData DeformingData { get; set; } 
Visual Basic 
Public Property DeformingData As DeformingData 
Get 
Set 
Property Value 

Type: DeformingData 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1377 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..Finish Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the finish of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Finish { get; set; } 
Visual Basic 
Public Property Finish As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1378 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..Material Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the material the part is made of. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Material Material { get; set; } 
Visual Basic 
Public Property Material As Material 
Get 
Set 
Property Value 
Type: Material 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1379 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..Name Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the name of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1380 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..PartNumber Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the part number. Defines the numbering in the part sense. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public NumberingSeries PartNumber { get; set; } 
Visual Basic 
Public Property PartNumber As NumberingSeries 
Get 
Set 
Property Value 

Type: NumberingSeries 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1381 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..Position Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the part position. Defines the way the part is positioned in the model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position Position { get; set; } 
Visual Basic 
Public Property Position As Position 
Get 
Set 
Property Value 
Type: Position 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1382 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..PourPhase Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the pour phase of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int PourPhase { get; set; } 
Visual Basic 
Public Property PourPhase As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1383 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..Profile Property 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the profile of the part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Profile Profile { get; set; } 
Visual Basic 
Public Property Profile As Profile 
Get 
Set 
Property Value 
Type: Profile 
See Also 
Part Class 
Part Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1384 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Part..::..CastUnitTypeEnum Enumeration 
Part Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The cast unit types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum CastUnitTypeEnum 
Visual Basic 
Public Enumeration CastUnitTypeEnum 
Members 
Member name	Value	Description 
PRECAST	0	The precast cast unit type. 
CAST_IN_PLACE 1	The cast in place cast unit type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1385 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Phase class defines a model object phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Phase 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Phase 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Point Point1 = new Point(4000, 4000, 0); 
           Point Point2 = new Point(7000, 4000, 0); 
           Point Point3 = new Point(4000, 6000, 0); 
           Point Point4 = new Point(7000, 6000, 0); 
           Beam Beam1 = new Beam(Point1, Point2); 
           Beam Beam2 = new Beam(Point3, Point4); 
           Beam1.Profile.ProfileString = "HEA400"; 
           Beam1.Finish = "PAINT"; 
           Beam2.Profile.ProfileString = "HEA400"; 
           Beam2.Finish = "PAINT"; 
           Beam1.Insert(); 
           Beam2.Insert(); 
           Phase Beam1Phase = new Phase(); 
           Beam1.GetPhase(out Beam1Phase); 
int PhaseNumber = Beam1Phase.PhaseNumber; 
string PhaseName = Beam1Phase.PhaseName; 
string PhaseComment = Beam1Phase.PhaseComment; 
           Phase Beam2Phase = new Phase(); 
           Beam2.GetPhase(out Beam2Phase); 

Examples	1386 


Point Fields 
if(Beam1Phase.PhaseNumber != Beam2Phase.PhaseNumber) 
           { 
if(Convert.ToBoolean(Beam1Phase.IsCurrentPhase))                    Beam2.SetPhase(Beam1Phase); 
else 
                   Beam1.SetPhase(Beam2Phase); 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Phase 
See Also 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	1387 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Phase Members 
Phase Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Phase type exposes the following members. 
Constructors 
  	Name	Description 
Phase()()()()	Instantiates a new phase with the phase number 
0. 
Phase(Int32)	Instantiates a new phase with the given phase 
number. 
Phase(Int32, String, String, 
Int32) 
Methods 
  	Name	Description 
Delete	Deletes a phase. The current phase cannot be 
deleted. 
GetUserProperty(String, 
Double%)	Retrieves a double property for the phase. 
GetUserProperty(String, Int32%)	Retrieves an integer property for the phase. GetUserProperty(String, 
String%)	Retrieves a string property for the phase. 
Insert	Creates a new phase. 
Modify	Modifies a phase. 
Select	Selects a phase. 
SetUserProperty(String, Double)	Sets a double property for the phase. SetUserProperty(String, Int32)	Sets an integer property for the phase. SetUserProperty(String, String)	Sets a string property for the phase. 




Methods	1388 


Point Fields 

Properties 
  	Name	Description 
IsCurrentPhase The value is 1 if the phase is the current phase, 0 otherwise. PhaseComment The phase comment. 
PhaseName	The phase name. 
PhaseNumber	The phase number. 
See Also 
Phase Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	1389 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Phase Constructor 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Phase()()()()	Instantiates a new phase with the phase number 
0. 
Phase(Int32)	Instantiates a new phase with the given phase 
number. 
Phase(Int32, String, String, 
Int32) 
See Also 
Phase Class 
Phase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	1390 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase Constructor 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a new phase with the phase number 0. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Phase() 
Visual Basic 
Public Sub New 
See Also 
Phase Class 
Phase Members 
Phase Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1391 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase Constructor (Int32) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a new phase with the given phase number. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Phase( 
int PhaseNumber 
) 
Visual Basic 
Public Sub New (  
PhaseNumber As Integer 
) 
Parameters 

PhaseNumber 
Type: System..::..Int32 
The number of the phase. See Also 
Phase Class 
Phase Members 
Phase Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1392 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase Constructor (Int32, String, String, Int32) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a new phase with the given parameters. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Phase( 
int PhaseNumber, 
string PhaseName, 
string PhaseComment, 
int IsCurrentPhase 
) 
Visual Basic 
Public Sub New (  
PhaseNumber As Integer, 
PhaseName As String, 
PhaseComment As String, 
IsCurrentPhase As Integer 
) 
Parameters 

PhaseNumber 
Type: System..::..Int32 
The number of the phase. 

PhaseName 
Type: System..::..String 
The name of the phase. 

PhaseComment 
Type: System..::..String 
The comment of the phase. 

IsCurrentPhase 
Type: System..::..Int32 
The value is 1 if the phase is the current phase, 0 otherwise. 



Syntax	1393 


Point Fields 

See Also 
Phase Class 
Phase Members 
Phase Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	1394 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Phase Methods 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Phase type exposes the following members. 
Methods 
  	Name	Description 
Delete	Deletes a phase. The current phase cannot be 
deleted. 
GetUserProperty(String, 
Double%)	Retrieves a double property for the phase. 
GetUserProperty(String, Int32%)	Retrieves an integer property for the phase. GetUserProperty(String, 
String%)	Retrieves a string property for the phase. 
Insert	Creates a new phase. 
Modify	Modifies a phase. 
Select	Selects a phase. 
SetUserProperty(String, Double)	Sets a double property for the phase. SetUserProperty(String, Int32)	Sets an integer property for the phase. SetUserProperty(String, String)	Sets a string property for the phase. 
See Also 
Phase Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	1395 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..Delete Method 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes a phase. The current phase cannot be deleted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Delete() 
Visual Basic 
Public Function Delete As Boolean 
Return Value 

Type: Boolean 
True on success, false if failed (the attached objects probably caused the failure). 
See Also 
Phase Class 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1396 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..GetUserProperty Method 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetUserProperty(String, Double%)	Retrieves a double property for the phase. GetUserProperty(String, Int32%)	Retrieves an integer property for the phase. GetUserProperty(String, String%)	Retrieves a string property for the phase. 
See Also 
Phase Class 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1397 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..GetUserProperty Method (String, Double%) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a double property for the phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string Name, 
ref double Value 
) 
Visual Basic 
Public Function GetUserProperty (  
Name As String, 
ByRef Value As Double 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be retrieved, in capital letters. 

Value 
Type: System..::..Double% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
Phase Class 
Phase Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1398 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..GetUserProperty Method (String, Int32%) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves an integer property for the phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string Name, 
ref int Value 
) 
Visual Basic 
Public Function GetUserProperty (  
Name As String, 
ByRef Value As Integer 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be retrieved, in capital letters. 

Value 
Type: System..::..Int32% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
Phase Class 
Phase Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1399 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Phase..::..GetUserProperty Method (String, String%) Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a string property for the phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string Name, 
ref string Value 
) 
Visual Basic 
Public Function GetUserProperty (  
Name As String, 
ByRef Value As String 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be retrieved, in capital letters. 

Value 
Type: System..::..String% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
Phase Class 
Phase Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1400 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..Insert Method 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Insert() 
Visual Basic 
Public Function Insert As Boolean 
Return Value 

Type: Boolean 
True on success, false if failed (the reason for the failure is probably that the phase number already exists). 
See Also 
Phase Class 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1401 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..Modify Method 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies a phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Modify() 
Visual Basic 
Public Function Modify As Boolean 
Return Value 

Type: Boolean 
True on success, false if failed (PhaseNumber should be higher than 0). 
See Also 
Phase Class 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1402 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..Select Method 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects a phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Select() 
Visual Basic 
Public Function Select As Boolean 
Return Value 

Type: Boolean 
True on success, false if failed (PhaseNumber should be higher than 0). 
See Also 
Phase Class 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1403 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..SetUserProperty Method 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
SetUserProperty(String, Double)	Sets a double property for the phase. SetUserProperty(String, Int32)	Sets an integer property for the phase. SetUserProperty(String, String)	Sets a string property for the phase. 
See Also 
Phase Class 
Phase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1404 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..SetUserProperty Method (String, Double) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a double property for the phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string Name, 
double Value 
) 
Visual Basic 
Public Function SetUserProperty (  
Name As String, 
Value As Double 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be set, in capital letters. 

Value 
Type: System..::..Double 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
Phase Class 
Phase Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1405 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..SetUserProperty Method (String, Int32) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets an integer property for the phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string Name, 
int Value 
) 
Visual Basic 
Public Function SetUserProperty (  
Name As String, 
Value As Integer 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be set, in capital letters. 

Value 
Type: System..::..Int32 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
Phase Class 
Phase Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1406 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..SetUserProperty Method (String, String) 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a string property for the phase. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string Name, 
string Value 
) 
Visual Basic 
Public Function SetUserProperty (  
Name As String, 
Value As String 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be set, in capital letters. 

Value 
Type: System..::..String 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
Phase Class 
Phase Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1407 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Phase Properties 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Phase type exposes the following members. 
Properties 
  	Name	Description 
IsCurrentPhase The value is 1 if the phase is the current phase, 0 otherwise. PhaseComment The phase comment. 
PhaseName	The phase name. 
PhaseNumber	The phase number. 
See Also 
Phase Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1408 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..IsCurrentPhase Property 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The value is 1 if the phase is the current phase, 0 otherwise. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int IsCurrentPhase { get; set; } 
Visual Basic 
Public Property IsCurrentPhase As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Phase Class 
Phase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1409 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..PhaseComment Property 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The phase comment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PhaseComment { get; set; } 
Visual Basic 
Public Property PhaseComment As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Phase Class 
Phase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1410 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..PhaseName Property 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The phase name. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PhaseName { get; set; } 
Visual Basic 
Public Property PhaseName As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Phase Class 
Phase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1411 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Phase..::..PhaseNumber Property 
Phase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The phase number. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int PhaseNumber { get; set; } 
Visual Basic 
Public Property PhaseNumber As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Phase Class 
Phase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1412 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PhaseCollection class handles the collection of the model phases. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class PhaseCollection : ICollection,  
IEnumerable 
Visual Basic 
<SerializableAttribute> 
Public Class PhaseCollection 
Implements ICollection, IEnumerable 
Examples 
The following example gets the phases of the model and shows the values of the PhaseName and PhaseNumber properties in a message dialog: 

  	Copy 
using Tekla.Structures.Model; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Model CurrentModel = new Model(); 
           PhaseCollection PhaseCollection = CurrentModel.GetPhases(); 
if (CurrentModel.GetConnectionStatus()) 
           { 
foreach(Phase p in PhaseCollection) 
               { 
                    MessageBox.Show("Name = " + p.PhaseName + ", number = " + p.PhaseNumber);                } 
           } 
       } 
} 



Examples	1413 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..PhaseCollection 
See Also 
PhaseCollection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	1414 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection Members 
PhaseCollection Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PhaseCollection type exposes the following members. 
Methods 
  	Name	Description 
CopyTo	Copies the elements of the ICollection to an Array, starting at a 
particular Array index. 
GetEnumerator Returns an enumerator that iterates through a collection. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
PhaseCollection Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1415 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection Methods 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PhaseCollection type exposes the following members. 
Methods 
  	Name	Description 
CopyTo	Copies the elements of the ICollection to an Array, starting at a 
particular Array index. 
GetEnumerator Returns an enumerator that iterates through a collection. 
See Also 
PhaseCollection Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1416 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection..::..CopyTo Method 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Copies the elements of the ICollection to an Array, starting at a particular Array index. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void CopyTo( 
Array Array, 
int Index 
) 
Visual Basic 
Public Sub CopyTo (  
Array As Array, 
Index As Integer 
) 
Parameters 

Array 
Type: System..::..Array 
The one-dimensional Array that is the destination of the elements copied from the ICollection. The Array must have zero-based indexing. 

Index 
Type: System..::..Int32 
The zero-based index in the array at which copying begins. 

Implements 

ICollection..::..CopyTo(Array, Int32) 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	Thrown when the array is null. System..::..ArgumentOutOfRangeException	Thrown when the index is less than 
zero. 

Exceptions	1417 







System..::..ArgumentException 





System..::..InvalidCastException 


See Also 
PhaseCollection Class PhaseCollection Members Tekla.Structures.Model Namespace 



Point Fields 
Thrown when the array is multidimensional, or the index is equal to or greater than the length of the array, or the number of elements in 
the source ICollection is greater than the available space from the index to the end of the destination array. 
Thrown when the type of the source ICollection cannot be cast automatically to the type of the destination array. 

Copyright  © Tekla 2013. All rights reserved. 






























See Also	1418 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PhaseCollection..::..GetEnumerator Method 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator that iterates through a collection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator GetEnumerator() 
Visual Basic 
Public Function GetEnumerator As IEnumerator 
Return Value 

Type: IEnumerator 
An IEnumerator object that can be used to iterate through the collection. 

Implements 

IEnumerable..::..GetEnumerator()()()() 
See Also 
PhaseCollection Class 
PhaseCollection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1419 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection Properties 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PhaseCollection type exposes the following members. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
PhaseCollection Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	1420 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection..::..Count Property 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the number of elements contained in the ICollection. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Count { get; } 
Visual Basic 
Public ReadOnly Property Count As Integer 
Get 
Property Value 

Type: Int32 

Implements 

ICollection..::..Count 
See Also 
PhaseCollection Class PhaseCollection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1421 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PhaseCollection..::..IsSynchronized Property 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a value indicating whether access to the ICollection is synchronized (thread safe). Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsSynchronized { get; } 
Visual Basic 
Public ReadOnly Property IsSynchronized As Boolean 
Get 
Property Value 

Type: Boolean 

Implements 

ICollection..::..IsSynchronized 
See Also 
PhaseCollection Class PhaseCollection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1422 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PhaseCollection..::..SyncRoot Property 
PhaseCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets an object that can be used to synchronize access to the ICollection. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object SyncRoot { get; } 
Visual Basic 
Public ReadOnly Property SyncRoot As Object 
Get 
Property Value 

Type: Object 

Implements 

ICollection..::..SyncRoot 
See Also 
PhaseCollection Class PhaseCollection Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1423 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Plane Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Plane class defines a plane in space using an origin, an X-axis and a Y-axis. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Plane 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Plane 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Plane Plane = new Plane(); 
           Plane.Origin = new Point(500, 0, 0); 
           Plane.AxisX = new Vector(500, 1000, 0); 
           Plane.AxisY = new Vector(500, 0, -1000);        } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Plane 
See Also 
Plane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1424 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Plane Members 
Plane Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Plane type exposes the following members. 
Constructors 
  	Name	Description 
Plane	Initializes a new plane instance. Properties 
  	Name	Description 
AxisX	The X-axis of the plane. AxisY	The Y-axis of the plane. Origin  The origin of the plane. 
See Also 
Plane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1425 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Plane Constructor 
Plane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new plane instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Plane() 
Visual Basic 
Public Sub New 
See Also 
Plane Class 
Plane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1426 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Plane Properties 
Plane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Plane type exposes the following members. 
Properties 
  	Name	Description 
AxisX	The X-axis of the plane. AxisY	The Y-axis of the plane. Origin  The origin of the plane. 
See Also 
Plane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1427 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Plane..::..AxisX Property 
Plane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The X-axis of the plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector AxisX { get; set; } 
Visual Basic 
Public Property AxisX As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Plane Class 
Plane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1428 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Plane..::..AxisY Property 
Plane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Y-axis of the plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector AxisY { get; set; } 
Visual Basic 
Public Property AxisY As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Plane Class 
Plane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1429 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Plane..::..Origin Property 
Plane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The origin of the plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Origin { get; set; } 
Visual Basic 
Public Property Origin As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
Plane Class 
Plane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1430 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PolyBeam class represents a continuous beam with a contour as input. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class PolyBeam : Part 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class PolyBeam 
Inherits Part 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPoint point = new ContourPoint(new Point(0,2000,0), null); 
           ContourPoint point2 = new ContourPoint(new Point(2000,2000,0), null);            ContourPoint point3 = new ContourPoint(new Point(0,4000,0), null); 
           PolyBeam PolyBeam = new PolyBeam(); 
           PolyBeam.AddContourPoint(point); 
           PolyBeam.AddContourPoint(point2);            PolyBeam.AddContourPoint(point3); 
           PolyBeam.Profile.ProfileString = "HEA400";            PolyBeam.Finish = "PAINT"; 
bool Result = false; 
           Result = PolyBeam.Insert(); 
       } 
} 



Examples	1431 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Part 
                Tekla.Structures.Model..::..PolyBeam 
See Also 
PolyBeam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	1432 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Members 
PolyBeam Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyBeam type exposes the following members. 
Constructors 
  	Name	Description 
PolyBeam()()()()	Initializes a new instance of the 
PolyBeam class. 
Initializes a new instance of the 
PolyBeam(PolyBeam..::..PolyBeamTypeEnum) 


PolyBeam class by using the defined type. 
Methods 
  	Name	Description 
AddContourPoint	Adds a contour point to the 
polybeam. 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the polybeam instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
GetAllReportProperties	Retrieves all properties for the 
model object in one hashtable. Type for the returned value must be 

Methods	1433 








GetAllUserProperties 



GetAssembly 


GetBolts 


GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Returns the assembly that the part belongs to. 
(Inherited from Part.) 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 

Methods	1434 





GetHierarchicObjects 



GetIntegerReportProperties 



Point Fields 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
GetPolybeamCoordinateSystems	Returns a list of coordinate systems 
for the polybeam segments. 
Returns an enumerator of all the 
GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
GetStringReportProperties 
Methods	1435 










GetStringUserProperties 


GetSurfaceObjects 


GetSurfaceTreatments 



Point Fields 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
Returns an enumerator of all the connected surface treatments. (Inherited from Part.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the polybeam into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing polybeam in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a polybeam from the model database. The identifier of the polybeam must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
SetLabel	Sets a label for an object when a 
new instance is created. The label is 


Methods	1436 


Point Fields 
used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
Contour	Gets or sets the contour for the polybeam. 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Profile	Gets or sets the profile of the part. 

Properties	1437 


Point Fields 
(Inherited from Part.) 
Type	Gets the read only type of the polybeam. The default type for a 
new polybeam instance is beam. 
See Also 
PolyBeam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	1438 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Constructor 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PolyBeam()()()()	Initializes a new instance of the 
PolyBeam class. 
Initializes a new instance of the 
PolyBeam(PolyBeam..::..PolyBeamTypeEnum) 

See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


PolyBeam class by using the defined type. 



















See Also	1439 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Constructor 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the PolyBeam class. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolyBeam() 
Visual Basic 
Public Sub New 
See Also 
PolyBeam Class 
PolyBeam Members 
PolyBeam Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1440 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Constructor (PolyBeam..::..PolyBeamTypeEnum) 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the PolyBeam class by using the defined type. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolyBeam( 
PolyBeam..::..PolyBeamTypeEnum polyBeamType 
) 
Visual Basic 
Public Sub New (  
polyBeamType As PolyBeam..::..PolyBeamTypeEnum 
) 
Parameters 

polyBeamType 
Type: Tekla.Structures.Model..::..PolyBeam..::..PolyBeamTypeEnum 
The type of the polybeam. 
See Also 
PolyBeam Class 
PolyBeam Members 
PolyBeam Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1441 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Methods 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyBeam type exposes the following members. 
Methods 
  	Name	Description 
AddContourPoint	Adds a contour point to the 
polybeam. 
Compares Identifiers of model 
CompareTo(Object) 


CompareTo(Part) 



Delete 



Equals 



GetAllReportProperties 


objects. 
(Inherited from ModelObject.) 
Compares the instantiated part with another one. 
(Inherited from Part.) 
Deletes the polybeam instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. (Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the part 
belongs to. 

Methods	1442 






GetBolts 


GetBooleans 


GetCenterLine 


GetChildren 



GetComponents 



GetCoordinateSystem 



GetDoubleReportProperties 



Point Fields 
(Inherited from Part.) 
Returns an enumerator of all the connected bolts. 
(Inherited from Part.) 
Returns an enumerator of all the connected boolean objects. (Inherited from Part.) 
Returns the center line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns an enumerator of all the connected components, connections, seams and details inherited from the base component. 
(Inherited from Part.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDSTVCoordinateSystem	Get DSTV coordinate system. 
(Inherited from Part.) 
Gets a dynamic string property from 
GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 


GetIntegerUserProperties 


the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 

Methods	1443 


Point Fields 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetPartMark	Returns the part mark. 
(Inherited from Part.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
GetPolybeamCoordinateSystems	Returns a list of coordinate systems 
for the polybeam segments. 
Returns an enumerator of all the 
GetPours 


GetReferenceLine 


GetReinforcements 


GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


pours that the part belongs to. (Inherited from Part.) 
Returns the reference line for the given part. 
(Inherited from Part.) 
Returns an enumerator of all the connected reinforcements. (Inherited from Part.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetSolid()()()()	Returns the solid of the part. 
(Inherited from Part.) GetSolid(FormingStates)	Returns the solid of the part. 
(Inherited from Part.) GetSolid(Solid..::..SolidCreationTypeEnum)	Returns the solid of the part. 
(Inherited from Part.) 
Retrieves multiple string report properties for the model object. It is 
GetStringReportProperties 



GetStringUserProperties 

GetSurfaceObjects 


faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	1444 








GetSurfaceTreatments 



Point Fields 
Returns an enumerator of all the connected surface objects. (Inherited from Part.) 
Returns an enumerator of all the connected surface treatments. (Inherited from Part.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


GetWelds 



Insert 




Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected welds. 
(Inherited from Part.) 
Inserts the polybeam into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing polybeam in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a polybeam from the model database. The identifier of the polybeam must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a 
new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


object. 
(Inherited from ModelObject.) 


Methods	1445 





SetUserProperty(String, Int32) 


SetUserProperty(String, String) 

See Also 
PolyBeam Class Tekla.Structures.Model Namespace 



Point Fields 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	1446 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..AddContourPoint Method 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a contour point to the polybeam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddContourPoint( 
ContourPoint contourPoint 
) 
Visual Basic 
Public Function AddContourPoint (  
contourPoint As ContourPoint 
) As Boolean 
Parameters 

contourPoint 
Type: Tekla.Structures.Model..::..ContourPoint 
The contour point to be added to the polybeam. 

Return Value 

Type: Boolean 
True on success, false if there is no more space for another contour point. 
See Also 
PolyBeam Class 
PolyBeam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1447 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..Delete Method 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the polybeam instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1448 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PolyBeam..::..GetPolybeamCoordinateSystems Method 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a list of coordinate systems for the polybeam segments. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetPolybeamCoordinateSystems() 
Visual Basic 
Public Function GetPolybeamCoordinateSystems As ArrayList 
Return Value 

Type: ArrayList 
A list of coordinate systems for the polybeam segments. 
See Also 
PolyBeam Class 
PolyBeam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1449 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..Insert Method 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the polybeam into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1450 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..Modify Method 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing polybeam in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1451 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..Select Method 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a polybeam from the model database. The identifier of the polybeam must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1452 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam Properties 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolyBeam type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the assembly number. Defines the numbering in the assembly sense. 
(Inherited from Part.) 
CastUnitType	Gets or sets the cast unit type of the part. 
(Inherited from Part.) 
Class	Gets or sets the class of the part. 
(Inherited from Part.) 
Contour	Gets or sets the contour for the polybeam. 
DeformingData	Gets or sets the deforming data of the part. 
(Inherited from Part.) 
Finish	Gets or sets the finish of the part. 
(Inherited from Part.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Gets or sets the material the part is made of. 
(Inherited from Part.) 
Name	Gets or sets the name of the part. 
(Inherited from Part.) 
Gets or sets the part number. Defines the numbering in the 
PartNumber 


part sense. 
(Inherited from Part.) 
Gets or sets the part position. Defines the way the part is positioned in the model. 
(Inherited from Part.) 
PourPhase	Gets or sets the pour phase of the part. 
(Inherited from Part.) 
Profile	Gets or sets the profile of the part. 
Properties	1453 


Point Fields 
(Inherited from Part.) 
Type	Gets the read only type of the polybeam. The default type for a 
new polybeam instance is beam. 
See Also 
PolyBeam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	1454 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..Contour Property 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the contour for the polybeam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Contour Contour { get; set; } 
Visual Basic 
Public Property Contour As Contour 
Get 
Set 
Property Value 
Type: Contour 
See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1455 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolyBeam..::..Type Property 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the read only type of the polybeam. The default type for a new polybeam instance is beam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolyBeam..::..PolyBeamTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As PolyBeam..::..PolyBeamTypeEnum 
Get 
Property Value 

Type: PolyBeam..::..PolyBeamTypeEnum 
See Also 
PolyBeam Class 
PolyBeam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1456 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PolyBeam..::..PolyBeamTypeEnum Enumeration 
PolyBeam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The polybeam types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum PolyBeamTypeEnum 
Visual Basic 
Public Enumeration PolyBeamTypeEnum 
Members 
Member name	Value		Description 
BEAM	0	The polybeam. 
PANEL	1	The panel. 
STRIP_FOOTING 2	The strip footing. 
COLUMN	3	The column. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1457 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Polygon Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Polygon class represents a polygon object that has its corners at the given points. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Polygon 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Polygon 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Polygon 
See Also 
Polygon Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1458 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Polygon Members 
Polygon Class  Constructors  Fields  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Polygon type exposes the following members. 
Constructors 
  	Name	Description 
Polygon Initializes a new polygon instance with empty attributes. Fields 
  	Name	Description 
MAX_POLYGON_POINTS The maximum number of polygon points that is 
typically valid in Tekla Structures. MIN_POLYGON_POINTS	The minimum number of polygon points that is 
typically valid in Tekla Structures. 
Properties 
  	Name	Description 
Points	The corners of the polygon. 
See Also 
Polygon Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1459 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Polygon Constructor 
Polygon Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new polygon instance with empty attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon() 
Visual Basic 
Public Sub New 
See Also 
Polygon Class 
Polygon Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1460 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Polygon Fields 
Polygon Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Polygon type exposes the following members. 
Fields 
  	Name	Description 
MAX_POLYGON_POINTS The maximum number of polygon points that is 
typically valid in Tekla Structures. MIN_POLYGON_POINTS	The minimum number of polygon points that is 
typically valid in Tekla Structures. 
See Also 
Polygon Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1461 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Polygon..::..MAX_POLYGON_POINTS Field 
Polygon Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The maximum number of polygon points that is typically valid in Tekla Structures. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const int MAX_POLYGON_POINTS 
Visual Basic 
Public Const MAX_POLYGON_POINTS As Integer 
Field Value 
Type: Int32 
See Also 
Polygon Class 
Polygon Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1462 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Polygon..::..MIN_POLYGON_POINTS Field 
Polygon Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The minimum number of polygon points that is typically valid in Tekla Structures. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public const int MIN_POLYGON_POINTS 
Visual Basic 
Public Const MIN_POLYGON_POINTS As Integer 
Field Value 
Type: Int32 
See Also 
Polygon Class 
Polygon Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1463 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Polygon Properties 
Polygon Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Polygon type exposes the following members. 
Properties 
  	Name	Description 
Points	The corners of the polygon. 
See Also 
Polygon Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1464 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Polygon..::..Points Property 
Polygon Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The corners of the polygon. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Points { get; set; } 
Visual Basic 
Public Property Points As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
Polygon Class 
Polygon Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1465 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PolygonWeld class represents a polygon weld in the model. A polygon weld has a main part and a secondary part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class PolygonWeld : BaseWeld 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class PolygonWeld 
Inherits BaseWeld 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point Beam1P1 = new Point(6000, 12000, 0);            Point Beam1P2 = new Point(9000, 12000, 0); 
           Point Beam2P1 = new Point(9000, 12000, 0);            Point Beam2P2 = new Point(9000, 18000, 0); 
           Beam Beam1 = new Beam(Beam1P1, Beam1P2);            Beam Beam2 = new Beam(Beam2P1, Beam2P2); 
           Beam1.Profile.ProfileString = "HEA400";            Beam1.Finish = "PAINT"; 
           Beam1.Name = "Beam 1"; 
           Beam2.Name = "Beam 2"; 
           Beam1.Insert(); 
           Beam2.Insert(); 
           PolygonWeld PolygonWeld = new PolygonWeld(); 

Examples	1466 


Point Fields 
           PolygonWeld.MainObject = Beam1; 
           PolygonWeld.SecondaryObject = Beam2; 
           Point WeldP1 = new Point(9000, 11850, 0); 
           Point WeldP2 = new Point(9000, 12000, 0); 
           Point WeldP3 = new Point(9150, 12000, 0); 
           PolygonWeld.Polygon.Points.Add(WeldP1); 
           PolygonWeld.Polygon.Points.Add(WeldP2); 
           PolygonWeld.Polygon.Points.Add(WeldP3); 
           PolygonWeld.TypeAbove = PolygonWeld.WeldTypeEnum.WELD_TYPE_SQUARE_GROOVE_SQUARE_BUTT; 
           PolygonWeld.Insert(); 
           PolygonWeld.TypeBelow = PolygonWeld.WeldTypeEnum.WELD_TYPE_SLOT; 
           PolygonWeld.Modify(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseWeld 
                Tekla.Structures.Model..::..PolygonWeld 
See Also 
PolygonWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	1467 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld Members 
PolygonWeld Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolygonWeld type exposes the following members. 
Constructors 
  	Name	Description 
PolygonWeld Creates a new polygon weld instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the polygon weld instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1468 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetLogicalWeld 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Gets the logical weld where the weld belongs. Returns false if the weld does not belong to any logical weld. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
(Inherited from BaseWeld.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 


Methods	1469 




GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

GetWeldGeometries 


Insert 



Modify 



Point Fields 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
(Inherited from BaseWeld.) 
Inserts the polygon weld into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing polygon weld in the model database to match the current one. The 
modification cannot be done if the polygon weld is a part of a logical weld. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a polygon weld from the model database. 
The polygon weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
(Inherited from BaseWeld.) AngleBelow	Gets or sets the angle below. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is an around weld (true) or an edge weld (false). 
(Inherited from BaseWeld.) 
ConnectAssemblies	Gets or sets a value indicating whether to connect a part 

Properties	1470 


Point Fields 
or an assembly as a secondary part (false) or as a sub-assembly (true). 
(Inherited from BaseWeld.) 
ContourAbove	Gets or sets the contour above. 
(Inherited from BaseWeld.) 
ContourBelow	Gets or sets the contour below. 
(Inherited from BaseWeld.) 
EffectiveThroatAbove	Gets or sets the effective throat above. 
(Inherited from BaseWeld.) 
EffectiveThroatBelow	Gets or sets the effective throat below. 
(Inherited from BaseWeld.) ElectrodeClassification	Gets or sets the weld electrode classification. 
(Inherited from BaseWeld.) 
ElectrodeCoefficient	Gets or sets the electrode strength coefficient. 
(Inherited from BaseWeld.) 
ElectrodeStrength	Gets or sets the electrode strength. 
(Inherited from BaseWeld.) 
FinishAbove	Gets or sets the finish above. 
(Inherited from BaseWeld.) 
FinishBelow	Gets or sets the finish below. 
(Inherited from BaseWeld.) Identifier	The identifier of the object. 
(Inherited from Object.) 
IncrementAmountAbove Gets or sets the increment amount above. 
(Inherited from BaseWeld.) IncrementAmountBelow Gets or sets the increment amount below. 
(Inherited from BaseWeld.) 
IntermittentType	Gets or sets the weld intermittent type. 
(Inherited from BaseWeld.) 
LengthAbove	Gets or sets the length above. 
(Inherited from BaseWeld.) 
LengthBelow	Gets or sets the length below. 
(Inherited from BaseWeld.) 
MainObject	Gets or sets the main part of the weld. 
(Inherited from BaseWeld.) 
NDTInspection	Gets or sets the NDT inspection level. 
(Inherited from BaseWeld.) 
PitchAbove	Gets or sets the pitch above. 
(Inherited from BaseWeld.) 
PitchBelow	Gets or sets the pitch below. 
(Inherited from BaseWeld.) 
Placement	Gets or sets the weld placement. 
(Inherited from BaseWeld.) 
Polygon	The polygon for the polygon weld. 
Properties	1471 


Point Fields 
PrefixAboveLine	Gets or sets the size prefix above the line. 
(Inherited from BaseWeld.) 
PrefixBelowLine	Gets or sets the size prefix below the line. 
(Inherited from BaseWeld.) 
Preparation	Gets or sets the weld preparation. 
(Inherited from BaseWeld.) 
ProcessType	Gets or sets the process type. 
(Inherited from BaseWeld.) 
ReferenceText	Gets or sets the reference text. 
(Inherited from BaseWeld.) 
RootFaceAbove	Gets or sets the root face above. 
(Inherited from BaseWeld.) 
RootFaceBelow	Gets or sets the root face below. 
(Inherited from BaseWeld.) RootOpeningAbove	Gets or sets the root opening above. 
(Inherited from BaseWeld.) RootOpeningBelow	Gets or sets the root opening below. 
(Inherited from BaseWeld.) SecondaryObject	Gets or sets the secondary part of the weld. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
(Inherited from BaseWeld.) 
SizeAbove	Gets or sets the size above. 
(Inherited from BaseWeld.) SizeBelow	Gets or sets the size below. 
(Inherited from BaseWeld.) 
Obsolete. 
Standard 


Gets or sets the weld detail/standard. (Inherited from BaseWeld.) 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
(Inherited from BaseWeld.) 
TypeAbove	Gets or sets the type above. 
(Inherited from BaseWeld.) 
TypeBelow	Gets or sets the type below. 
(Inherited from BaseWeld.) 
WeldNumber	Gets the weld number. 
(Inherited from BaseWeld.) 
WeldNumberPrefix	Gets or sets the weld number prefix. 
(Inherited from BaseWeld.) 


Properties	1472 


Point Fields 

See Also 
PolygonWeld Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1473 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld Constructor 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new polygon weld instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolygonWeld() 
Visual Basic 
Public Sub New 
See Also 
PolygonWeld Class 
PolygonWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1474 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld Methods 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolygonWeld type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the polygon weld instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1475 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetLogicalWeld 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Gets the logical weld where the weld belongs. Returns false if the weld does not belong to any logical weld. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
(Inherited from BaseWeld.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 


Methods	1476 





GetWeldGeometries 


Insert 



Modify 



Point Fields 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
(Inherited from BaseWeld.) 
Inserts the polygon weld into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing polygon weld in the model database to match the current one. The 
modification cannot be done if the polygon weld is a part of a logical weld. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a polygon weld from the model database. 
The polygon weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
PolygonWeld Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1477 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld..::..Delete Method 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the polygon weld instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolygonWeld Class 
PolygonWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1478 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PolygonWeld..::..GetLogicalWeld Method 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the logical weld where the weld belongs. Returns false if the weld does not belong to any logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetLogicalWeld( ref LogicalWeld LogicalWeld 
) 
Visual Basic 
Public Function GetLogicalWeld (  ByRef LogicalWeld As LogicalWeld 
) As Boolean 
Parameters 

LogicalWeld 
Type: Tekla.Structures.Model..::..LogicalWeld% 
An initialized logical weld object. 

Return Value 

Type: Boolean 
True if the logical weld was selected correctly; false otherwise. 
See Also 
PolygonWeld Class 
PolygonWeld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1479 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld..::..Insert Method 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the polygon weld into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolygonWeld Class 
PolygonWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1480 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld..::..Modify Method 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing polygon weld in the model database to match the current one. The modification cannot be done if the polygon weld is a part of a logical weld. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolygonWeld Class 
PolygonWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1481 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld..::..Select Method 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a polygon weld from the model database. The polygon weld identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolygonWeld Class 
PolygonWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1482 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld Properties 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolygonWeld type exposes the following members. 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
(Inherited from BaseWeld.) AngleBelow	Gets or sets the angle below. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is an 
AroundWeld 


around weld (true) or an edge weld (false). 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
(Inherited from BaseWeld.) 
ContourAbove	Gets or sets the contour above. 
(Inherited from BaseWeld.) 
ContourBelow	Gets or sets the contour below. 
(Inherited from BaseWeld.) 
EffectiveThroatAbove	Gets or sets the effective throat above. 
(Inherited from BaseWeld.) 
EffectiveThroatBelow	Gets or sets the effective throat below. 
(Inherited from BaseWeld.) 
ElectrodeClassification	Gets or sets the weld electrode classification. 
(Inherited from BaseWeld.) 
ElectrodeCoefficient	Gets or sets the electrode strength coefficient. 
(Inherited from BaseWeld.) 
ElectrodeStrength	Gets or sets the electrode strength. 
(Inherited from BaseWeld.) 
FinishAbove	Gets or sets the finish above. 
(Inherited from BaseWeld.) 
Properties	1483 


Point Fields 
FinishBelow	Gets or sets the finish below. 
(Inherited from BaseWeld.) Identifier	The identifier of the object. 
(Inherited from Object.) IncrementAmountAbove Gets or sets the increment amount above. 
(Inherited from BaseWeld.) IncrementAmountBelow Gets or sets the increment amount below. 
(Inherited from BaseWeld.) IntermittentType	Gets or sets the weld intermittent type. 
(Inherited from BaseWeld.) 
LengthAbove	Gets or sets the length above. 
(Inherited from BaseWeld.) 
LengthBelow	Gets or sets the length below. 
(Inherited from BaseWeld.) 
MainObject	Gets or sets the main part of the weld. 
(Inherited from BaseWeld.) 
NDTInspection	Gets or sets the NDT inspection level. 
(Inherited from BaseWeld.) 
PitchAbove	Gets or sets the pitch above. 
(Inherited from BaseWeld.) 
PitchBelow	Gets or sets the pitch below. 
(Inherited from BaseWeld.) 
Placement	Gets or sets the weld placement. 
(Inherited from BaseWeld.) 
Polygon	The polygon for the polygon weld. 
PrefixAboveLine	Gets or sets the size prefix above the line. 
(Inherited from BaseWeld.) PrefixBelowLine	Gets or sets the size prefix below the line. 
(Inherited from BaseWeld.) 
Preparation	Gets or sets the weld preparation. 
(Inherited from BaseWeld.) 
ProcessType	Gets or sets the process type. 
(Inherited from BaseWeld.) 
ReferenceText	Gets or sets the reference text. 
(Inherited from BaseWeld.) RootFaceAbove	Gets or sets the root face above. 
(Inherited from BaseWeld.) RootFaceBelow	Gets or sets the root face below. 
(Inherited from BaseWeld.) RootOpeningAbove	Gets or sets the root opening above. 
(Inherited from BaseWeld.) RootOpeningBelow	Gets or sets the root opening below. 
(Inherited from BaseWeld.) 
Properties	1484 


Point Fields 
SecondaryObject	Gets or sets the secondary part of the weld. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
(Inherited from BaseWeld.) 
SizeAbove	Gets or sets the size above. 
(Inherited from BaseWeld.) SizeBelow	Gets or sets the size below. 
(Inherited from BaseWeld.) 
Obsolete. 
Standard 


Gets or sets the weld detail/standard. (Inherited from BaseWeld.) 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
(Inherited from BaseWeld.) 
TypeAbove	Gets or sets the type above. 
(Inherited from BaseWeld.) 
TypeBelow	Gets or sets the type below. 
(Inherited from BaseWeld.) 
WeldNumber	Gets the weld number. 
(Inherited from BaseWeld.) 
WeldNumberPrefix	Gets or sets the weld number prefix. 
(Inherited from BaseWeld.) 
See Also 
PolygonWeld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1485 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolygonWeld..::..Polygon Property 
PolygonWeld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The polygon for the polygon weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Polygon 
Get 
Set 
Property Value 
Type: Polygon 
See Also 
PolygonWeld Class 
PolygonWeld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1486 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
This class is an abstract class for model objects that have surfaces (polymeshes) as their geometries. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class PolymeshObjectBase : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class PolymeshObjectBase 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..PolymeshObjectBase 
                Tekla.Structures.Model..::..PourBreak 
                Tekla.Structures.Model..::..SurfaceObject 
See Also 
PolymeshObjectBase Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1487 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase Members 
PolymeshObjectBase Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolymeshObjectBase type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the model object from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	1488 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing model object in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 


Methods	1489 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the model object from the model by the identifier of this instance. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Polymesh Gets or sets the polymesh that forms the object geometry. 
See Also 
PolymeshObjectBase Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1490 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase Methods 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolymeshObjectBase type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the model object from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	1491 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing model object in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 


Methods	1492 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the model object from the model by the identifier of this instance. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
PolymeshObjectBase Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1493 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase..::..Delete Method 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the model object from the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolymeshObjectBase Class PolymeshObjectBase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1494 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase..::..Insert Method 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolymeshObjectBase Class PolymeshObjectBase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1495 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase..::..Modify Method 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing model object in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolymeshObjectBase Class PolymeshObjectBase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1496 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase..::..Select Method 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the model object from the model by the identifier of this instance. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PolymeshObjectBase Class PolymeshObjectBase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1497 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PolymeshObjectBase Properties 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PolymeshObjectBase type exposes the following members. 
Properties 
  	Name	Description 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Polymesh Gets or sets the polymesh that forms the object geometry. 
See Also 
PolymeshObjectBase Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1498 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PolymeshObjectBase..::..Polymesh Property 
PolymeshObjectBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the polymesh that forms the object geometry. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public FacetedBrep Polymesh { get; set; } 
Visual Basic 
Public Property Polymesh As FacetedBrep 
Get 
Set 
Property Value 

Type: FacetedBrep 
See Also 
PolymeshObjectBase Class PolymeshObjectBase Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1499 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Position class defines how a part is positioned relative to the input. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Position 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Position 
Examples 
Defining the position of a bolt array instance: 

  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           BoltArray MyBoltArray = new BoltArray(); 
           MyBoltArray.Position.Depth = Position.DepthEnum.MIDDLE; 
           MyBoltArray.Position.DepthOffset = 3; 
           MyBoltArray.Position.Plane = Position.PlaneEnum.MIDDLE; 
           MyBoltArray.Position.PlaneOffset = 1; 
           MyBoltArray.Position.Rotation = Position.RotationEnum.FRONT;            MyBoltArray.Position.RotationOffset = 2; 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Position 



Inheritance Hierarchy	1500 


Point Fields 

See Also 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1501 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Position Members 
Position Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Position type exposes the following members. 
Constructors 
  	Name	Description 
Position Creates a new position instance. 
Properties 
  	Name	Description 
Depth	Indicates the positioning in the depth sense. DepthOffset	The offset away from the Depth value. 
Plane	Indicates the positioning in the plane sense. PlaneOffset	The offset away from the Plane value. 
Rotation	Indicates the positioning in the rotational sense. RotationOffset The offset away from the Rotation value. 
See Also 
Position Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1502 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position Constructor 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new position instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position() 
Visual Basic 
Public Sub New 
See Also 
Position Class 
Position Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1503 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Position Properties 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Position type exposes the following members. 
Properties 
  	Name	Description 
Depth	Indicates the positioning in the depth sense. DepthOffset	The offset away from the Depth value. 
Plane	Indicates the positioning in the plane sense. PlaneOffset	The offset away from the Plane value. 
Rotation	Indicates the positioning in the rotational sense. RotationOffset The offset away from the Rotation value. 
See Also 
Position Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1504 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..Depth Property 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates the positioning in the depth sense. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position..::..DepthEnum Depth { get; set; } 
Visual Basic 
Public Property Depth As Position..::..DepthEnum 
Get 
Set 
Property Value 

Type: Position..::..DepthEnum 
See Also 
Position Class 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1505 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..DepthOffset Property 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The offset away from the Depth value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double DepthOffset { get; set; } 
Visual Basic 
Public Property DepthOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Position Class 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1506 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..Plane Property 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates the positioning in the plane sense. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position..::..PlaneEnum Plane { get; set; } 
Visual Basic 
Public Property Plane As Position..::..PlaneEnum 
Get 
Set 
Property Value 

Type: Position..::..PlaneEnum 
See Also 
Position Class 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1507 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..PlaneOffset Property 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The offset away from the Plane value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double PlaneOffset { get; set; } 
Visual Basic 
Public Property PlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Position Class 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1508 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..Rotation Property 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Indicates the positioning in the rotational sense. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position..::..RotationEnum Rotation { get; set; } 
Visual Basic 
Public Property Rotation As Position..::..RotationEnum 
Get 
Set 
Property Value 

Type: Position..::..RotationEnum 
See Also 
Position Class 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1509 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..RotationOffset Property 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The offset away from the Rotation value. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RotationOffset { get; set; } 
Visual Basic 
Public Property RotationOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Position Class 
Position Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1510 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..DepthEnum Enumeration 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position in the depth sense. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum DepthEnum 
Visual Basic 
Public Enumeration DepthEnum 
Members 
Member name  Value		Description 
MIDDLE	0	The middle option. 
FRONT	1	The front option. 
BEHIND	2	The behind option. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1511 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..PlaneEnum Enumeration 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position in the plane sense. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum PlaneEnum 
Visual Basic 
Public Enumeration PlaneEnum 
Members 
Member name  Value		Description 
MIDDLE	0	The middle option. 
LEFT	1	The left option. 
RIGHT	2	The right option. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1512 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Position..::..RotationEnum Enumeration 
Position Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position in the rotational sense. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RotationEnum 
Visual Basic 
Public Enumeration RotationEnum 
Members 
Member name  Value		Description 
FRONT	0	The front option. 
TOP	1	The top option. 
BACK	2	The back option. 
BELOW	3	The below option. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1513 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourBreak Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourBreak class represents a pour break in a model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class PourBreak : PolymeshObjectBase 
Visual Basic 
<SerializableAttribute> 
Public Class PourBreak 
Inherits PolymeshObjectBase 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
using System.Collections.Generic; 
public class Example 
 { 
public void Example1() 
    { 
        Point startPointBeam = new Point(0.0, 0.0, 0.0); 
        Point endPointBeam = new Point(7200.0, 0.0, 0.0); 
        Beam beam = new Beam(startPointBeam, endPointBeam) 
        { 
            Profile = { ProfileString = "400*400" }, 
            Material = { MaterialString = "Concrete_undefined" }         }; 
if (beam.Insert()) 
       { 
           Vector[] vertices = new[] 
           { 
new Vector(2000.0,  200.0,    0.0), new Vector(2000.0,  200.0, -400.0), new Vector(2000.0, -200.0, -400.0), new Vector(2000.0, -200.0,    0.0) 

Examples	1514 


Point Fields 
           }; 
var outerWires = new int[1][]; 
           outerWires[0] = new int[vertices.Length]; 
for (int i = 0; i < vertices.Length; i++) 
               outerWires[0][i] = i; 
var innerWires = new Dictionary<int, int[][]> { }; 
var pourBreak = new PourBreak { Polymesh = new FacetedBrep(vertices, outerWires, inner bool result = pourBreak.Insert(); 
       } 
   } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..PolymeshObjectBase                 Tekla.Structures.Model..::..PourBreak 
See Also 
PourBreak Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


























See Also	1515 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PourBreak Members 
PourBreak Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourBreak type exposes the following members. 
Constructors 
  	Name	Description 
PourBreak Initializes a new instance of the PourBreak class 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the model object from the model database. 
(Inherited from PolymeshObjectBase.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple properties at once. 

Methods	1516 






GetDoubleUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 
Insert 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	1517 









Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
(Inherited from PolymeshObjectBase.) 
Modifies the existing model object in the model database to match the current one. 
(Inherited from PolymeshObjectBase.) 
Selects the model object from the model by the identifier of this instance. 
(Inherited from PolymeshObjectBase.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Polymesh Gets or sets the polymesh that forms the object geometry. 
(Inherited from PolymeshObjectBase.) 
See Also 
PourBreak Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	1518 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourBreak Constructor 
PourBreak Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the PourBreak class 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PourBreak() 
Visual Basic 
Public Sub New 
See Also 
PourBreak Class 
PourBreak Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1519 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PourBreak Methods 
PourBreak Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourBreak type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the model object from the model database. 
(Inherited from PolymeshObjectBase.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


GetDoubleReportProperties 


GetDoubleUserProperties 

GetDynamicStringProperty 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 

Methods	1520 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
(Inherited from PolymeshObjectBase.) 
Modify	Modifies the existing model object in the model 
database to match the current one. 

Methods	1521 






Select 


SetDynamicStringProperty 



Point Fields 
(Inherited from PolymeshObjectBase.) 
Selects the model object from the model by the identifier of this instance. 
(Inherited from PolymeshObjectBase.) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
PourBreak Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	1522 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PourBreak Properties 
PourBreak Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourBreak type exposes the following members. 
Properties 
  	Name	Description 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Polymesh Gets or sets the polymesh that forms the object geometry. 
(Inherited from PolymeshObjectBase.) 
See Also 
PourBreak Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1523 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourObject class represents a pour object in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class PourObject : ModelObject, IAssemblable 
Visual Basic 
<SerializableAttribute> Public Class PourObject Inherits ModelObject 
Implements IAssemblable 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
    { 
        Beam beam = new Beam(new Point(1000, 1000, 400), new Point(3000, 1000, 400)); 
        beam.Profile.ProfileString = "380*380"; 
        beam.Material.MaterialString = "K40-1"; 
        beam.CastUnitType = Part.CastUnitTypeEnum.CAST_IN_PLACE; 
if (beam.Insert()) 
        { 
            Beam beam2 = new Beam(new Point(800, 1000, 0), new Point(800, 1000, 3000));             beam2.Profile.ProfileString = "380*380"; 
            beam2.Material.MaterialString = "K40-1"; 
            beam2.CastUnitType = Part.CastUnitTypeEnum.CAST_IN_PLACE; 
if (beam2.Insert()) 
            { 
new Model().CommitChanges(); 
                ModelObjectEnumerator pours = beam.GetPours(); 
while(pours.MoveNext()) 
                { 

Examples	1524 


Point Fields 
                    Pour pour = pours.Current as Pour; 
if(pour != null) 
                    { 
                        Solid solid = pour.GetSolid(); 
if(solid != null) 
                            Console.WriteLine("Fetching solid from pour successfull!"); 
                    } 
                } 
            }          
        } 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..PourObject 
See Also 
PourObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	1525 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PourObject Members 
PourObject Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourObject type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new pour object. 

PourObject 



The default values are as follows: 

 Class = 0; 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	At the moment pour objects cannot be deleted. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the pour object belongs 
to. 
Returns an enumerator of all the children model 
GetChildren 


objects. 
(Inherited from ModelObject.) 

Methods	1526 





GetCoordinateSystem 



Point Fields 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetParts	Returns an enumerator of all parts related to pour. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Returns the solid of the pour object. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	1527 


Point Fields 
GetSurfaceObjects	Returns an enumerator of all the connected surface 
objects. 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	At the moment pour objects cannot be inserted. 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the pour object with the given identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the pour object instance from the model. 
Select 


SetDynamicStringProperty 


The identifier of the instance must be set. (Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Class	The class of the pour object. 
ConcreteMixture Gets or sets the concrete mixture of the pour. Identifier	The identifier of the object. 
(Inherited from Object.) 
PourNumber	Gets or sets the pour number of the pour. 
PourType	Gets or sets the pour type of the pour. 
See Also 
PourObject Class 
Tekla.Structures.Model Namespace 

See Also	1528 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1529 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject Constructor 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new pour object. 

The default values are as follows: 

 Class = 0; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PourObject() 
Visual Basic 
Public Sub New 
See Also 
PourObject Class 
PourObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1530 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PourObject Methods 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourObject type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	At the moment pour objects cannot be deleted. 
(Overrides ModelObject..::..Delete()()()().) Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAssembly	Returns the assembly that the pour object belongs 
to. 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Methods	1531 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetParts	Returns an enumerator of all parts related to pour. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Returns the solid of the pour object. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetSurfaceObjects	Returns an enumerator of all the connected surface 
objects. 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	At the moment pour objects cannot be inserted. 

Methods	1532 


Point Fields 
(Overrides ModelObject..::..Insert()()()().) 
Modify	Modifies the pour object with the given identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the pour object instance from the model. 
Select 


SetDynamicStringProperty 


The identifier of the instance must be set. (Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
PourObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1533 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..Delete Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

At the moment pour objects cannot be deleted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
False. 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1534 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..GetAssembly Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the assembly that the pour object belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Assembly GetAssembly() 
Visual Basic 
Public Function GetAssembly As Assembly 
Return Value 

Type: Assembly 
The assembly that the pour object belongs to. 

Implements 

IAssemblable..::..GetAssembly()()()() 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1535 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..GetParts Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all parts related to pour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetParts() 
Visual Basic 
Public Function GetParts As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
PourObject Class 
PourObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1536 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..GetSolid Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the solid of the pour object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid() 
Visual Basic 
Public Function GetSolid As Solid 
Return Value 

Type: Solid 
The solid of the pour object. 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1537 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PourObject..::..GetSurfaceObjects Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator of all the connected surface objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetSurfaceObjects() 
Visual Basic 
Public Function GetSurfaceObjects As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
PourObject Class 
PourObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1538 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..Insert Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

At the moment pour objects cannot be inserted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
False. 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1539 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..Modify Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the pour object with the given identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1540 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..Select Method 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the pour object instance from the model. The identifier of the instance must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1541 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PourObject Properties 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PourObject type exposes the following members. 
Properties 
  	Name	Description 
Class	The class of the pour object. 
ConcreteMixture Gets or sets the concrete mixture of the pour. Identifier	The identifier of the object. 
(Inherited from Object.) 
PourNumber	Gets or sets the pour number of the pour. 
PourType	Gets or sets the pour type of the pour. 
See Also 
PourObject Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1542 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..Class Property 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The class of the pour object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Class { get; set; } 
Visual Basic 
Public Property Class As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1543 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..ConcreteMixture Property 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the concrete mixture of the pour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ConcreteMixture { get; set; } 
Visual Basic 
Public Property ConcreteMixture As String 
Get 
Set 
Property Value 
Type: String 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1544 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..PourNumber Property 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the pour number of the pour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PourNumber { get; set; } 
Visual Basic 
Public Property PourNumber As String 
Get 
Set 
Property Value 
Type: String 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1545 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PourObject..::..PourType Property 
PourObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the pour type of the pour. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string PourType { get; set; } 
Visual Basic 
Public Property PourType As String 
Get 
Set 
Property Value 
Type: String 
See Also 
PourObject Class 
PourObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1546 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Profile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Profile class defines the form of a cross section. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Profile 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Profile 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Profile 
See Also 
Profile Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1547 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Profile Members 
Profile Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Profile type exposes the following members. 
Constructors 
  	Name	Description 
Profile Instantiates an empty profile. Methods 
  	Name	Description 
FormatProfileString Formats profile string ParseProfileString	Parses profile string 
Properties 
  	Name	Description 
ProfileString The profile in human-readable form. See Also 
Profile Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1548 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Profile Constructor 
Profile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates an empty profile. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Profile() 
Visual Basic 
Public Sub New 
See Also 
Profile Class 
Profile Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1549 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Profile Methods 
Profile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Profile type exposes the following members. 
Methods 
  	Name	Description 
FormatProfileString Formats profile string ParseProfileString	Parses profile string 
See Also 
Profile Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1550 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Profile..::..FormatProfileString Method 
Profile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Formats profile string 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static string FormatProfileString( 
string profileString 
) 
Visual Basic 
Public Shared Function FormatProfileString (  
profileString As String 
) As String 
Parameters 

profileString 
Type: System..::..String 
profile string 

Return Value 

Type: String 
Formatted profile string, if not successful returns original string 
See Also 
Profile Class 
Profile Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1551 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Profile..::..ParseProfileString Method 
Profile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Parses profile string 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static string ParseProfileString( 
string profileString 
) 
Visual Basic 
Public Shared Function ParseProfileString (  
profileString As String 
) As String 
Parameters 

profileString 
Type: System..::..String 
profile string 

Return Value 

Type: String 
Parsed profile string, if not successful returns original string 
See Also 
Profile Class 
Profile Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1552 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Profile Properties 
Profile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Profile type exposes the following members. 
Properties 
  	Name	Description 
ProfileString The profile in human-readable form. See Also 
Profile Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1553 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Profile..::..ProfileString Property 
Profile Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The profile in human-readable form. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ProfileString { get; set; } 
Visual Basic 
Public Property ProfileString As String 
Get 
Set 
Property Value 
Type: String 
Examples 
The profile of a beam is set to standard L profile "L400*200*60": 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point point = new Point(5000, 0, 0); 
           Point point2 = new Point(7000, 0, 0);            Beam Beam = new Beam(point, point2); 
string ParametricProfileSeparator = "*"; string ShapeTypeL = "L"; 
string LshapeProfileDepth = "400"; string LshapeProfileWidth = "200"; string LshapeProfileThickness = "60"; 
           Beam.Profile.ProfileString = ShapeTypeL; 
           Beam.Profile.ProfileString += LshapeProfileDepth; 
           Beam.Profile.ProfileString += ParametricProfileSeparator;            Beam.Profile.ProfileString += LshapeProfileWidth; 

Examples	1554 


Point Fields 
           Beam.Profile.ProfileString += ParametricProfileSeparator;            Beam.Profile.ProfileString += LshapeProfileThickness; 
       } 
} 
See Also 
Profile Class 
Profile Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	1555 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ProjectInfo class provides project information about the currently open Tekla Structures model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ProjectInfo 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ProjectInfo 
Examples 
The following example gets the project information and shows the value of the Name property in a message dialog: 

  	Copy 
using Tekla.Structures.Model; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
    { 
        Model CurrentModel = new Model(); 
        ProjectInfo ProjectInfo = CurrentModel.GetProjectInfo(); 
if (CurrentModel.GetConnectionStatus()) 
        { 
if (ProjectInfo.Name.Length > 0) 
            { 
                MessageBox.Show(ProjectInfo.Name); 
            } 
        } 
    } 
} 




Examples	1556 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..ProjectInfo 
See Also 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	1557 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo Members 
ProjectInfo Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ProjectInfo type exposes the following members. 
Methods 
  	Name	Description 
GetDoubleUserProperties	Retrieves all double properties for the 
ProjectInfo. 
GetIntegerUserProperties	Retrieves all integer properties for the 
ProjectInfo. 
GetStringUserProperties	Retrieves all string properties for the 
ProjectInfo. 
GetUserProperty(String, Double%)	Retrieves a double property for the 
ProjectInfo. 
GetUserProperty(String, Int32%)	Retrieves an integer property for the 
ProjectInfo. 
GetUserProperty(String, String%)	Retrieves a string property for the 
ProjectInfo. 
Modify	Modifies the current project 
information. 
SetUserProperty(String, Double)	Sets a double property for the 
ProjectInfo. 
SetUserProperty(String, Int32)	Sets an integer property for the 
ProjectInfo. 
SetUserProperty(String, String)	Sets a string property for the 
ProjectInfo. 
Properties 
  	Name	Description 
Address	The address information of the ProjectInfo. 
Builder	The builder information of the ProjectInfo. 


Properties	1558 


Point Fields 
Description	The description of the ProjectInfo. 
Designer	The designer information of the ProjectInfo. 
EndDate	The end date information of the ProjectInfo. 
GUID	The GUID field of the ProjectInfo. 
Info1	The Info 1 field of the ProjectInfo. 
Info2	The Info 2 field of the ProjectInfo. 
Obsolete. 
ModelSharingLocalPath 


The local folder for model sharing. Is null if not defined for the model. 
Obsolete. 
The server path for model sharing. Is null if not defined for the model. 
Name	The name information of the ProjectInfo. 
Object	The object information of the ProjectInfo. 
ProjectNumber	The project number information of the ProjectInfo. StartDate	The start date information of the ProjectInfo. 
See Also 
ProjectInfo Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
























See Also	1559 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo Methods 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ProjectInfo type exposes the following members. 
Methods 
  	Name	Description 
GetDoubleUserProperties	Retrieves all double properties for the 
ProjectInfo. 
GetIntegerUserProperties	Retrieves all integer properties for the 
ProjectInfo. 
GetStringUserProperties	Retrieves all string properties for the 
ProjectInfo. 
GetUserProperty(String, Double%)	Retrieves a double property for the 
ProjectInfo. 
GetUserProperty(String, Int32%)	Retrieves an integer property for the 
ProjectInfo. 
GetUserProperty(String, String%)	Retrieves a string property for the 
ProjectInfo. 
Modify	Modifies the current project 
information. 
SetUserProperty(String, Double)	Sets a double property for the 
ProjectInfo. 
SetUserProperty(String, Int32)	Sets an integer property for the 
ProjectInfo. 
SetUserProperty(String, String)	Sets a string property for the 
ProjectInfo. 
See Also 
ProjectInfo Class 
Tekla.Structures.Model Namespace 
Copyright  © Tekla 2013. All rights reserved. 


See Also	1560 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ProjectInfo..::..GetDoubleUserProperties Method 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves all double properties for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetDoubleUserProperties( 
ref Hashtable Values 
) 
Visual Basic 
Public Function GetDoubleUserProperties (  
ByRef Values As Hashtable 
) As Boolean 
Parameters 

Values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1561 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ProjectInfo..::..GetIntegerUserProperties Method 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves all integer properties for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetIntegerUserProperties( 
ref Hashtable Values 
) 
Visual Basic 
Public Function GetIntegerUserProperties (  
ByRef Values As Hashtable 
) As Boolean 
Parameters 

Values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1562 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ProjectInfo..::..GetStringUserProperties Method 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves all string properties for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetStringUserProperties( 
ref Hashtable Values 
) 
Visual Basic 
Public Function GetStringUserProperties (  
ByRef Values As Hashtable 
) As Boolean 
Parameters 

Values 
Type: System.Collections..::..Hashtable% 
The return value, a hash table that contains all the values that were retrieved successfully. 

Return Value 

Type: Boolean 
True if at least one single property was retrieved successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1563 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..GetUserProperty Method 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GetUserProperty(String, 
Double%) 










Copyright  © Tekla 2013. All rights reserved. 



















See Also	1564 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..GetUserProperty Method (String, Double%) 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a double property for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string Name, 
ref double Value 
) 
Visual Basic 
Public Function GetUserProperty (  
Name As String, 
ByRef Value As Double 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be retrieved. 

Value 
Type: System..::..Double% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1565 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..GetUserProperty Method (String, Int32%) 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves an integer property for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string Name, 
ref int Value 
) 
Visual Basic 
Public Function GetUserProperty (  
Name As String, 
ByRef Value As Integer 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be retrieved. 

Value 
Type: System..::..Int32% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1566 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..GetUserProperty Method (String, String%) 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Retrieves a string property for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetUserProperty( 
string Name, 
ref string Value 
) 
Visual Basic 
Public Function GetUserProperty (  
Name As String, 
ByRef Value As String 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be retrieved. 

Value 
Type: System..::..String% The return value. 

Return Value 

Type: Boolean 
True if the value was returned successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
GetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1567 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Modify Method 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the current project information. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Modify() 
Visual Basic 
Public Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1568 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..SetUserProperty Method 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
SetUserProperty(String, Double)	Sets a double property for the ProjectInfo. SetUserProperty(String, Int32)	Sets an integer property for the ProjectInfo. SetUserProperty(String, String)	Sets a string property for the ProjectInfo. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1569 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..SetUserProperty Method (String, Double) 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a double property for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string Name, 
double Value 
) 
Visual Basic 
Public Function SetUserProperty (  
Name As String, 
Value As Double 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be set. 

Value 
Type: System..::..Double 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1570 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..SetUserProperty Method (String, Int32) 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets an integer property for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string Name, 
int Value 
) 
Visual Basic 
Public Function SetUserProperty (  
Name As String, 
Value As Integer 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be set. 

Value 
Type: System..::..Int32 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1571 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..SetUserProperty Method (String, String) 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets a string property for the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetUserProperty( 
string Name, 
string Value 
) 
Visual Basic 
Public Function SetUserProperty (  
Name As String, 
Value As String 
) As Boolean 
Parameters 

Name 
Type: System..::..String 
The name of the property to be set. 

Value 
Type: System..::..String 
The new value for the property. 

Return Value 

Type: Boolean 
True if the property was set successfully. 
See Also 
ProjectInfo Class 
ProjectInfo Members 
SetUserProperty Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1572 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo Properties 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ProjectInfo type exposes the following members. 
Properties 
  	Name	Description 
Address	The address information of the ProjectInfo. 
Builder	The builder information of the ProjectInfo. 
Description	The description of the ProjectInfo. 
Designer	The designer information of the ProjectInfo. 
EndDate	The end date information of the ProjectInfo. 
GUID	The GUID field of the ProjectInfo. 
Info1	The Info 1 field of the ProjectInfo. 
Info2	The Info 2 field of the ProjectInfo. 
Obsolete. 
ModelSharingLocalPath 


The local folder for model sharing. Is null if not defined for the model. 
Obsolete. 
The server path for model sharing. Is null if not defined for the model. 
Name	The name information of the ProjectInfo. 
Object	The object information of the ProjectInfo. 
ProjectNumber	The project number information of the ProjectInfo. StartDate	The start date information of the ProjectInfo. 
See Also 
ProjectInfo Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1573 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Address Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The address information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Address { get; set; } 
Visual Basic 
Public Property Address As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1574 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Builder Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The builder information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Builder { get; set; } 
Visual Basic 
Public Property Builder As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1575 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Description Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The description of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Description { get; set; } 
Visual Basic 
Public Property Description As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1576 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Designer Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The designer information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Designer { get; set; } 
Visual Basic 
Public Property Designer As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1577 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..EndDate Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The end date information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string EndDate { get; set; } 
Visual Basic 
Public Property EndDate As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1578 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..GUID Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GUID field of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string GUID { get; set; } 
Visual Basic 
Public Property GUID As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1579 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Info1 Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Info 1 field of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Info1 { get; set; } 
Visual Basic 
Public Property Info1 As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1580 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Info2 Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Info 2 field of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Info2 { get; set; } 
Visual Basic 
Public Property Info2 As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1581 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ProjectInfo..::..ModelSharingLocalPath Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The local folder for model sharing. Is null if not defined for the model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Does currently nothing. Will be removed in near future.")] public DirectoryInfo ModelSharingLocalPath { get; set; } 
Visual Basic 
<ObsoleteAttribute("Does currently nothing. Will be removed in near future.")>  Public Property ModelSharingLocalPath As DirectoryInfo 
Get 
Set 
Property Value 

Type: DirectoryInfo 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1582 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ProjectInfo..::..ModelSharingServerPath Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The server path for model sharing. Is null if not defined for the model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Does currently nothing. Will be removed in near future.")] public Uri ModelSharingServerPath { get; set; } 
Visual Basic 
<ObsoleteAttribute("Does currently nothing. Will be removed in near future.")>  Public Property ModelSharingServerPath As Uri 
Get 
Set 
Property Value 

Type: Uri 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1583 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Name Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1584 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..Object Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The object information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Object { get; set; } 
Visual Basic 
Public Property Object As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1585 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..ProjectNumber Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The project number information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ProjectNumber { get; set; } 
Visual Basic 
Public Property ProjectNumber As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1586 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ProjectInfo..::..StartDate Property 
ProjectInfo Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The start date information of the ProjectInfo. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string StartDate { get; set; } 
Visual Basic 
Public Property StartDate As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ProjectInfo Class 
ProjectInfo Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1587 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGeometry Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The RebarGeometry class represents a single physical reinforcing bar - the building block of a mesh, a rebar group and even a single rebar. It contains the physical reinforcing bar points in 3D space. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class RebarGeometry 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class RebarGeometry 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
           RebarGroup Group = new RebarGroup(); 
           ArrayList RebarGeoms = Group.GetRebarGeometries(true); 
foreach (RebarGeometry Rebar in RebarGeoms) 
           { 
if (Rebar != null) 
               { 
                   Console.WriteLine("Wire {0} has the following points:"); 
foreach (Point p in Rebar.Shape.Points) 
                   { 
                       Console.WriteLine("[{0},{1},{2}]", p.X, p.Y, p.Z); 
                   } 
               } 
           } 
       } 
} 

Examples	1588 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..RebarGeometry 
See Also 
RebarGeometry Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	1589 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarGeometry Members 
RebarGeometry Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarGeometry type exposes the following members. 
Properties 
  	Name	Description 
BendingRadiuses The bending radiuses of the wire. Diameter	The diameter of the wire. 
Shape	The physical points of the reinforcing bar. 
See Also 
RebarGeometry Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1590 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarGeometry Properties 
RebarGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarGeometry type exposes the following members. 
Properties 
  	Name	Description 
BendingRadiuses The bending radiuses of the wire. Diameter	The diameter of the wire. 
Shape	The physical points of the reinforcing bar. 
See Also 
RebarGeometry Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1591 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarGeometry..::..BendingRadiuses Property 
RebarGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The bending radiuses of the wire. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList BendingRadiuses { get; } 
Visual Basic 
Public ReadOnly Property BendingRadiuses As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
RebarGeometry Class RebarGeometry Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1592 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGeometry..::..Diameter Property 
RebarGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The diameter of the wire. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Diameter { get; } 
Visual Basic 
Public ReadOnly Property Diameter As Double 
Get 
Property Value 
Type: Double 
See Also 
RebarGeometry Class RebarGeometry Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1593 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGeometry..::..Shape Property 
RebarGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The physical points of the reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolyLine Shape { get; } 
Visual Basic 
Public ReadOnly Property Shape As PolyLine 
Get 
Property Value 
Type: PolyLine 
See Also 
RebarGeometry Class RebarGeometry Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1594 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarGroup class represents a group of reinforcing bars. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class RebarGroup : BaseRebarGroup 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class RebarGroup 
Inherits BaseRebarGroup 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(5000, 8000, 0), new Point(6000, 8000, 0));            Beam.Profile.ProfileString = "250*250"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Finish = "PAINT"; 
           Beam.Insert(); 
double MinimumX = Beam.GetSolid().MinimumPoint.X; double MinimumY = Beam.GetSolid().MinimumPoint.Y; double MinimumZ = Beam.GetSolid().MinimumPoint.Z; double MaximumX = Beam.GetSolid().MaximumPoint.X; double MaximumY = Beam.GetSolid().MaximumPoint.Y; double MaximumZ = Beam.GetSolid().MaximumPoint.Z; 
           Polygon Polygon = new Polygon(); 
           Polygon.Points.Add(new Point(MinimumX, MaximumY, MinimumZ));            Polygon.Points.Add(new Point(MinimumX, MinimumY, MinimumZ));            Polygon.Points.Add(new Point(MinimumX, MinimumY, MaximumZ));            Polygon.Points.Add(new Point(MinimumX, MaximumY, MaximumZ)); 


Examples	1595 


Point Fields 
           Polygon Polygon2 = new Polygon(); 
           Polygon2.Points.Add(new Point(MaximumX, MaximumY, MinimumZ));            Polygon2.Points.Add(new Point(MaximumX, MinimumY, MinimumZ));            Polygon2.Points.Add(new Point(MaximumX, MinimumY, MaximumZ));            Polygon2.Points.Add(new Point(MaximumX, MaximumY, MaximumZ)); 
           RebarGroup RebarGroup = new RebarGroup(); 
           RebarGroup.Polygons.Add(Polygon); 
           RebarGroup.Polygons.Add(Polygon2); 
           RebarGroup.RadiusValues.Add(40.0); 
           RebarGroup.SpacingType = RebarGroup.RebarGroupSpacingTypeEnum.SPACING_TYPE_TARGET_SPAC            RebarGroup.Spacings.Add(30.0); 
           RebarGroup.ExcludeType = RebarGroup.ExcludeTypeEnum.EXCLUDE_TYPE_BOTH; 
           RebarGroup.Father = Beam; 
           RebarGroup.Name = "RebarGroup"; 
           RebarGroup.Class = 3; 
           RebarGroup.Size = "12"; 
           RebarGroup.NumberingSeries.StartNumber = 0; 
           RebarGroup.NumberingSeries.Prefix = "Group"; 
           RebarGroup.Grade = "A500HW"; 
           RebarGroup.StartHook.Shape = RebarHookData.RebarHookShapeEnum.CUSTOM_HOOK; 
           RebarGroup.StartHook.Angle = -90; 
           RebarGroup.StartHook.Length = 3; 
           RebarGroup.StartHook.Radius = 20; 
           RebarGroup.EndHook.Shape = RebarHookData.RebarHookShapeEnum.CUSTOM_HOOK; 
           RebarGroup.EndHook.Angle = -90; 
           RebarGroup.EndHook.Length = 3; 
           RebarGroup.EndHook.Radius = 20; 
           RebarGroup.OnPlaneOffsets.Add(25.0); 
           RebarGroup.OnPlaneOffsets.Add(10.0); 
           RebarGroup.OnPlaneOffsets.Add(25.0); 
           RebarGroup.StartPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER_ 
           RebarGroup.StartPointOffsetValue = 20; 
           RebarGroup.EndPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER_TH            RebarGroup.EndPointOffsetValue = 60; 
           RebarGroup.FromPlaneOffset = 40; 
           RebarGroup.Insert(); 
           RebarGroup.Name = "Modified Group 1"; 
           RebarGroup.Modify(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..BaseRebarGroup                     Tekla.Structures.Model..::..RebarGroup 
See Also 
RebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1596 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup Members 
RebarGroup Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarGroup type exposes the following members. 
Constructors 
  	Name	Description 
RebarGroup Initializes a new rebar group instance with empty attributes. Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the rebar group instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
GetChildren	Returns an enumerator of all the 
children model objects. 


Methods	1597 






GetCoordinateSystem 



GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type 


Methods	1598 


Point Fields 








GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 





RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is 
faster to fetch multiple properties at once. 

Methods	1599 






GetStringUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the rebar group into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing rebar group in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a rebar group from the model database. The reinforcement 
identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, Int32)	Sets an integer property for the 
model object. 

Methods	1600 


Point Fields 



SetUserProperty(String, String) 





(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
EndHook	The hook at the end of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The end point of the direction in which the bars are 
EndPoint 




EndPointOffsetType 




EndPointOffsetValue 





ExcludeType 





Father 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

(Inherited from BaseRebarGroup.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Inherited from BaseRebarGroup.) 
Grade	Gets or sets the steel grade of the reinforcing bar. The 
grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the 

Properties	1601 


Point Fields 
bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


OnPlaneOffsets 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
An array list of polygons to define the reinforcing bar group shape. Use 1 polygon when defining 
non-tapered or spiral rebar groups. Use 2 to 99 polygons when defining tapered rebar groups. Each polygon must have an equal number of points. 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
(Inherited from BaseRebarGroup.) 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only 
Spacings 








SpacingType 


one value that defines the number of the reinforcing bars. 
(Inherited from BaseRebarGroup.) 
The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
(Inherited from BaseRebarGroup.) StartFromPlaneOffset	The start offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
StartHook	The hook at the beginning of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 

Properties	1602 





StartPoint 


StartPointOffsetType 


StartPointOffsetValue 



StirrupType 



Point Fields 
The start point of the direction in which the bars are distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
The type of the stirrup. The options are: 

 STIRRUP_TYPE_POLYGONAL 
 STIRRUP_TYPE_SPIRAL 
 STIRRUP_TYPE_TAPERED_CURVED 
See Also 
RebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	1603 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup Constructor 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new rebar group instance with empty attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarGroup() 
Visual Basic 
Public Sub New 
See Also 
RebarGroup Class 
RebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1604 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup Methods 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarGroup type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the rebar group instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1605 










GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical 

Methods	1606 


Point Fields 




GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 







GetSolid 



GetStringReportProperties 



GetStringUserProperties 





points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 


Methods	1607 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the rebar group into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing rebar group in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a rebar group from the model database. The reinforcement 
identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 


Methods	1608 


Point Fields 

See Also 
RebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1609 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup..::..Delete Method 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the rebar group instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarGroup Class 
RebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1610 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup..::..Insert Method 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the rebar group into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarGroup Class 
RebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1611 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup..::..Modify Method 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing rebar group in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarGroup Class 
RebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1612 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup..::..Select Method 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a rebar group from the model database. The reinforcement identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarGroup Class 
RebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1613 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup Properties 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarGroup type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndFromPlaneOffset	The end offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
EndHook	The hook at the end of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The end point of the direction in which the bars are 
EndPoint 




EndPointOffsetType 




EndPointOffsetValue 





ExcludeType 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Defines which bars to omit from the group. The options are: 

 EXCLUDE_TYPE_NONE 
 EXCLUDE_TYPE_FIRST 
 EXCLUDE_TYPE_LAST 
 EXCLUDE_TYPE_BOTH 

(Inherited from BaseRebarGroup.) 

Properties	1614 





Father 


FromPlaneOffset 



Point Fields 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Inherited from BaseRebarGroup.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


OnPlaneOffsets 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
An array list of polygons to define the reinforcing bar group shape. Use 1 polygon when defining 
non-tapered or spiral rebar groups. Use 2 to 99 polygons when defining tapered rebar groups. Each polygon must have an equal number of points. 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
(Inherited from BaseRebarGroup.) 
The spacing value(s). If the type of the spacing is SPACING_TYPE_EXACT_NUMBER Spacings has only one value that defines the number of the reinforcing bars. 
(Inherited from BaseRebarGroup.) 
SpacingType	The type of spacing. The options are (BaseRebarGroup.RebarGroupSpacingTypeEnum.): 

 SPACING_TYPE_UNDEFINED 
 SPACING_TYPE_EXACT_SPACINGS 
 SPACING_TYPE_EXACT_NUMBER 
 SPACING_TYPE_TARGET_SPACE 


Properties	1615 


Point Fields 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_START 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_END 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_BOTH 
 SPACING_TYPE_EXACT_SPACE_FLEX_AT_MIDDLE 
(Inherited from BaseRebarGroup.) StartFromPlaneOffset	The start offset value from the part surface. 
(Inherited from BaseRebarGroup.) 
StartHook	The hook at the beginning of the reinforcing bar. 
(Inherited from BaseRebarGroup.) 
The start point of the direction in which the bars are 
StartPoint 


StartPointOffsetType 


StartPointOffsetValue 



StirrupType 


distributed. 
(Inherited from BaseRebarGroup.) 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
The type of the stirrup. The options are: 

 STIRRUP_TYPE_POLYGONAL 
 STIRRUP_TYPE_SPIRAL 
 STIRRUP_TYPE_TAPERED_CURVED 
See Also 
RebarGroup Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1616 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup..::..Polygons Property 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
An array list of polygons to define the reinforcing bar group shape. Use 1 polygon when defining non-tapered or spiral rebar groups. Use 2 to 99 polygons when defining tapered rebar groups. Each polygon must have an equal number of points. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Polygons { get; set; } 
Visual Basic 
Public Property Polygons As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
RebarGroup Class 
RebarGroup Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1617 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarGroup..::..StirrupType Property 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the stirrup. The options are: 

 STIRRUP_TYPE_POLYGONAL 
 STIRRUP_TYPE_SPIRAL 
 STIRRUP_TYPE_TAPERED_CURVED 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarGroup..::..RebarGroupStirrupTypeEnum StirrupType { get; set; } 
Visual Basic 
Public Property StirrupType As RebarGroup..::..RebarGroupStirrupTypeEnum 
Get 
Set 
Property Value 

Type: RebarGroup..::..RebarGroupStirrupTypeEnum 
See Also 
RebarGroup Class 
RebarGroup Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1618 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarGroup..::..RebarGroupStirrupTypeEnum Enumeration 
RebarGroup Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different stirrup types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarGroupStirrupTypeEnum 
Visual Basic 
Public Enumeration RebarGroupStirrupTypeEnum 
Members 
Member name	Value	Description 
STIRRUP_TYPE_POLYGONAL	0	The polygonal type of stirrup. STIRRUP_TYPE_SPIRAL	1	The spiral type of stirrup. STIRRUP_TYPE_TAPERED_CURVED 2	The tapered curved type of stirrup. 
Three polygons have to be defined. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1619 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The RebarHookData class defines the hook at the end of a reinforcing bar. Hooks are used for anchoring purposes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class RebarHookData 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class RebarHookData 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..RebarHookData 
See Also 
RebarHookData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1620 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData Members 
RebarHookData Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarHookData type exposes the following members. 
Constructors 
  	Name	Description 
RebarHookData Instantiates a rebar hook data instance with empty members. Properties 
  	Name	Description 
Angle	The angle of the hook. 
Length The length of the straight part of the hook. 
Radius	The bending radius of the hook. The value is between -180 and +180 
degrees. 
Defines the shape of the hook. The options are: 

 NO_HOOK. Sets the angle, radius and length to 0. 
 HOOK_90_DEGREES. 
Shape 


 HOOK_135_DEGREES. 
 HOOK_180_DEGREES. 
CUSTOM_HOOK. The angle, radius and length values have to be set manually. 
See Also 
RebarHookData Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1621 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData Constructor 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Instantiates a rebar hook data instance with empty members. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData() 
Visual Basic 
Public Sub New 
See Also 
RebarHookData Class 
RebarHookData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1622 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData Properties 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarHookData type exposes the following members. 
Properties 
  	Name	Description 
Angle	The angle of the hook. 
Length The length of the straight part of the hook. 
Radius	The bending radius of the hook. The value is between -180 and +180 
degrees. 
Defines the shape of the hook. The options are: 

 NO_HOOK. Sets the angle, radius and length to 0. 
 HOOK_90_DEGREES. 
Shape 


 HOOK_135_DEGREES. 
 HOOK_180_DEGREES. 
CUSTOM_HOOK. The angle, radius and length values have to be set manually. 
See Also 
RebarHookData Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1623 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData..::..Angle Property 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The angle of the hook. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Angle { get; set; } 
Visual Basic 
Public Property Angle As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarHookData Class RebarHookData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1624 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData..::..Length Property 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The length of the straight part of the hook. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Length { get; set; } 
Visual Basic 
Public Property Length As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarHookData Class RebarHookData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1625 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData..::..Radius Property 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The bending radius of the hook. The value is between -180 and +180 degrees. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Radius { get; set; } 
Visual Basic 
Public Property Radius As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarHookData Class RebarHookData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1626 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarHookData..::..Shape Property 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the shape of the hook. The options are: 

 NO_HOOK. Sets the angle, radius and length to 0. 
 HOOK_90_DEGREES. 
 HOOK_135_DEGREES. 
 HOOK_180_DEGREES. 
 CUSTOM_HOOK. The angle, radius and length values have to be set manually. 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData..::..RebarHookShapeEnum Shape { get; set; } 
Visual Basic 
Public Property Shape As RebarHookData..::..RebarHookShapeEnum 
Get 
Set 
Property Value 

Type: RebarHookData..::..RebarHookShapeEnum 
See Also 
RebarHookData Class 
RebarHookData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1627 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarHookData..::..RebarHookShapeEnum Enumeration 
RebarHookData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different hook shapes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarHookShapeEnum 
Visual Basic 
Public Enumeration RebarHookShapeEnum 
Members 
Member name	Value	Description 
NO_HOOK	0	No hook. 
HOOK_90_DEGREES	1	The standard 90-degree hook. 
HOOK_135_DEGREES 2	The standard 135-degree hook. 
HOOK_180_DEGREES 3	The standard 180-degree hook. 
CUSTOM_HOOK	4	The custom hook shape to manually define the angle, 
radius and length of a hook. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1628 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarMesh class represents a reinforcement mesh. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class RebarMesh : Reinforcement 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class RebarMesh 
Inherits Reinforcement 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPlate CP = new ContourPlate(); 
           RebarMesh RebarMesh = new RebarMesh(); 
           RebarMesh.MeshType = Tekla.Structures.Model.RebarMesh.RebarMeshTypeEnum.RECTANGULAR_ME            RebarMesh.Father = CP; 
           RebarMesh.StartPoint = new Point(3000, 0, 0); 
           RebarMesh.EndPoint = new Point(5000, 0, 0); 
           RebarMesh.CatalogName = "MyCatalog"; 
           RebarMesh.LongitudinalSize = "6"; 
           RebarMesh.CrossSize = "6"; 
           RebarMesh.LeftOverhangCross = 20; 
           RebarMesh.LeftOverhangLongitudinal = 40; 
           RebarMesh.RightOverhangCross = 20; 
           RebarMesh.RightOverhangLongitudinal = 40; 
           RebarMesh.LongitudinalSpacingMethod = RebarMesh.RebarMeshSpacingMethodEnum.SPACING_TYP            RebarMesh.LongitudinalDistances.Add(50.0); 
           RebarMesh.CrossDistances.Add(20.0); 
           RebarMesh.Name = "Mesh Test"; 
           RebarMesh.Class = 7; 

Examples	1629 


Point Fields 
           RebarMesh.NumberingSeries.StartNumber = 0; 
           RebarMesh.NumberingSeries.Prefix = "Mesh"; 
           RebarMesh.Grade = "B500K"; 
           RebarMesh.OnPlaneOffsets.Add(10.0); 
           RebarMesh.FromPlaneOffset = -50; 
           RebarMesh.StartPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER_T            RebarMesh.StartPointOffsetValue = 10; 
           RebarMesh.CutByFatherPartCuts = false; 
           RebarMesh.CrossBarLocation = Tekla.Structures.Model.RebarMesh.RebarMeshCrossBarLocatio            RebarMesh.Length = 1500; 
           RebarMesh.Width = 3500;   
           RebarMesh.Insert(); 
           RebarMesh.Grade = "B600KX"; 
           RebarMesh.LongitudinalSize = "8"; 
           RebarMesh.RightOverhangLongitudinal = 75;            RebarMesh.Length = 1800; 
           RebarMesh.Width = 3800; 
           RebarMesh.Modify(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement                 Tekla.Structures.Model..::..RebarMesh 
See Also 
RebarMesh Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1630 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh Members 
RebarMesh Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarMesh type exposes the following members. 
Constructors 
  	Name	Description 
RebarMesh Initializes a new mesh instance with empty attributes. Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the reinforcement mesh instance with the given identifier from the model database. (Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
GetChildren	Returns an enumerator of all the 
children model objects. 


Methods	1631 






GetCoordinateSystem 



GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type 


Methods	1632 


Point Fields 








GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 





RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is 
faster to fetch multiple properties at once. 

Methods	1633 






GetStringUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the reinforcement mesh into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing reinforcement mesh in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a reinforcement mesh from the model database. The reinforcement identifier must be set. (Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, Int32)	Sets an integer property for the 
model object. 

Methods	1634 


Point Fields 



SetUserProperty(String, String) 





(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
CatalogName	The name of the rebar mesh catalog. 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
CrossBarLocation	Defines the location of the crossing bars. CrossDistances	The crossing spacing double value(s). 
CrossSize	The size of the crossing rebar. 
CutByFatherPartCuts	Defines whether the rebar mesh is cut by father part 
cuts or not. 
EndFromPlaneOffset	The end offset value from the part surface. 
EndHook	The hook at the end of the reinforcing. 
EndPoint	The end point of the direction in which the 
longitudinal bars are distributed. 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 


Father 


FromPlaneOffset 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
The offset value from the part surface applied in both sides. 
(Overrides Reinforcement..::..FromPlaneOffset.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 

Properties	1635 


Point Fields 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
LeftOverhangCross	The overhang of the crossing part's left side. LeftOverhangLongitudinal	The overhang of the longitudinal bar's left side. Length	The length of the rectangle rebar mesh. 
LongitudinalDistances	The longitudinal spacing double value(s). LongitudinalSize	The size of the longitudinal rebar. 
The type of spacing between rebar mesh bars. Used both for longitudinal and crossing bars. The options are (RebarMesh.RebarMeshSpacingMethodEnum.): 
LongitudinalSpacingMethod 
 SPACING_TYPE_SAME_DISTANCE 
 SPACING_TYPE_MULTIPLE_VARYING_DISTANCES 
The type of the reinforcement mesh. The options are: 

 RECTANGULAR_MESH 
 POLYGON_MESH 
 BENT_MESH 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	The polygon of the mesh. 
Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
RightOverhangCross	The right overhang of the crossing bar. RightOverhangLongitudinal	The right overhang of the longitudinal bar. StartFromPlaneOffset	The start offset value from the part surface. StartHook	The hook at the beginning of the reinforcing. 
StartPoint	The start point of the direction in which the 
longitudinal bars are distributed. 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
StartPointOffsetValue	Gets or sets the concrete cover thickness or leg 
length at the first end of the bar. 

Properties	1636 


Point Fields 
(Inherited from Reinforcement.) 
Width	The width of the rectangle rebar mesh. 
See Also 
RebarMesh Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








































See Also	1637 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh Constructor 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new mesh instance with empty attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarMesh() 
Visual Basic 
Public Sub New 
See Also 
RebarMesh Class 
RebarMesh Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1638 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh Methods 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarMesh type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the reinforcement mesh instance with the given identifier from the model database. (Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1639 










GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical 

Methods	1640 


Point Fields 




GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 







GetSolid 



GetStringReportProperties 



GetStringUserProperties 





points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 


Methods	1641 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the reinforcement mesh into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing reinforcement mesh in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a reinforcement mesh from the model database. The reinforcement identifier must be set. (Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 


Methods	1642 


Point Fields 

See Also 
RebarMesh Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1643 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Delete Method 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the reinforcement mesh instance with the given identifier from the model database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1644 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Insert Method 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the reinforcement mesh into the model database. All the attributes must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1645 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Modify Method 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing reinforcement mesh in the model database to match the current one. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1646 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Select Method 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a reinforcement mesh from the model database. The reinforcement identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1647 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh Properties 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarMesh type exposes the following members. 
Properties 
  	Name	Description 
CatalogName	The name of the rebar mesh catalog. 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
CrossBarLocation	Defines the location of the crossing bars. CrossDistances	The crossing spacing double value(s). 
CrossSize	The size of the crossing rebar. 
CutByFatherPartCuts	Defines whether the rebar mesh is cut by father part 
cuts or not. 
EndFromPlaneOffset	The end offset value from the part surface. 
EndHook	The hook at the end of the reinforcing. 
EndPoint	The end point of the direction in which the 
longitudinal bars are distributed. 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 


Father 

FromPlaneOffset 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 

Properties	1648 


Point Fields 
The offset value from the part surface applied in both sides. 
(Overrides Reinforcement..::..FromPlaneOffset.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
LeftOverhangCross	The overhang of the crossing part's left side. LeftOverhangLongitudinal	The overhang of the longitudinal bar's left side. Length	The length of the rectangle rebar mesh. 
LongitudinalDistances	The longitudinal spacing double value(s). LongitudinalSize	The size of the longitudinal rebar. 
The type of spacing between rebar mesh bars. Used both for longitudinal and crossing bars. The options are (RebarMesh.RebarMeshSpacingMethodEnum.): 
LongitudinalSpacingMethod 
 SPACING_TYPE_SAME_DISTANCE 
 SPACING_TYPE_MULTIPLE_VARYING_DISTANCES 
The type of the reinforcement mesh. The options are: 

 RECTANGULAR_MESH 
 POLYGON_MESH 
 BENT_MESH 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	The polygon of the mesh. 
Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
RightOverhangCross	The right overhang of the crossing bar. RightOverhangLongitudinal	The right overhang of the longitudinal bar. 

Properties	1649 


Point Fields 
StartFromPlaneOffset	The start offset value from the part surface. StartHook	The hook at the beginning of the reinforcing. 
StartPoint	The start point of the direction in which the 
longitudinal bars are distributed. 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or 
StartPointOffsetType 


OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
Width	The width of the rectangle rebar mesh. 
See Also 
RebarMesh Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





























See Also	1650 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..CatalogName Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the rebar mesh catalog. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string CatalogName { get; set; } 
Visual Basic 
Public Property CatalogName As String 
Get 
Set 
Property Value 
Type: String 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1651 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..CrossBarLocation Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the location of the crossing bars. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarMesh..::..RebarMeshCrossBarLocationEnum CrossBarLocation { get; set; } 
Visual Basic 
Public Property CrossBarLocation As RebarMesh..::..RebarMeshCrossBarLocationEnum Get 
Set 
Property Value 

Type: RebarMesh..::..RebarMeshCrossBarLocationEnum 
See Also 
RebarMesh Class 
RebarMesh Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1652 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..CrossDistances Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The crossing spacing double value(s). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList CrossDistances { get; set; } 
Visual Basic 
Public Property CrossDistances As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1653 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..CrossSize Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The size of the crossing rebar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string CrossSize { get; set; } 
Visual Basic 
Public Property CrossSize As String 
Get 
Set 
Property Value 
Type: String 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1654 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..CutByFatherPartCuts Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines whether the rebar mesh is cut by father part cuts or not. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CutByFatherPartCuts { get; set; } 
Visual Basic 
Public Property CutByFatherPartCuts As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1655 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..EndFromPlaneOffset Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The end offset value from the part surface. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EndFromPlaneOffset { get; set; } 
Visual Basic 
Public Property EndFromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1656 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..EndHook Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The hook at the end of the reinforcing. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData EndHook { get; set; } 
Visual Basic 
Public Property EndHook As RebarHookData 
Get 
Set 
Property Value 

Type: RebarHookData 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1657 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..EndPoint Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The end point of the direction in which the longitudinal bars are distributed. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; set; } 
Visual Basic 
Public Property EndPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1658 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..FromPlaneOffset Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The offset value from the part surface applied in both sides. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override double FromPlaneOffset { get; set; } 
Visual Basic 
Public Overrides Property FromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1659 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..LeftOverhangCross Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The overhang of the crossing part's left side. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LeftOverhangCross { get; set; } 
Visual Basic 
Public Property LeftOverhangCross As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1660 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..LeftOverhangLongitudinal Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The overhang of the longitudinal bar's left side. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LeftOverhangLongitudinal { get; set; } 
Visual Basic 
Public Property LeftOverhangLongitudinal As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1661 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Length Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The length of the rectangle rebar mesh. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Length { get; set; } 
Visual Basic 
Public Property Length As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1662 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..LongitudinalDistances Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The longitudinal spacing double value(s). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList LongitudinalDistances { get; set; } 
Visual Basic 
Public Property LongitudinalDistances As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1663 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..LongitudinalSize Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The size of the longitudinal rebar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string LongitudinalSize { get; set; } 
Visual Basic 
Public Property LongitudinalSize As String 
Get 
Set 
Property Value 
Type: String 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1664 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..LongitudinalSpacingMethod Property RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The type of spacing between rebar mesh bars. Used both for longitudinal and crossing bars. The options are (RebarMesh.RebarMeshSpacingMethodEnum.): 

 SPACING_TYPE_SAME_DISTANCE 
 SPACING_TYPE_MULTIPLE_VARYING_DISTANCES 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarMesh..::..RebarMeshSpacingMethodEnum LongitudinalSpacingMethod { get; set; } 
Visual Basic 
Public Property LongitudinalSpacingMethod As RebarMesh..::..RebarMeshSpacingMethodEnum Get 
Set 
Property Value 

Type: RebarMesh..::..RebarMeshSpacingMethodEnum 
See Also 
RebarMesh Class 
RebarMesh Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1665 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..MeshType Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the reinforcement mesh. The options are: 

 RECTANGULAR_MESH 
 POLYGON_MESH 
 BENT_MESH 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarMesh..::..RebarMeshTypeEnum MeshType { get; set; } 
Visual Basic 
Public Property MeshType As RebarMesh..::..RebarMeshTypeEnum 
Get 
Set 
Property Value 

Type: RebarMesh..::..RebarMeshTypeEnum 
Remarks 
It is not possible to change the type of existing rebar meshes. 
See Also 
RebarMesh Class 
RebarMesh Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1666 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Polygon Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The polygon of the mesh. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Polygon 
Get 
Set 
Property Value 
Type: Polygon 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1667 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..RightOverhangCross Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The right overhang of the crossing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RightOverhangCross { get; set; } 
Visual Basic 
Public Property RightOverhangCross As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1668 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..RightOverhangLongitudinal Property RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The right overhang of the longitudinal bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double RightOverhangLongitudinal { get; set; } 
Visual Basic 
Public Property RightOverhangLongitudinal As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1669 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..StartFromPlaneOffset Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The start offset value from the part surface. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double StartFromPlaneOffset { get; set; } 
Visual Basic 
Public Property StartFromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1670 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..StartHook Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hook at the beginning of the reinforcing. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData StartHook { get; set; } 
Visual Basic 
Public Property StartHook As RebarHookData 
Get 
Set 
Property Value 

Type: RebarHookData 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1671 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..StartPoint Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The start point of the direction in which the longitudinal bars are distributed. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; set; } 
Visual Basic 
Public Property StartPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1672 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarMesh..::..Width Property 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The width of the rectangle rebar mesh. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Width { get; set; } 
Visual Basic 
Public Property Width As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarMesh Class 
RebarMesh Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1673 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..RebarMeshCrossBarLocationEnum Enumeration 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ways to locate the crossing bars. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarMeshCrossBarLocationEnum 
Visual Basic 
Public Enumeration RebarMeshCrossBarLocationEnum 
Members 
Member name	Value	Description 
LOCATION_TYPE_UNDEFINED -1	The undefined location type. LOCATION_TYPE_ABOVE	0	The location of the crossing bars is above the 
longitudinal bars. 
LOCATION_TYPE_BELOW	1	The location of the crossing bars is below the 
longitudinal bars. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1674 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..RebarMeshSpacingMethodEnum Enumeration 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ways to distribute the reinforcing bars with different spacings. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarMeshSpacingMethodEnum 
Visual Basic 
Public Enumeration RebarMeshSpacingMethodEnum 
Members 
Member name	Value	Description 
SPACING_TYPE_UNDEFINED	0	The undefined spacing 
type. 
Distributes the bars using the same distance for all bars. 
SPACING_TYPE_MULTIPLE_VARYING_DISTANCES 2	Varying distribution of 
the bars. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	1675 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarMesh..::..RebarMeshTypeEnum Enumeration 
RebarMesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different types of reinforcement meshes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarMeshTypeEnum 
Visual Basic 
Public Enumeration RebarMeshTypeEnum 
Members 
Member name	Value	Description 
UNKNOWN_MESH	0	The type of the mesh is unknown. RECTANGULAR_MESH 1	The shape of the mesh is rectangular. POLYGON_MESH	2	The shape of the mesh is a polygon. Create 
rectangular meshes also as polygon meshes. BENT_MESH	3	The shape of the mesh is bent. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1676 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The RebarSplice class represents a splice between two reinforcements. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class RebarSplice : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class RebarSplice 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(5000, 15000, 0), new Point(6000, 15000, 0));            Beam.Profile.ProfileString = "250*250"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Finish = "PAINT"; 
           Beam.Insert(); 
double MinimumX = Beam.GetSolid().MinimumPoint.X; double MinimumY = Beam.GetSolid().MinimumPoint.Y; double MinimumZ = Beam.GetSolid().MinimumPoint.Z; double MaximumX = Beam.GetSolid().MaximumPoint.X;  double MaximumY = Beam.GetSolid().MaximumPoint.Y; double MaximumZ = Beam.GetSolid().MaximumPoint.Z; double MidX = (MinimumX + MaximumX) / 2.0; 
           Polygon Polygon = new Polygon(); 
           Polygon.Points.Add(new Point(MinimumX, MinimumY, MaximumZ));            Polygon.Points.Add(new Point(MinimumX, MinimumY, MinimumZ));            Polygon.Points.Add(new Point(MidX, MinimumY, MinimumZ)); 

Examples	1677 


Point Fields 

           Polygon Polygon2 = new Polygon(); 
           Polygon2.Points.Add(new Point(MinimumX, MaximumY, MaximumZ));            Polygon2.Points.Add(new Point(MinimumX, MaximumY, MinimumZ));            Polygon2.Points.Add(new Point(MidX, MaximumY, MinimumZ)); 
           RebarGroup RebarGroup1 = new RebarGroup(); 
           RebarGroup1.Polygons.Add(Polygon);   
           RebarGroup1.Polygons.Add(Polygon2); 
           RebarGroup1.RadiusValues.Add(40.0); 
           RebarGroup1.SpacingType = RebarGroup.RebarGroupSpacingTypeEnum.SPACING_TYPE_TARGET_SPA            RebarGroup1.Spacings.Add(30.0); 
           RebarGroup1.ExcludeType = RebarGroup.ExcludeTypeEnum.EXCLUDE_TYPE_BOTH; 
           RebarGroup1.Father = Beam; 
           RebarGroup1.Name = "RebarGroup1"; 
           RebarGroup1.Class = 3; 
           RebarGroup1.Size = "12"; 
           RebarGroup1.NumberingSeries.StartNumber = 0; 
           RebarGroup1.NumberingSeries.Prefix = "Group"; 
           RebarGroup1.Grade = "A500HW"; 
           RebarGroup1.StartHook.Shape = RebarHookData.RebarHookShapeEnum.NO_HOOK; 
           RebarGroup1.StartHook.Angle = -90; 
           RebarGroup1.StartHook.Length = 3; 
           RebarGroup1.StartHook.Radius = 20; 
           RebarGroup1.EndHook.Shape = RebarHookData.RebarHookShapeEnum.NO_HOOK; 
           RebarGroup1.EndHook.Angle = -90; 
           RebarGroup1.EndHook.Length = 3; 
           RebarGroup1.EndHook.Radius = 20; 
           RebarGroup1.OnPlaneOffsets.Add(25.0); 
           RebarGroup1.OnPlaneOffsets.Add(25.0); 
           RebarGroup1.OnPlaneOffsets.Add(25.0); 
           RebarGroup1.StartPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER 
           RebarGroup1.StartPointOffsetValue = 20; 
           RebarGroup1.EndPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER_T            RebarGroup1.EndPointOffsetValue = 20; 
           RebarGroup1.FromPlaneOffset = 40; 
           RebarGroup1.Insert(); 
           Polygon Polygon3 = new Polygon(); 
           Polygon3.Points.Add(new Point(MidX, MinimumY, MinimumZ)); 
           Polygon3.Points.Add(new Point(MaximumX, MinimumY, MinimumZ));            Polygon3.Points.Add(new Point(MaximumX, MinimumY, MaximumZ)); 
           Polygon Polygon4 = new Polygon(); 
           Polygon4.Points.Add(new Point(MidX, MaximumY, MinimumZ)); 
           Polygon4.Points.Add(new Point(MaximumX, MaximumY, MinimumZ));            Polygon4.Points.Add(new Point(MaximumX, MaximumY, MaximumZ)); 
           RebarGroup RebarGroup2 = new RebarGroup(); 
           RebarGroup2.Polygons.Add(Polygon3); 
           RebarGroup2.Polygons.Add(Polygon4); 
           RebarGroup2.RadiusValues.Add(40.0); 
           RebarGroup2.SpacingType = RebarGroup.RebarGroupSpacingTypeEnum.SPACING_TYPE_TARGET_SPA            RebarGroup2.Spacings.Add(30.0); 
           RebarGroup2.ExcludeType = RebarGroup.ExcludeTypeEnum.EXCLUDE_TYPE_BOTH; 
           RebarGroup2.Father = Beam; 
           RebarGroup2.Name = "RebarGroup2"; 
           RebarGroup2.Class = 3; 
           RebarGroup2.Size = "12"; 
           RebarGroup2.NumberingSeries.StartNumber = 0; 
           RebarGroup2.NumberingSeries.Prefix = "Group"; 

Examples	1678 


Point Fields 
           RebarGroup2.Grade = "A500HW"; 
           RebarGroup2.StartHook.Shape = RebarHookData.RebarHookShapeEnum.NO_HOOK; 
           RebarGroup2.StartHook.Angle = -90; 
           RebarGroup2.StartHook.Length = 3; 
           RebarGroup2.StartHook.Radius = 20; 
           RebarGroup2.EndHook.Shape = RebarHookData.RebarHookShapeEnum.NO_HOOK; 
           RebarGroup2.EndHook.Angle = -90; 
           RebarGroup2.EndHook.Length = 3; 
           RebarGroup2.EndHook.Radius = 20; 
           RebarGroup2.OnPlaneOffsets.Add(25.0); 
           RebarGroup2.OnPlaneOffsets.Add(25.0); 
           RebarGroup2.OnPlaneOffsets.Add(25.0); 
           RebarGroup2.StartPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER 
           RebarGroup2.StartPointOffsetValue = 20; 
           RebarGroup2.EndPointOffsetType = Reinforcement.RebarOffsetTypeEnum.OFFSET_TYPE_COVER_T            RebarGroup2.EndPointOffsetValue = 20; 
           RebarGroup2.FromPlaneOffset = 40; 
           RebarGroup2.Insert(); 
           RebarSplice RebarSplice = new RebarSplice(RebarGroup1, RebarGroup2); 
if(!RebarSplice.Insert()) 
               Console.WriteLine("Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..RebarSplice 
See Also 
RebarSplice Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1679 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice Members 
RebarSplice Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarSplice type exposes the following members. 
Constructors 
  	Name	Description 
RebarSplice()()()()	Initializes a new rebar splice instance. RebarSplice(RebarGroup, 
RebarGroup) 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the rebar splice instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1680 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	1681 





Insert 


Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Inserts the rebar splice into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing rebar splice in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a rebar splice from the model database. The splice identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Value 0: Joined bars on top of each other in the case of the lap type splice. Value 1: Joined bars parallel to each other in the case of the lap type splice. 
Clearance	The clearance between joined bars in the case of the lap type 
splice. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
LapLength	The lap length of the lap type splice. 
Offset	The distance from the end point of the first bar along the bar 
length. 
RebarGroup1 The first one of the joined reinforcements (picked first). 
RebarGroup2 The second one of the joined reinforcements (picked second). 
Type	The type of the splice (can be a lap, weld or muff splice). 





Properties	1682 


Point Fields 

See Also 
RebarSplice Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1683 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice Constructor 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
RebarSplice()()()()	Initializes a new rebar splice instance. RebarSplice(RebarGroup, 
RebarGroup) 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1684 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice Constructor 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new rebar splice instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarSplice() 
Visual Basic 
Public Sub New 
See Also 
RebarSplice Class 
RebarSplice Members 
RebarSplice Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1685 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarSplice Constructor (RebarGroup, RebarGroup) RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new rebar splice instance with rebar groups to be joined. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarSplice( 
RebarGroup InputRebar1, 
RebarGroup InputRebar2 
) 
Visual Basic 
Public Sub New (  
InputRebar1 As RebarGroup, 
InputRebar2 As RebarGroup 
) 
Parameters 

InputRebar1 
Type: Tekla.Structures.Model..::..RebarGroup 
The first rebar group to be used. 

InputRebar2 
Type: Tekla.Structures.Model..::..RebarGroup 
The second rebar group to be used. 
See Also 
RebarSplice Class 
RebarSplice Members 
RebarSplice Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1686 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice Methods 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarSplice type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the rebar splice instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1687 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the rebar splice into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing rebar splice in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 

Methods	1688 





Select 


SetDynamicStringProperty 



Point Fields 
Selects a rebar splice from the model database. The splice identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
RebarSplice Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1689 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Delete Method 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the rebar splice instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1690 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Insert Method 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the rebar splice into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1691 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Modify Method 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing rebar splice in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1692 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Select Method 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a rebar splice from the model database. The splice identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1693 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice Properties 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarSplice type exposes the following members. 
Properties 
  	Name	Description 
Value 0: Joined bars on top of each other in the case of the lap type splice. Value 1: Joined bars parallel to each other in the case of the lap type splice. 
Clearance	The clearance between joined bars in the case of the lap type 
splice. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
LapLength	The lap length of the lap type splice. 
Offset	The distance from the end point of the first bar along the bar 
length. 
RebarGroup1 The first one of the joined reinforcements (picked first). 
RebarGroup2 The second one of the joined reinforcements (picked second). 
Type	The type of the splice (can be a lap, weld or muff splice). 
See Also 
RebarSplice Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1694 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..BarPositions Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Value 0: Joined bars on top of each other in the case of the lap type splice. Value 1: Joined bars parallel to each other in the case of the lap type splice. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarSplice..::..RebarSpliceBarPositionsEnum BarPositions { get; set; } 
Visual Basic 
Public Property BarPositions As RebarSplice..::..RebarSpliceBarPositionsEnum 
Get 
Set 
Property Value 

Type: RebarSplice..::..RebarSpliceBarPositionsEnum 
See Also 
RebarSplice Class 
RebarSplice Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1695 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Clearance Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The clearance between joined bars in the case of the lap type splice. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Clearance { get; set; } 
Visual Basic 
Public Property Clearance As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1696 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..LapLength Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The lap length of the lap type splice. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LapLength { get; set; } 
Visual Basic 
Public Property LapLength As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1697 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Offset Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The distance from the end point of the first bar along the bar length. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Offset { get; set; } 
Visual Basic 
Public Property Offset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1698 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..RebarGroup1 Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The first one of the joined reinforcements (picked first). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Reinforcement RebarGroup1 { get; set; } 
Visual Basic 
Public Property RebarGroup1 As Reinforcement 
Get 
Set 
Property Value 

Type: Reinforcement 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1699 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..RebarGroup2 Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second one of the joined reinforcements (picked second). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Reinforcement RebarGroup2 { get; set; } 
Visual Basic 
Public Property RebarGroup2 As Reinforcement 
Get 
Set 
Property Value 

Type: Reinforcement 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1700 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarSplice..::..Type Property 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the splice (can be a lap, weld or muff splice). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarSplice..::..RebarSpliceTypeEnum Type { get; set; } 
Visual Basic 
Public Property Type As RebarSplice..::..RebarSpliceTypeEnum 
Get 
Set 
Property Value 

Type: RebarSplice..::..RebarSpliceTypeEnum 
See Also 
RebarSplice Class 
RebarSplice Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1701 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarSplice..::..RebarSpliceBarPositionsEnum Enumeration 
RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The bar group positions in the splice. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarSpliceBarPositionsEnum 
Visual Basic 
Public Enumeration RebarSpliceBarPositionsEnum 
Members 
Member name	Value	Description 
SPLICE_BAR_ON_TOP	0	Joined bars on top of each other. SPLICE_BAR_PARALLEL 1	Joined bars parallel to each other. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1702 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 RebarSplice..::..RebarSpliceTypeEnum Enumeration RebarSplice Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The splice types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarSpliceTypeEnum 
Visual Basic 
Public Enumeration RebarSpliceTypeEnum 
Members 
Member name	Value	Description 
SPLICE_TYPE_LAP_RIGHT 0	The first (left) bar extends over the second (right) 
bar. 
SPLICE_TYPE_LAP_LEFT	1	The second (right) bar extends over the first (left) 
bar. 
SPLICE_TYPE_LAP_BOTH	2	Both bars extend over each other. 
SPLICE_TYPE_MUFF	3	The bar ends are joined with a muff. SPLICE_TYPE_WELD	4	The bar ends are joined with a weld. See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1703 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The RebarStrand class represents prestressed strands for concrete parts. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class RebarStrand : Reinforcement 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class RebarStrand 
Inherits Reinforcement 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(5000, 14000, 0), new Point(6000, 14000, 0));            Beam.Profile.ProfileString = "250*250"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Finish = "PAINT"; 
           Beam.Insert(); 
double MinimumX = Beam.GetSolid().MinimumPoint.X; double MinimumY = Beam.GetSolid().MinimumPoint.Y; double MinimumZ = Beam.GetSolid().MinimumPoint.Z; double MaximumX = Beam.GetSolid().MaximumPoint.X;  double MaximumY = Beam.GetSolid().MaximumPoint.Y; double MaximumZ = Beam.GetSolid().MaximumPoint.Z; 
           Polygon Polygon1 = new Polygon(); 
           Polygon1.Points.Add(new Point(MinimumX, MaximumY, MinimumZ)); 
           Polygon1.Points.Add(new Point(MinimumX, MaximumY, MaximumZ));             Polygon1.Points.Add(new Point(MinimumX, MinimumY, MaximumZ)); 
           Polygon1.Points.Add(new Point(MinimumX, MinimumY, MinimumZ)); 

Examples	1704 


Point Fields 
           Polygon1.Points.Add(new Point(MinimumX, MaximumY, MinimumZ)); 
           RebarStrand RebarStrand = new RebarStrand(); 
           RebarStrand.Patterns.Add(Polygon1);         
           RebarStrand.StartPoint = new Point(MinimumX, MinimumY, MinimumZ);            RebarStrand.EndPoint = new Point(MaximumX, MinimumY, MinimumZ); 
           RebarStrand.Father = Beam; 
           RebarStrand.Name = "Strand Test 1"; 
           RebarStrand.Class = 3; 
           RebarStrand.Size = "10"; 
           RebarStrand.NumberingSeries.StartNumber = 0; 
           RebarStrand.NumberingSeries.Prefix = "STRAND1"; 
           RebarStrand.Grade = "B500K"; 
           RebarStrand.RadiusValues.Add(30.0); 
           RebarStrand.PullPerStrand = 8000.0; 
           StrandUnbondingData Unbonding = new StrandUnbondingData(); 
           Unbonding.FromEnd = 20; 
           Unbonding.FromStart = 20; 
           Unbonding.MiddleToEnd = 30; 
           Unbonding.MiddleToStart = 30; 
           Unbonding.StrandIndex = 1; 
           RebarStrand.Unbondings.Add(Unbonding); 
           StrandUnbondingData Unbonding2 = new StrandUnbondingData(); 
           Unbonding2.FromEnd = 40; 
           Unbonding2.FromStart = 40; 
           Unbonding2.MiddleToEnd = 15; 
           Unbonding2.MiddleToStart = 15; 
           Unbonding2.StrandIndex = 2; 
           RebarStrand.Unbondings.Add(Unbonding2); 
if(!RebarStrand.Insert()) 
               Console.WriteLine("Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..RebarStrand 
See Also 
RebarStrand Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1705 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand Members 
RebarStrand Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarStrand type exposes the following members. 
Constructors 
  	Name	Description 
RebarStrand Initializes a new rebar strand instance with empty attributes. Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the strand instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
GetChildren	Returns an enumerator of all the 
children model objects. 


Methods	1706 






GetCoordinateSystem 



GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type 


Methods	1707 


Point Fields 








GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 





RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is 
faster to fetch multiple properties at once. 

Methods	1708 






GetStringUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the strand into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing strand in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the strand from the model database. The reinforcement identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, Int32)	Sets an integer property for the 
model object. 

Methods	1709 


Point Fields 



SetUserProperty(String, String) 





(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndPoint	The end point of the single strand (the start point and 
end point define the length of the strand). 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
FromPlaneOffset	Gets or sets the offset value from the part surface. 
(Inherited from Reinforcement.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the reinforcement. 
(Inherited from Reinforcement.) 
OnPlaneOffsets	Not supported. 
Patterns 

Properties	1710 


Point Fields 
An array list of polygons that represents the patterns 
of the rebar strand. Give the strand positions in the same order as for the first pattern. The maximum number of patterns is 20. 
PullPerStrand	The pull per strand (N). 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
StartPoint	The start point of the single strand (the start point and 
end point define the length of the strand). 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or 
StartPointOffsetType 


OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
Unbondings	An array list of StrandUnbondingData items. 
See Also 
RebarStrand Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1711 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand Constructor 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new rebar strand instance with empty attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarStrand() 
Visual Basic 
Public Sub New 
See Also 
RebarStrand Class 
RebarStrand Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1712 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand Methods 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarStrand type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the strand instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1713 










GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical 

Methods	1714 


Point Fields 




GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 







GetSolid 



GetStringReportProperties 



GetStringUserProperties 





points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 


Methods	1715 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the strand into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing strand in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the strand from the model database. The reinforcement identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 


Methods	1716 


Point Fields 

See Also 
RebarStrand Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1717 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Delete Method 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the strand instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1718 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Insert Method 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the strand into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1719 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Modify Method 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing strand in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1720 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Select Method 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the strand from the model database. The reinforcement identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1721 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand Properties 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The RebarStrand type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndPoint	The end point of the single strand (the start point and 
end point define the length of the strand). 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
FromPlaneOffset	Gets or sets the offset value from the part surface. 
(Inherited from Reinforcement.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 

Properties	1722 


Point Fields 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the reinforcement. 
(Inherited from Reinforcement.) 
OnPlaneOffsets	Not supported. 
An array list of polygons that represents the patterns 
of the rebar strand. Give the strand positions in the same order as for the first pattern. The maximum number of patterns is 20. 
PullPerStrand	The pull per strand (N). 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
StartPoint	The start point of the single strand (the start point and 
end point define the length of the strand). 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or 
StartPointOffsetType 


OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
Unbondings	An array list of StrandUnbondingData items. 
See Also 
RebarStrand Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1723 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..EndPoint Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The end point of the single strand (the start point and end point define the length of the strand). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; set; } 
Visual Basic 
Public Property EndPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1724 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..OnPlaneOffsets Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList OnPlaneOffsets { get; } 
Visual Basic 
Public ReadOnly Property OnPlaneOffsets As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1725 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Patterns Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
An array list of polygons that represents the patterns of the rebar strand. Give the strand positions in the same order as for the first pattern. The maximum number of patterns is 20. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Patterns { get; set; } 
Visual Basic 
Public Property Patterns As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1726 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..PullPerStrand Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The pull per strand (N). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double PullPerStrand { get; set; } 
Visual Basic 
Public Property PullPerStrand As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1727 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Size Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The size of the reinforcement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Size { get; set; } 
Visual Basic 
Public Property Size As String 
Get 
Set 
Property Value 
Type: String 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1728 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..StartPoint Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The start point of the single strand (the start point and end point define the length of the strand). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; set; } 
Visual Basic 
Public Property StartPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1729 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
RebarStrand..::..Unbondings Property 
RebarStrand Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

An array list of StrandUnbondingData items. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Unbondings { get; set; } 
Visual Basic 
Public Property Unbondings As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
RebarStrand Class 
RebarStrand Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1730 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ReferenceModel class contains methods related to reference models. A reference model is a reference of an external model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ReferenceModel : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ReferenceModel 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           ReferenceModel ReferenceModel = new ReferenceModel(); 
           ReferenceModel.Filename = "c:\\TeklaStructuresModels\\reference_model.dwg";            ReferenceModel.Scale = 1.0; 
bool Result = false; 
           Result = ReferenceModel.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..ReferenceModel 



Inheritance Hierarchy	1731 


Point Fields 

See Also 
ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1732 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Members 
ReferenceModel Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModel type exposes the following members. 
Constructors 
  	Name	Description 
Initializes a new instance of the ReferenceModel class. 

The default values are as follows: 

 Filename = string.Empty; 
ReferenceModel()()()() 






ReferenceModel(String, Point, Double) 


 ActiveFilePath = string.Empty; 
 ProjectGUID = Guid.Empty; 
 ModelGUID = Guid.Empty; 
 VersionGUID = Guid.Empty; 
 Position = new Point(); 
 Scale = 1.0; 
 Visibility = VisibilityEnum.VISIBLE; 
Initializes a new instance of the ReferenceModel class. Creates a new reference model instance using the given filename, position and scale. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model obje 
(Inherited from ModelObject.) 
Deletes the reference model with t given identifier. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model object 
are same. 

Methods	1733 







GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetConvertedObjects 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all properties for the mo object in one hashtable. Type for th returned value must be checked us type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the mo object in one hashtable. Type for th returned value must be checked us type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children reference model objects. (Overrides ModelObject..::..GetChildren()()()() 
Returns an enumerator of model object converted from the referenc model. 
Returns the coordinate system for  given model object. 
(Inherited from ModelObject.) 
GetCurrentRevision	Gets the current revision. 
Retrieves multiple double report properties for the model object. It i 
GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 


faster to fetch multiple properties  once. 
(Inherited from ModelObject.) 
Retrieves all double properties for  model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property fro the model object. 
(Inherited from ModelObject.) 
Returns the father component of th model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It i faster to fetch multiple properties  once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for 
model object. 

Methods	1734 








GetPhase 



Point Fields 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phas name, the phase comment and whether the phase is the current o or not). 
(Inherited from ModelObject.) 
Retrieves a double property of the 
GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of th report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetRevisions	Gets the reference models availabl 
revisions. 
Retrieves multiple string report properties for the model object. It i 
GetStringReportProperties 



GetStringUserProperties 


GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


Insert 


faster to fetch multiple properties  once. 
(Inherited from ModelObject.) 
Retrieves all string properties for t model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for t model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the reference model into th model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the reference model with  given identifier. 
(Overrides ModelObject..::..Modify()()()().) 
RefreshFile	Reload the reference file from the 
location specified by Filename. If t file has changed, a new revision wi 

Methods	1735 


Point Fields 
be created and taken into use. Not that if a new revision was successf created, the ActiveFilePath is chan 
Selects the reference model with t given identifier. 
(Overrides ModelObject..::..Select()()()().) 
SetAsCurrentRevision(ReferenceModel..::..Revision)	Sets the given revision as current 
revision. SetAsCurrentRevision(Int32, Int32)	Sets the given revision as current 
revision. 
Sets a dynamic string property for  
SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a n instance is created. The label is us in plug-ins for identifying the chan object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the mod 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the mo object. 
(Inherited from ModelObject.) 
Sets a string property for the mode object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
ActiveFilePath Gets the path to the local copy of the current revision of the 
reference model. 
Filename	The path to the original location of the reference file. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
ModelGUID	Obsolete. 
The ModelGUID of the reference model in the Project Center. Position	The position of the reference model. 
ProjectGUID	Obsolete. 
The ProjectGUID of the reference model in the Project Center. Scale	The scale of the reference model. 
Properties	1736 


Point Fields 
VersionGUID	Obsolete. 
The VersionGUID of the reference model in the Project Center. 
Visibility	The visibility of the reference model in the model view. 
See Also 
ReferenceModel Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	1737 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Constructor 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Initializes a new instance of the ReferenceModel class. 

The default values are as follows: 

 Filename = string.Empty; 
ReferenceModel()()()() 






ReferenceModel(String, Point, Double) 


 ActiveFilePath = string.Empty; 
 ProjectGUID = Guid.Empty; 
 ModelGUID = Guid.Empty; 
 VersionGUID = Guid.Empty; 
 Position = new Point(); 
 Scale = 1.0; 
 Visibility = VisibilityEnum.VISIBLE; 
Initializes a new instance of the ReferenceModel class. Creates a new reference model instance using the given filename, position and scale. 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1738 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Constructor 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the ReferenceModel class. 

The default values are as follows: 

 Filename = string.Empty; 
 ActiveFilePath = string.Empty; 
 ProjectGUID = Guid.Empty; 
 ModelGUID = Guid.Empty; 
 VersionGUID = Guid.Empty; 
 Position = new Point(); 
 Scale = 1.0; 
 Visibility = VisibilityEnum.VISIBLE; 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModel() 
Visual Basic 
Public Sub New 
See Also 
ReferenceModel Class 
ReferenceModel Members 
ReferenceModel Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1739 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Constructor (String, Point, Double) 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the ReferenceModel class. Creates a new reference model instance using the given filename, position and scale. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModel( 
string filename, 
Point position, 
double scale 
) 
Visual Basic 
Public Sub New (  
filename As String, 
position As Point, 
scale As Double 
) 
Parameters 

filename 
Type: System..::..String 
The filename to be used. 

position 
Type: Tekla.Structures.Geometry3d..::..Point The position to be used. 

scale 
Type: System..::..Double The scale to be used. 
See Also 
ReferenceModel Class ReferenceModel Members ReferenceModel Overload 

See Also	1740 


Point Fields 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














































See Also	1741 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Methods 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModel type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model obje 
(Inherited from ModelObject.) 
Deletes the reference model with t given identifier. 
Delete 


Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model object are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the mo object in one hashtable. Type for th returned value must be checked us type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the mo object in one hashtable. Type for th returned value must be checked us type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children reference model objects. (Overrides ModelObject..::..GetChildren()()()() 
Returns an enumerator of model object converted from the referenc model. 
GetCoordinateSystem	Returns the coordinate system for  
given model object. 

Methods	1742 


Point Fields 
(Inherited from ModelObject.) GetCurrentRevision	Gets the current revision. 
Retrieves multiple double report properties for the model object. It i 
GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 



GetPhase 



GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


faster to fetch multiple properties  once. 
(Inherited from ModelObject.) 
Retrieves all double properties for  model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property fro the model object. 
(Inherited from ModelObject.) 
Returns the father component of th model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It i faster to fetch multiple properties  once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phas name, the phase comment and whether the phase is the current o or not). 
(Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of th report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
GetRevisions	Gets the reference models availabl 
revisions. GetStringReportProperties	Retrieves multiple string report 
properties for the model object. It i 

Methods	1743 








GetStringUserProperties 



Point Fields 
faster to fetch multiple properties  once. 
(Inherited from ModelObject.) 
Retrieves all string properties for t model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


Insert 



Modify 




RefreshFile 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for t model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the reference model into th model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the reference model with  given identifier. 
(Overrides ModelObject..::..Modify()()()().) 
Reload the reference file from the location specified by Filename. If t file has changed, a new revision wi 
be created and taken into use. Not that if a new revision was successf created, the ActiveFilePath is chan 
Selects the reference model with t given identifier. 
(Overrides ModelObject..::..Select()()()().) 
SetAsCurrentRevision(ReferenceModel..::..Revision)	Sets the given revision as current 
revision. SetAsCurrentRevision(Int32, Int32)	Sets the given revision as current 
revision. 
Sets a dynamic string property for  
SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a n instance is created. The label is us in plug-ins for identifying the chan object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 

Methods	1744 






SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 

See Also 
ReferenceModel Class Tekla.Structures.Model Namespace 



Point Fields 
(Inherited from ModelObject.) 
Sets a double property for the mod object. 
(Inherited from ModelObject.) 
Sets an integer property for the mo object. 
(Inherited from ModelObject.) 
Sets a string property for the mode object. 
(Inherited from ModelObject.) 

Copyright  © Tekla 2013. All rights reserved. 
































See Also	1745 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Delete Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the reference model with the given identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1746 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..GetChildren Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the children reference model objects. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override ModelObjectEnumerator GetChildren() 
Visual Basic 
Public Overrides Function GetChildren As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
ReferenceModel Class 
ReferenceModel Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1747 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..GetConvertedObjects Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of model object converted from the reference model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetConvertedObjects() 
Visual Basic 
Public Function GetConvertedObjects As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
ReferenceModel Class 
ReferenceModel Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1748 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..GetCurrentRevision Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the current revision. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModel..::..Revision GetCurrentRevision() 
Visual Basic 
Public Function GetCurrentRevision As ReferenceModel..::..Revision 
Return Value 

Type: ReferenceModel..::..Revision 
[Missing <returns> documentation for "M:Tekla.Structures.Model.ReferenceModel.GetCurrentRevision"] 
See Also 
ReferenceModel Class 
ReferenceModel Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1749 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..GetRevisions Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the reference models available revisions. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public List<ReferenceModel..::..Revision> GetRevisions() 
Visual Basic 
Public Function GetRevisions As List(Of ReferenceModel..::..Revision) 
Return Value 

Type: List<(Of <(<'ReferenceModel..::..Revision>)>)> 
[Missing <returns> documentation for "M:Tekla.Structures.Model.ReferenceModel.GetRevisions"] 
See Also 
ReferenceModel Class 
ReferenceModel Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1750 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Insert Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the reference model into the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1751 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Modify Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the reference model with the given identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1752 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..RefreshFile Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Reload the reference file from the location specified by Filename. If the file has changed, a new revision will be created and taken into use. Note that if a new revision was successfully created, the ActiveFilePath is changed. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RefreshFile() 
Visual Basic 
Public Function RefreshFile As Boolean 
Return Value 

Type: Boolean 
true if a new revision was added, false if it was not. If false, the file can either be unchanged or there was an error. 
See Also 
ReferenceModel Class 
ReferenceModel Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1753 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Select Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the reference model with the given identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1754 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..SetAsCurrentRevision Method 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
SetAsCurrentRevision(ReferenceModel..::..Revision)	Sets the given revision as 
current revision. SetAsCurrentRevision(Int32, Int32)	Sets the given revision as 
current revision. 
See Also 
ReferenceModel Class 
ReferenceModel Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1755 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..SetAsCurrentRevision Method (ReferenceModel..::..Revision) ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the given revision as current revision. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetAsCurrentRevision( 
ReferenceModel..::..Revision revision 
) 
Visual Basic 
Public Function SetAsCurrentRevision (  
revision As ReferenceModel..::..Revision 
) As Boolean 
Parameters 

revision 
Type: Tekla.Structures.Model..::..ReferenceModel..::..Revision The revision to be set as current. 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.ReferenceModel.SetAsCurrentRevision(Tekla.Structures.Model.R 
See Also 
ReferenceModel Class 
ReferenceModel Members 
SetAsCurrentRevision Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1756 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..SetAsCurrentRevision Method (Int32, Int32) 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the given revision as current revision. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetAsCurrentRevision( 
int modelId, 
int revisionId 
) 
Visual Basic 
Public Function SetAsCurrentRevision (  
modelId As Integer, 
revisionId As Integer 
) As Boolean 
Parameters 

modelId 
Type: System..::..Int32 
The model id, which revision is to be changed. 

revisionId 
Type: System..::..Int32 
The revision to be set as current. 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.ReferenceModel.SetAsCurrentRevision(System.Int32,System.Int3 
See Also 
ReferenceModel Class 
ReferenceModel Members 
SetAsCurrentRevision Overload 

See Also	1757 


Point Fields 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














































See Also	1758 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel Properties 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModel type exposes the following members. 
Properties 
  	Name	Description 
ActiveFilePath Gets the path to the local copy of the current revision of the 
reference model. 
Filename	The path to the original location of the reference file. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
ModelGUID	Obsolete. 
The ModelGUID of the reference model in the Project Center. Position	The position of the reference model. 
ProjectGUID	Obsolete. 
The ProjectGUID of the reference model in the Project Center. Scale	The scale of the reference model. 
VersionGUID	Obsolete. 
The VersionGUID of the reference model in the Project Center. Visibility	The visibility of the reference model in the model view. 
See Also 
ReferenceModel Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	1759 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..ActiveFilePath Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the path to the local copy of the current revision of the reference model. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ActiveFilePath { get; } 
Visual Basic 
Public ReadOnly Property ActiveFilePath As String 
Get 
Property Value 
Type: String 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1760 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Filename Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The path to the original location of the reference file. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Filename { get; set; } 
Visual Basic 
Public Property Filename As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1761 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..ModelGUID Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelGUID of the reference model in the Project Center. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Does currently nothing. Will be removed in near future.")] public Guid ModelGUID { get; set; } 
Visual Basic 
<ObsoleteAttribute("Does currently nothing. Will be removed in near future.")>  Public Property ModelGUID As Guid 
Get 
Set 
Property Value 
Type: Guid 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1762 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Position Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The position of the reference model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Position { get; set; } 
Visual Basic 
Public Property Position As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1763 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..ProjectGUID Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ProjectGUID of the reference model in the Project Center. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Does currently nothing. Will be removed in near future.")] public Guid ProjectGUID { get; set; } 
Visual Basic 
<ObsoleteAttribute("Does currently nothing. Will be removed in near future.")>  Public Property ProjectGUID As Guid 
Get 
Set 
Property Value 
Type: Guid 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1764 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Scale Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The scale of the reference model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Scale { get; set; } 
Visual Basic 
Public Property Scale As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1765 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..VersionGUID Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The VersionGUID of the reference model in the Project Center. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Does currently nothing. Will be removed in near future.")] public Guid VersionGUID { get; set; } 
Visual Basic 
<ObsoleteAttribute("Does currently nothing. Will be removed in near future.")>  Public Property VersionGUID As Guid 
Get 
Set 
Property Value 
Type: Guid 
See Also 
ReferenceModel Class ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1766 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Visibility Property 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The visibility of the reference model in the model view. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModel..::..VisibilityEnum Visibility { get; set; } 
Visual Basic 
Public Property Visibility As ReferenceModel..::..VisibilityEnum 
Get 
Set 
Property Value 

Type: ReferenceModel..::..VisibilityEnum 
See Also 
ReferenceModel Class 
ReferenceModel Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1767 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Revision Structure 
ReferenceModel Class  Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Reference model revision. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public struct Revision 
Visual Basic 
Public Structure Revision 
See Also 
ReferenceModel..::..Revision Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1768 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Revision Members 
ReferenceModel..::..Revision Structure  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModel..::..Revision type exposes the following members. 
Constructors 
  	Name	Description 
ReferenceModel..::..Revision	Parameterized constructor. 
Properties 
  	Name	Description 
FileName	Gets the revision file name. 
Hash	Gets the revision hash identifier. 
Id	Gets the revision id. 
IsCurrentRevision	Gets the value indicating whether this revision is the current 
revision or not. 
ReferenceModelId Gets or sets the parent reference model id. 
Time	Gets the revision time. 
See Also 
ReferenceModel..::..Revision Structure 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1769 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Revision Constructor 
ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Parameterized constructor. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Revision( 
int referenceModelId, 
int id, 
DateTime time, 
string hash, 
string fileName, 
bool isCurrentRevision 
) 
Visual Basic 
Public Sub New (  
referenceModelId As Integer, 
id As Integer, 
time As DateTime, 
hash As String, 
fileName As String, 
isCurrentRevision As Boolean 
) 
Parameters 

referenceModelId 
Type: System..::..Int32 
[Missing <param name="referenceModelId"/> documentation for "M:Tekla.Structures.Model.ReferenceModel.Revision.#ctor(System.Int32,System.Int32 

id 
Type: System..::..Int32 
[Missing <param name="id"/> documentation for "M:Tekla.Structures.Model.ReferenceModel.Revision.#ctor(System.Int32,System.Int32 

time 
Type: System..::..DateTime 

Syntax	1770 


Point Fields 
[Missing <param name="time"/> documentation for "M:Tekla.Structures.Model.ReferenceModel.Revision.#ctor(System.Int32,System.Int32 

hash 
Type: System..::..String 
[Missing <param name="hash"/> documentation for "M:Tekla.Structures.Model.ReferenceModel.Revision.#ctor(System.Int32,System.Int32 

fileName 
Type: System..::..String 
[Missing <param name="fileName"/> documentation for "M:Tekla.Structures.Model.ReferenceModel.Revision.#ctor(System.Int32,System.Int32 

isCurrentRevision 
Type: System..::..Boolean 
[Missing <param name="isCurrentRevision"/> documentation for "M:Tekla.Structures.Model.ReferenceModel.Revision.#ctor(System.Int32,System.Int32 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	1771 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModel..::..Revision Properties 
ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModel..::..Revision type exposes the following members. 
Properties 
  	Name	Description 
FileName	Gets the revision file name. 
Hash	Gets the revision hash identifier. 
Id	Gets the revision id. 
IsCurrentRevision	Gets the value indicating whether this revision is the current 
revision or not. 
ReferenceModelId Gets or sets the parent reference model id. 
Time	Gets the revision time. 
See Also 
ReferenceModel..::..Revision Structure 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1772 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..Revision..::..FileName Property 
ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the revision file name. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string FileName { get; } 
Visual Basic 
Public ReadOnly Property FileName As String 
Get 
Property Value 

Type: String 
The revision file name. 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1773 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..Revision..::..Hash Property 
ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the revision hash identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Hash { get; } 
Visual Basic 
Public ReadOnly Property Hash As String 
Get 
Property Value 

Type: String 
The revision hash. 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1774 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..Revision..::..Id Property 
ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the revision id. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Id { get; } 
Visual Basic 
Public ReadOnly Property Id As Integer 
Get 
Property Value 

Type: Int32 
The revision id. 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1775 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..Revision..::..IsCurrentRevision Property ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the value indicating whether this revision is the current revision or not. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsCurrentRevision { get; } 
Visual Basic 
Public ReadOnly Property IsCurrentRevision As Boolean 
Get 
Property Value 

Type: Boolean 
The currentness of the revision. 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1776 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..Revision..::..ReferenceModelId Property ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the parent reference model id. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int ReferenceModelId { get; } 
Visual Basic 
Public ReadOnly Property ReferenceModelId As Integer 
Get 
Property Value 

Type: Int32 
The reference model id. 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1777 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..Revision..::..Time Property 
ReferenceModel..::..Revision Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the revision time. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DateTime Time { get; } 
Visual Basic 
Public ReadOnly Property Time As DateTime 
Get 
Property Value 
Type: DateTime 
The revision time. 
See Also 
ReferenceModel..::..Revision Structure ReferenceModel..::..Revision Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1778 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModel..::..VisibilityEnum Enumeration 
ReferenceModel Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The visibility type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum VisibilityEnum 
Visual Basic 
Public Enumeration VisibilityEnum 
Members 
Member name  Value	Description 
HIDDEN	0	The reference model is invisible in the model. VISIBLE	1	The reference model is visible in the model. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1779 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ReferenceModelObject class contains methods related to reference model objects. A reference model object is a subobject of a reference model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ReferenceModelObject : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ReferenceModelObject 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..ReferenceModelObject 
See Also 
ReferenceModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	1780 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Members 
ReferenceModelObject Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObject type exposes the following members. 
Constructors 
  	Name	Description 
ReferenceModelObject()()()()	Creates a new reference model 
object instance. 
ReferenceModelObject(Int32, 
Identifier) 

Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	At the moment reference objects cannot be deleted. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 

GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 

Methods	1781 


Point Fields 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFather	Returns the reference hierarchy father. 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetReferenceModel	Gets the reference model that the reference object 
belongs to. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Methods	1782 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 


Select 


SetDynamicStringProperty 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
At the moment reference objects cannot be inserted. 
(Overrides ModelObject..::..Insert()()()().) 
At the moment reference objects cannot be modified. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the reference model with the given identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
See Also 
ReferenceModelObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	1783 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Constructor 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
ReferenceModelObject()()()()	Creates a new reference model 
object instance. 
ReferenceModelObject(Int32, 
Identifier) 

See Also 
ReferenceModelObject Class ReferenceModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1784 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Constructor 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new reference model object instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModelObject() 
Visual Basic 
Public Sub New 
See Also 
ReferenceModelObject Class 
ReferenceModelObject Members 
ReferenceModelObject Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1785 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Constructor (Int32, Identifier) 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new reference model object instance using the given parameters. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModelObject( 
int ReferenceModelId, 
Identifier ID 
) 
Visual Basic 
Public Sub New (  
ReferenceModelId As Integer, 
ID As Identifier 
) 
Parameters 

ReferenceModelId 
Type: System..::..Int32 
The identifier of the reference model. 

ID 
Type: Tekla.Structures..::..Identifier 
The identifier for the new reference model object. 
See Also 
ReferenceModelObject Class 
ReferenceModelObject Members 
ReferenceModelObject Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1786 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Methods 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObject type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	At the moment reference objects cannot be deleted. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	1787 


Point Fields 
(Inherited from ModelObject.) 
GetFather	Returns the reference hierarchy father. 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetReferenceModel	Gets the reference model that the reference object 
belongs to. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 

Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
At the moment reference objects cannot be inserted. 
(Overrides ModelObject..::..Insert()()()().) 

Methods	1788 








Select 


SetDynamicStringProperty 



Point Fields 
At the moment reference objects cannot be modified. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the reference model with the given identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
ReferenceModelObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1789 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObject..::..Delete Method 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

At the moment reference objects cannot be deleted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
An exception. 
See Also 
ReferenceModelObject Class ReferenceModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1790 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObject..::..GetFather Method 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the reference hierarchy father. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModelObject GetFather() 
Visual Basic 
Public Function GetFather As ReferenceModelObject 
Return Value 

Type: ReferenceModelObject 
Reference to the graph father if such exists, or else an invalid object. 
See Also 
ReferenceModelObject Class 
ReferenceModelObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1791 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObject..::..GetReferenceModel Method 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the reference model that the reference object belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModel GetReferenceModel() 
Visual Basic 
Public Function GetReferenceModel As ReferenceModel 
Return Value 

Type: ReferenceModel 
The reference model on success, null otherwise. 
See Also 
ReferenceModelObject Class ReferenceModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1792 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObject..::..Insert Method 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

At the moment reference objects cannot be inserted. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
An exception. 
See Also 
ReferenceModelObject Class ReferenceModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1793 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObject..::..Modify Method 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

At the moment reference objects cannot be modified. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
An exception. 
See Also 
ReferenceModelObject Class ReferenceModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1794 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObject..::..Select Method 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the reference model with the given identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ReferenceModelObject Class ReferenceModelObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1795 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObject Properties 
ReferenceModelObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObject type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
See Also 
ReferenceModelObject Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	1796 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Reinforcement class represents a reinforcement in the model. A reinforcement can either be a mesh, a single rebar, a rebar group or a strand. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class Reinforcement : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class Reinforcement 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..BaseRebarGroup 
                Tekla.Structures.Model..::..RebarMesh 
                Tekla.Structures.Model..::..RebarStrand 
                Tekla.Structures.Model..::..SingleRebar 
See Also 
Reinforcement Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1797 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement Members 
Reinforcement Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Reinforcement type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the instance from the model 
Delete 


Equals 


GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


database. 
(Inherited from ModelObject.) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned 
value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned 
value must be checked using type casting. (Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the 
model object. 

Methods	1798 






GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 


GetIntegerReportProperties 



Point Fields 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetNumberOfRebars	Returns the number of rebars in the 
reinforcing group. 
Retrieves the phase of the model object (the phase number, the phase name, the phase 
GetPhase 



GetRebarGeometries 




GetRebarGeometriesWithoutClashes 



GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSingleRebar	Returns a single rebar inside the rebar 
group located by the given index. The 

Methods	1799 


Point Fields 
indexing starts from the start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group 
can be requested with GetNumberOfRebars(). 
Returns a single rebar inside the rebar 
group located by the given index. The indexing starts from the start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in 
the group can be requested with GetNumberOfRebars(). 
GetSolid	Method for getting the solid information of 
the reinforcement. 
Retrieves multiple string report properties for the model object. It is faster to fetch 
GetStringReportProperties 


GetStringUserProperties 


GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
IsGeometryValid	Tells whether the geometry of a 
reinforcement object is valid or not. 
Modifies the model instance in the model 
Modify 


Select 


database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 

Methods	1800 





SetDynamicStringProperty 



Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object 
in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) SetUserProperty(String, Double)	Sets a double property for the model object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, String)	Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Class	Gets or sets the class of the reinforcement. The class 
is used to group reinforcements. 
Gets or sets the type of the end point offset. The options are: 
EndPointOffsetType 
 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 
EndPointOffsetValue	Gets or sets the concrete cover thickness or leg length 
at the second end of the bar. 
Father	Gets or sets the father object of the reinforcement; the 
model object instance to operate on. 
FromPlaneOffset	Gets or sets the offset value from the part surface. 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
InputPointDeformingState Gets or sets the reinforcement input point deforming 
state. 
Name	Gets or sets the name of the reinforcement. 
NumberingSeries	Gets or sets the numbering series of the 
reinforcement. 

Properties	1801 


Point Fields 
OnPlaneOffsets	Gets or sets the double offset value for each leg on the 
same plane as the bar. 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
StartPointOffsetValue	Gets or sets the concrete cover thickness or leg length 
at the first end of the bar. 
See Also 
Reinforcement Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	1802 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement Methods 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Reinforcement type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the instance from the model 
Delete 


Equals 


GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


database. 
(Inherited from ModelObject.) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned 
value must be checked using type casting. (Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned 
value must be checked using type casting. (Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the 
model object. 

Methods	1803 






GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 


GetIntegerReportProperties 



Point Fields 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
GetNumberOfRebars	Returns the number of rebars in the 
reinforcing group. 
Retrieves the phase of the model object (the phase number, the phase name, the phase 
GetPhase 



GetRebarGeometries 




GetRebarGeometriesWithoutClashes 



GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSingleRebar	Returns a single rebar inside the rebar 
group located by the given index. The 

Methods	1804 


Point Fields 
indexing starts from the start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group 
can be requested with GetNumberOfRebars(). 
Returns a single rebar inside the rebar 
group located by the given index. The indexing starts from the start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in 
the group can be requested with GetNumberOfRebars(). 
GetSolid	Method for getting the solid information of 
the reinforcement. 
Retrieves multiple string report properties for the model object. It is faster to fetch 
GetStringReportProperties 


GetStringUserProperties 


GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 


multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the model object instance into the model database. 
(Inherited from ModelObject.) 
IsGeometryValid	Tells whether the geometry of a 
reinforcement object is valid or not. 
Modifies the model instance in the model 
Modify 


Select 


database. 
(Inherited from ModelObject.) 
Selects the model object instance from the model database. 
(Inherited from ModelObject.) 

Methods	1805 





SetDynamicStringProperty 



Point Fields 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object 
in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) SetUserProperty(String, Double)	Sets a double property for the model object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, String)	Sets a string property for the model object. 
(Inherited from ModelObject.) 
See Also 
Reinforcement Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

























See Also	1806 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..GetNumberOfRebars Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the number of rebars in the reinforcing group. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int GetNumberOfRebars() Visual Basic 
Public Function GetNumberOfRebars As Integer 
Return Value 

Type: Int32 
The number of rebars in the rebar group. 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1807 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..GetRebarGeometries Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetRebarGeometries( 
bool withHooks 
) 
Visual Basic 
Public Function GetRebarGeometries (  
withHooks As Boolean 
) As ArrayList 
Parameters 

withHooks 
Type: System..::..Boolean 
A parameter to determine whether the hook points should be included in the rebar geometry or not. 

Return Value 

Type: ArrayList 
An array list that contains the RebarGeometry objects. 
See Also 
Reinforcement Class 
Reinforcement Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1808 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..GetRebarGeometriesWithoutClashes Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetRebarGeometriesWithoutClashes( 
bool withHooks 
) 
Visual Basic 
Public Function GetRebarGeometriesWithoutClashes (  
withHooks As Boolean 
) As ArrayList 
Parameters 

withHooks 
Type: System..::..Boolean 
A parameter to determine whether the hook points should be included in the rebar geometry or not. 

Return Value 

Type: ArrayList 
An array list that contains the RebarGeometry objects. 
See Also 
Reinforcement Class 
Reinforcement Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1809 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..GetSingleRebar Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarGeometry GetSingleRebar( 
int index, 
bool withHooks 
) 
Visual Basic 
Public Function GetSingleRebar (  
index As Integer, 
withHooks As Boolean 
) As RebarGeometry 
Parameters 

index 
Type: System..::..Int32 
The index of the rebar in the group. 

withHooks 
Type: System..::..Boolean 
A parameter to determine whether the hook points should be included in the rebar geometry or not. 

Return Value 

Type: RebarGeometry 
The instance of a RebarGeometry object that contains the point list of the single physical reinforcing bar. Null if the given index was not valid. 




Syntax	1810 


Point Fields 

See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	1811 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..GetSingleRebarWithoutClash Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarGeometry GetSingleRebarWithoutClash( 
int index, 
bool withHooks 
) 
Visual Basic 
Public Function GetSingleRebarWithoutClash (  
index As Integer, 
withHooks As Boolean 
) As RebarGeometry 
Parameters 

index 
Type: System..::..Int32 
The index of the rebar in the group. 

withHooks 
Type: System..::..Boolean 
A parameter to determine whether the hook points should be included in the rebar geometry or not. 

Return Value 

Type: RebarGeometry 
The instance of a RebarGeometry object that contains the point list of the single physical reinforcing bar. Null if the given index was not valid. 




Syntax	1812 


Point Fields 

See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	1813 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement..::..GetSolid Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Method for getting the solid information of the reinforcement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Solid GetSolid() 
Visual Basic 
Public Function GetSolid As Solid 
Return Value 

Type: Solid 
The solid instance of the reinforcement. 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1814 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..IsGeometryValid Method 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Tells whether the geometry of a reinforcement object is valid or not. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsGeometryValid() Visual Basic 
Public Function IsGeometryValid As Boolean 
Return Value 

Type: Boolean 
True if the geometry of the reinforcement is valid, false otherwise. 
See Also 
Reinforcement Class 
Reinforcement Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1815 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement Properties 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Reinforcement type exposes the following members. 
Properties 
  	Name	Description 
Class	Gets or sets the class of the reinforcement. The class 
is used to group reinforcements. 
Gets or sets the type of the end point offset. The options are: 
EndPointOffsetType 
 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 
EndPointOffsetValue	Gets or sets the concrete cover thickness or leg length 
at the second end of the bar. 
Father	Gets or sets the father object of the reinforcement; the 
model object instance to operate on. 
FromPlaneOffset	Gets or sets the offset value from the part surface. 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, 
such as the weldability or surface deformations of the bar. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
InputPointDeformingState Gets or sets the reinforcement input point deforming 
state. 
Name	Gets or sets the name of the reinforcement. 
NumberingSeries	Gets or sets the numbering series of the 
reinforcement. 
OnPlaneOffsets	Gets or sets the double offset value for each leg on the 
same plane as the bar. 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 

Properties	1816 


Point Fields 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
StartPointOffsetValue	Gets or sets the concrete cover thickness or leg length 
at the first end of the bar. 
See Also 
Reinforcement Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	1817 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement..::..Class Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Class { get; set; } 
Visual Basic 
Public Property Class As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1818 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..EndPointOffsetType Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the type of the end point offset. The options are: 

 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Reinforcement..::..RebarOffsetTypeEnum EndPointOffsetType { get; set; } 
Visual Basic 
Public Property EndPointOffsetType As Reinforcement..::..RebarOffsetTypeEnum 
Get 
Set 
Property Value 

Type: Reinforcement..::..RebarOffsetTypeEnum 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1819 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..EndPointOffsetValue Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EndPointOffsetValue { get; set; } 
Visual Basic 
Public Property EndPointOffsetValue As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1820 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement..::..Father Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject Father { get; set; } 
Visual Basic 
Public Property Father As ModelObject 
Get 
Set 
Property Value 

Type: ModelObject 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1821 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..FromPlaneOffset Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the offset value from the part surface. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public virtual double FromPlaneOffset { get; set; } 
Visual Basic 
Public Overridable Property FromPlaneOffset As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1822 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement..::..Grade Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Grade { get; set; } 
Visual Basic 
Public Property Grade As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1823 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..InputPointDeformingState Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the reinforcement input point deforming state. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DeformingType InputPointDeformingState { get; set; } 
Visual Basic 
Public Property InputPointDeformingState As DeformingType 
Get 
Set 
Property Value 

Type: DeformingType 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1824 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement..::..Name Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the name of the reinforcement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1825 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..NumberingSeries Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the numbering series of the reinforcement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public NumberingSeries NumberingSeries { get; set; } 
Visual Basic 
Public Property NumberingSeries As NumberingSeries 
Get 
Set 
Property Value 

Type: NumberingSeries 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1826 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..OnPlaneOffsets Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the double offset value for each leg on the same plane as the bar. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList OnPlaneOffsets { get; set; } 
Visual Basic 
Public Property OnPlaneOffsets As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1827 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Reinforcement..::..RadiusValues Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the radius value(s) of the bends in the bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList RadiusValues { get; set; } 
Visual Basic 
Public Property RadiusValues As ArrayList 
Get 
Set 
Property Value 
Type: ArrayList 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1828 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..StartPointOffsetType Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or OFFSET_TYPE_COVER_THICKNESS. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Reinforcement..::..RebarOffsetTypeEnum StartPointOffsetType { get; set; } 
Visual Basic 
Public Property StartPointOffsetType As Reinforcement..::..RebarOffsetTypeEnum 
Get 
Set 
Property Value 

Type: Reinforcement..::..RebarOffsetTypeEnum 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1829 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..StartPointOffsetValue Property 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double StartPointOffsetValue { get; set; } 
Visual Basic 
Public Property StartPointOffsetValue As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Reinforcement Class 
Reinforcement Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1830 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Reinforcement..::..RebarOffsetTypeEnum Enumeration 
Reinforcement Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different types of offsets. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum RebarOffsetTypeEnum 
Visual Basic 
Public Enumeration RebarOffsetTypeEnum 
Members 
Member name	Value		Description OFFSET_TYPE_COVER_THICKNESS 0	The concrete cover thickness. 
OFFSET_TYPE_LEG_LENGTH	1	The leg length. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1831 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Seam class represents a seam. A seam is something that connects a main part to other parts along an edge. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Seam : BaseComponent 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Seam 
Inherits BaseComponent 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using Tekla.Structures; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           Beam B1 = new Beam(new Point(15000,3000,0), new Point(21000,3000,0));            B1.Profile.ProfileString = "780*380"; 
           B1.Material.MaterialString = "K40-1"; 
           B1.Class = "5"; 
           B1.Position.Plane = Position.PlaneEnum.MIDDLE; 
           B1.Position.Rotation = Position.RotationEnum.TOP; 
           B1.Position.Depth = Position.DepthEnum.BEHIND; 
           Beam B2 = new Beam(new Point(15000,3000,0), new Point(21000,3000,0));            B2.Profile.ProfileString = "780*380"; 
           B2.Material.MaterialString = "K40-1"; 
           B2.Class = "6"; 
           B2.Position.Plane = Position.PlaneEnum.MIDDLE; 
           B2.Position.Rotation = Position.RotationEnum.TOP; 
           B2.Position.Depth = Position.DepthEnum.FRONT; 


Examples	1832 


Point Fields 
           B1.Insert(); 
           B2.Insert(); 
           Seam S = new Seam(); 
           S.Name = "seamdm"; 
           S.Number = -1; 
           S.LoadAttributesFromFile("standard"); 
           S.UpVector = new Vector(0,0,0); 
           S.AutoDirectionType = AutoDirectionTypeEnum.AUTODIR_BASIC;            S.AutoPosition = true; 
           S.SetPrimaryObject(B1); 
           S.SetSecondaryObject(B2); 
           S.SetInputPositions(new Point(15000,3000,0), new Point(21000,3000,0)); 
if(!S.Insert()) 
               Console.WriteLine("Seam Insert failed"); 
else 
               Console.WriteLine(S.Identifier.ID); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseComponent                 Tekla.Structures.Model..::..Seam 
See Also 
Seam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	1833 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Seam Members 
Seam Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Seam type exposes the following members. 
Constructors 
  	Name	Description 
Seam	Creates a new seam instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the seam instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
GetAttribute(String, Int32%) Retrieves the attribute with the given name. 
(Inherited from BaseComponent.) 
GetAttribute(String, 
String%) 



Methods	1834 







GetCoordinateSystem 



Point Fields 
objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. 
(Inherited from ModelObject.) 
GetInputPolygon	Returns the input polygon of the seam. 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetPrimaryObject	Returns the primary object. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSecondaryObjects	Returns an array list containing all the secondary 
objects. 
GetStartAndEndPositions	Returns the start and end points of the seam. 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties 

Methods	1835 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the seam into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing seam in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a seam from the model database. The seam ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
SetInputPolygon	Sets the input polygon of the seam. 
SetInputPositions	Sets the start and end point of the seam. 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetPrimaryObject	Sets the primary object. 
SetSecondaryObject	Sets the secondary object of the seam. Use this 
method if you wish to add only one secondary object 

Methods	1836 


Point Fields 
to the seam. SetSecondaryObjects	Sets the secondary objects. 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AutoDirectionType The auto direction type. 
The auto position type. Defines that the seam will internally evaluate the final position more accurately. The input positions are still needed for reference. 
Class	The class of the seam. 
The code of the seam. The code can be used to classify the seam. The code can be reported and shown in drawings. The maximum length of the string is 20 characters. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom 
Name 



Number 


components or plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
The read only status of the seam. The status can be reported and shown in drawings. The color of the connection symbol in the model indicates the status of the seam. 
UpVector	A vector indicating which direction is considered the up 
direction for the seam. 
See Also 
Seam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1837 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam Constructor 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new seam instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Seam() 
Visual Basic 
Public Sub New 
See Also 
Seam Class 
Seam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1838 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Seam Methods 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Seam type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the seam instance with the given ID from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Retrieves the attribute with the given name. (Inherited from BaseComponent.) 
GetAttribute(String, Int32%) Retrieves the attribute with the given name. 
(Inherited from BaseComponent.) 
GetAttribute(String, 
String%) 
Returns an enumerator of all the children model 
GetChildren 


GetCoordinateSystem 


objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 


Methods	1839 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. 
(Inherited from ModelObject.) 
GetInputPolygon	Returns the input polygon of the seam. 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
GetPrimaryObject	Returns the primary object. 
GetReportProperty(String, 
Double%) 
Retrieves an integer property of the report for the 
GetReportProperty(String, Int32%) 


model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSecondaryObjects	Returns an array list containing all the secondary 
objects. 
GetStartAndEndPositions	Returns the start and end points of the seam. 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. 

Methods	1840 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 




LoadAttributesFromFile 




Modify 



Point Fields 
(Inherited from ModelObject.) 

Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts the seam into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Loads the attributes for the component from the given file. These attributes will be loaded before all the attributes that have been set with the SetAttribute methods, so any attributes that are set with SetAttribute will override those loaded from the given standard file. 
(Inherited from BaseComponent.) 
Modifies the existing seam in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a seam from the model database. The seam ID must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetAttribute(String, Double)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, Int32)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetAttribute(String, String)	Sets the attribute's value to the given value. 
(Inherited from BaseComponent.) SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
SetInputPolygon	Sets the input polygon of the seam. 
SetInputPositions	Sets the start and end point of the seam. 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetPrimaryObject	Sets the primary object. 
Sets the secondary object of the seam. Use this method if you wish to add only one secondary object to the seam. 
SetSecondaryObjects	Sets the secondary objects. 
SetUserProperty(String, 
Double) 

Methods	1841 




SetUserProperty(String, Int32) 
SetUserProperty(String, String) 



Point Fields 
Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Seam Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	1842 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Delete Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the seam instance with the given ID from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1843 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..GetInputPolygon Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns the input polygon of the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon GetInputPolygon() 
Visual Basic 
Public Function GetInputPolygon As Polygon 
Return Value 

Type: Polygon 
The input polygon of the seam instance. 
See Also 
Seam Class 
Seam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1844 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..GetPrimaryObject Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the primary object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject GetPrimaryObject() 
Visual Basic 
Public Function GetPrimaryObject As ModelObject 
Return Value 
Type: ModelObject 
The primary object. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1845 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..GetSecondaryObjects Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an array list containing all the secondary objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList GetSecondaryObjects() 
Visual Basic 
Public Function GetSecondaryObjects As ArrayList 
Return Value 

Type: ArrayList 
An array list containing the secondary objects. 
See Also 
Seam Class 
Seam Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1846 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Seam..::..GetStartAndEndPositions Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the start and end points of the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetStartAndEndPositions( 
ref Point StartPoint, 
ref Point EndPoint 
) 
Visual Basic 
Public Function GetStartAndEndPositions (  
ByRef StartPoint As Point, 
ByRef EndPoint As Point 
) As Boolean 
Parameters 

StartPoint 
Type: Tekla.Structures.Geometry3d..::..Point% 
The start point of the seam. 

EndPoint 
Type: Tekla.Structures.Geometry3d..::..Point% 
The end point of the seam. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1847 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Insert Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the seam into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1848 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Modify Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing seam in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1849 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Select Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a seam from the model database. The seam ID must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1850 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..SetInputPolygon Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the input polygon of the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetInputPolygon( 
Polygon InputPolygon 
) 
Visual Basic 
Public Function SetInputPolygon (  
InputPolygon As Polygon 
) As Boolean 
Parameters 

InputPolygon 
Type: Tekla.Structures.Model..::..Polygon 
The input polygon of the seam. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1851 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..SetInputPositions Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the start and end point of the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetInputPositions( 
Point StartPoint, 
Point EndPoint 
) 
Visual Basic 
Public Function SetInputPositions (  
StartPoint As Point, 
EndPoint As Point 
) As Boolean 
Parameters 

StartPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The start point of the seam. 

EndPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The end point of the seam. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1852 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..SetPrimaryObject Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the primary object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetPrimaryObject( 
ModelObject M 
) 
Visual Basic 
Public Function SetPrimaryObject (  
M As ModelObject 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..ModelObject The primary object. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1853 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..SetSecondaryObject Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets the secondary object of the seam. Use this method if you wish to add only one secondary object to the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetSecondaryObject( 
ModelObject M 
) 
Visual Basic 
Public Function SetSecondaryObject (  
M As ModelObject 
) As Boolean 
Parameters 

M 
Type: Tekla.Structures.Model..::..ModelObject The secondary object. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1854 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..SetSecondaryObjects Method 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the secondary objects. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetSecondaryObjects( 
ArrayList Secondaries 
) 
Visual Basic 
Public Function SetSecondaryObjects (  
Secondaries As ArrayList 
) As Boolean 
Parameters 

Secondaries 
Type: System.Collections..::..ArrayList 
An array list containing all the secondary objects. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1855 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Seam Properties 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Seam type exposes the following members. 
Properties 
  	Name	Description 
AutoDirectionType The auto direction type. 
The auto position type. Defines that the seam will internally evaluate the final position more accurately. The input positions are still needed for reference. 
Class	The class of the seam. 
The code of the seam. The code can be used to classify the seam. The code can be reported and shown in drawings. The maximum length of the string is 20 characters. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
The name of the component. The name identifies custom 
Name 



Number 


components or plug-ins. 
(Inherited from BaseComponent.) 
The number of the component. A number greater than zero identifies system components, for custom components the number is CUSTOM_OBJECT_NUMBER, and for plug-ins the number is PLUGIN_OBJECT_NUMBER. 
(Inherited from BaseComponent.) 
The read only status of the seam. The status can be reported and shown in drawings. The color of the connection symbol in the model indicates the status of the seam. 
UpVector	A vector indicating which direction is considered the up 
direction for the seam. 
See Also 
Seam Class 
Tekla.Structures.Model Namespace 

See Also	1856 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1857 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..AutoDirectionType Property 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The auto direction type. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AutoDirectionTypeEnum AutoDirectionType { get; set; } 
Visual Basic 
Public Property AutoDirectionType As AutoDirectionTypeEnum 
Get 
Set 
Property Value 

Type: AutoDirectionTypeEnum 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1858 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..AutoPosition Property 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The auto position type. Defines that the seam will internally evaluate the final position more accurately. The input positions are still needed for reference. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AutoPosition { get; set; } 
Visual Basic 
Public Property AutoPosition As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1859 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Class Property 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The class of the seam. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Class { get; set; } 
Visual Basic 
Public Property Class As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1860 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Code Property 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The code of the seam. The code can be used to classify the seam. The code can be reported and shown in drawings. The maximum length of the string is 20 characters. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Code { get; set; } 
Visual Basic 
Public Property Code As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1861 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..Status Property 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The read only status of the seam. The status can be reported and shown in drawings. The color of the connection symbol in the model indicates the status of the seam. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ConnectionStatusEnum Status { get; } 
Visual Basic 
Public ReadOnly Property Status As ConnectionStatusEnum 
Get 
Property Value 

Type: ConnectionStatusEnum 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1862 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Seam..::..UpVector Property 
Seam Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A vector indicating which direction is considered the up direction for the seam. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector UpVector { get; set; } 
Visual Basic 
Public Property UpVector As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Seam Class 
Seam Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1863 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SingleRebar class represents a single reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class SingleRebar : Reinforcement 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class SingleRebar 
Inherits Reinforcement 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam = new Beam(new Point(5000, 7000, 0), new Point(6000, 7000, 0));            Beam.Profile.ProfileString = "250*250"; 
           Beam.Material.MaterialString = "K40-1"; 
           Beam.Finish = "PAINT"; 
           Beam.Insert(); 
double MinimumY = Beam.GetSolid().MinimumPoint.Y; double MinimumX = Beam.GetSolid().MinimumPoint.X; double MinimumZ = Beam.GetSolid().MinimumPoint.Z; double MaximumY = Beam.GetSolid().MaximumPoint.Y; double MaximumX = Beam.GetSolid().MaximumPoint.X; double MaximumZ = Beam.GetSolid().MaximumPoint.Z; 
           Polygon Polygon = new Polygon(); 
           Polygon.Points.Add(new Point(MinimumX, MaximumY, MaximumZ));            Polygon.Points.Add(new Point(MaximumX, MaximumY, MaximumZ)); 

Examples	1864 


Point Fields 

           SingleRebar SingleRebar = new SingleRebar(); 
           SingleRebar.Polygon = Polygon; 
           SingleRebar.Father = Beam; 
           SingleRebar.Name = "SingleRebar"; 
           SingleRebar.Class = 9; 
           SingleRebar.Size = "12"; 
           SingleRebar.NumberingSeries.StartNumber = 0; 
           SingleRebar.NumberingSeries.Prefix = "Single"; 
           SingleRebar.Grade = "A500HW"; 
           SingleRebar.OnPlaneOffsets = new ArrayList(); 
           SingleRebar.OnPlaneOffsets.Add(25.00); 
           SingleRebar.StartHook.Angle = -90; 
           SingleRebar.StartHook.Length = 10; 
           SingleRebar.StartHook.Radius = 10; 
           SingleRebar.StartHook.Shape = RebarHookData.RebarHookShapeEnum.CUSTOM_HOOK;                  SingleRebar.EndHook.Angle = 90; 
           SingleRebar.EndHook.Length = 10; 
           SingleRebar.EndHook.Radius = 10; 
           SingleRebar.EndHook.Shape = RebarHookData.RebarHookShapeEnum.CUSTOM_HOOK; 
if(!SingleRebar.Insert()) 
               Console.WriteLine("Insert failed!"); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..Reinforcement 
                Tekla.Structures.Model..::..SingleRebar 
See Also 
SingleRebar Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1865 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar Members 
SingleRebar Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SingleRebar type exposes the following members. 
Constructors 
  	Name	Description 
SingleRebar Initializes a new single rebar instance with empty attributes. Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the single rebar instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
GetChildren	Returns an enumerator of all the 
children model objects. 


Methods	1866 






GetCoordinateSystem 



GetDoubleReportProperties 



GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type 


Methods	1867 


Point Fields 








GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 





RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
GetStringReportProperties	Retrieves multiple string report properties for the model object. It is 
faster to fetch multiple properties at once. 

Methods	1868 






GetStringUserProperties 



Point Fields 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the 
GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 


model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the single rebar into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing single rebar in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a single rebar from the model database. The reinforcement 
identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, Int32)	Sets an integer property for the 
model object. 

Methods	1869 


Point Fields 



SetUserProperty(String, String) 





(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndHook	The hook at the end of the reinforcing bar. 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
FromPlaneOffset	Gets or sets the offset value from the part surface. 
(Inherited from Reinforcement.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


OnPlaneOffsets 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 

Properties	1870 


Point Fields 
Polygon	The polygon of the reinforcing bar. 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
StartHook	The hook at the beginning of the reinforcing bar. 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or 
StartPointOffsetType 


StartPointOffsetValue 


OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
See Also 
SingleRebar Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





























See Also	1871 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar Constructor 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new single rebar instance with empty attributes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SingleRebar() 
Visual Basic 
Public Sub New 
See Also 
SingleRebar Class 
SingleRebar Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1872 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar Methods 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SingleRebar type exposes the following members. 
Methods 
  	Name	Description 
Compares Identifiers of model 
CompareTo 



Delete 



Equals 



GetAllReportProperties 




GetAllUserProperties 



GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


objects. 
(Inherited from ModelObject.) 
Deletes the single rebar instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked 
using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. (Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1873 










GetDoubleUserProperties 


GetDynamicStringProperty 


GetFatherComponent 


GetHierarchicObjects 



GetIntegerReportProperties 



GetIntegerUserProperties 


GetNumberOfRebars 



GetPhase 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected hierarchic objects. (Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Returns the number of rebars in the reinforcing group. 
(Inherited from Reinforcement.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a list of physical reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar. (Inherited from Reinforcement.) 
GetRebarGeometriesWithoutClashes	Retrieves a list of physical 
reinforcing bars (of type RebarGeometry). These objects contain physical points in the 3D space of each reinforcing bar as shown in model view. In case rebar polygon clashes with itself, physical 

Methods	1874 


Point Fields 




GetReportProperty(String, Double%) 


GetReportProperty(String, Int32%) 


GetReportProperty(String, String%) 






GetSingleRebar 











GetSingleRebarWithoutClash 







GetSolid 



GetStringReportProperties 



GetStringUserProperties 





points are moved to avoid clashing. (Inherited from Reinforcement.) 
Retrieves a double property of the report for the model object. (Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. (Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. (Inherited from ModelObject.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical points in the 3D space of the bar. The method returns null on 
error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). (Inherited from Reinforcement.) 
Returns a single rebar inside the rebar group located by the given index. The indexing starts from the 
start point. The rebar represents a physical reinforcing bar and contains physical, non-clashing points in the 3D space of the bar. The method returns null on error, for example if given an erroneous index. The number of rebars in the group can be requested with GetNumberOfRebars(). 
(Inherited from Reinforcement.) 
Method for getting the solid information of the reinforcement. (Inherited from Reinforcement.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 


Methods	1875 


Point Fields 

GetUserProperty(String, Double%) 


GetUserProperty(String, Int32%) 


GetUserProperty(String, String%) 



Insert 



IsGeometryValid 



Modify 




Select 



SetDynamicStringProperty 





Retrieves a double property for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. 
(Inherited from ModelObject.) 
Inserts the single rebar into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Tells whether the geometry of a reinforcement object is valid or not. (Inherited from Reinforcement.) 
Modifies the existing single rebar in the model database to match the current one. 
(Overrides ModelObject..::..Modify()()()().) 
Selects a single rebar from the model database. The reinforcement 
identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the 
changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
Sets a double property for the model 
SetUserProperty(String, Double) 


SetUserProperty(String, Int32) 


SetUserProperty(String, String) 


object. 
(Inherited from ModelObject.) 
Sets an integer property for the model object. 
(Inherited from ModelObject.) 
Sets a string property for the model object. 
(Inherited from ModelObject.) 


Methods	1876 


Point Fields 

See Also 
SingleRebar Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1877 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..Delete Method 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the single rebar instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1878 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..Insert Method 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the single rebar into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1879 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..Modify Method 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing single rebar in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1880 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..Select Method 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a single rebar from the model database. The reinforcement identifier must be set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1881 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar Properties 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SingleRebar type exposes the following members. 
Properties 
  	Name	Description 
Gets or sets the class of the reinforcement. The class is used to group reinforcements. 
(Inherited from Reinforcement.) 
EndHook	The hook at the end of the reinforcing bar. 
Gets or sets the type of the end point offset. The options are: 

EndPointOffsetType 




EndPointOffsetValue 



 OFFSET_TYPE_LEG_LENGTH 
 OFFSET_TYPE_COVER_THICKNESS 

(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the second end of the bar. 
(Inherited from Reinforcement.) 
Gets or sets the father object of the reinforcement; the model object instance to operate on. 
(Inherited from Reinforcement.) 
FromPlaneOffset	Gets or sets the offset value from the part surface. 
(Inherited from Reinforcement.) 
Gets or sets the steel grade of the reinforcing bar. The grade indicates the strength of the steel used in reinforcing bars. It can also indicate other factors, such as the weldability or surface deformations of the bar. 
(Inherited from Reinforcement.) 
Identifier	The identifier of the object. 
(Inherited from Object.) 
InputPointDeformingState 

Properties	1882 


Point Fields 
Gets or sets the reinforcement input point deforming state. 
(Inherited from Reinforcement.) 
Name	Gets or sets the name of the reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the numbering series of the 
NumberingSeries 


reinforcement. 
(Inherited from Reinforcement.) 
Gets or sets the double offset value for each leg on the same plane as the bar. 
(Inherited from Reinforcement.) 
Polygon	The polygon of the reinforcing bar. 
RadiusValues	Gets or sets the radius value(s) of the bends in the bar. 
(Inherited from Reinforcement.) 
Size	The size of the reinforcement. 
StartHook	The hook at the beginning of the reinforcing bar. 
Gets or sets the type of the start point offset is either OFFSET_TYPE_LEG_LENGTH or 
StartPointOffsetType 


StartPointOffsetValue 


OFFSET_TYPE_COVER_THICKNESS. 
(Inherited from Reinforcement.) 
Gets or sets the concrete cover thickness or leg length at the first end of the bar. 
(Inherited from Reinforcement.) 
See Also 
SingleRebar Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	1883 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..EndHook Property 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hook at the end of the reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData EndHook { get; set; } 
Visual Basic 
Public Property EndHook As RebarHookData 
Get 
Set 
Property Value 

Type: RebarHookData 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1884 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..Polygon Property 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The polygon of the reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Polygon Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Polygon 
Get 
Set 
Property Value 
Type: Polygon 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1885 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..Size Property 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The size of the reinforcement. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Size { get; set; } 
Visual Basic 
Public Property Size As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1886 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SingleRebar..::..StartHook Property 
SingleRebar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The hook at the beginning of the reinforcing bar. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public RebarHookData StartHook { get; set; } 
Visual Basic 
Public Property StartHook As RebarHookData 
Get 
Set 
Property Value 

Type: RebarHookData 
See Also 
SingleRebar Class 
SingleRebar Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1887 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Solid class represents the physical object in the model created by a part instance. A solid instance can be used to query the actual geometry of the part and intersect that geometry with, for example, lines and planes. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Solid : ISolid 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Solid 
Implements ISolid 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Solid; 
using Tekla.Structures.Geometry3d; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
    { 
        Beam MyPart = new Beam(); 
        ArrayList MyList = new ArrayList(); 
        ArrayList MyFaceNormalList = new ArrayList(); 
        Solid Solid = MyPart.GetSolid(); 
        FaceEnumerator MyFaceEnum = Solid.GetFaceEnumerator(); 
while (MyFaceEnum.MoveNext()) 
        { 
            Face MyFace = MyFaceEnum.Current as Face; 
if (MyFace != null) 
            { 
                MyFaceNormalList.Add(MyFace.Normal); 
                LoopEnumerator MyLoopEnum = MyFace.GetLoopEnumerator(); 
while (MyLoopEnum.MoveNext()) 

Examples	1888 


Point Fields 
                { 
                    Loop MyLoop = MyLoopEnum.Current as Loop; 
if (MyLoop != null) 
                    { 
                        VertexEnumerator MyVertexEnum = MyLoop.GetVertexEnumerator() as VertexEnu 
while (MyVertexEnum.MoveNext()) 
                        { 
                            Point MyVertex = MyVertexEnum.Current as Point; 
if (MyVertex != null) 
                            { 
                                MyList.Add(MyVertex); 
                            } 
                        } 
                    } 
                } 
            } 
        } 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Solid 
See Also 
Solid Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1889 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Solid Members 
Solid Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Solid type exposes the following members. 
Methods 
  	Name	Description 
Used to get all the intersection points between the solid and a plane. Does not arrange the points into polygons, thus a lot faster. 
GetCutPart	Returns a shell enumerator for the solid th at results 
cutting this solid with the given solid. GetEdgeEnumerator	Returns a new edge enumerator in the current plane. 
GetFaceEnumerator	Returns a new face enumerator in the current plane. Intersect(LineSegment)	Returns a list of line - solid intersection points. Intersect(Point, Point)	Returns a list of line - solid intersection points. 
Obsolete. 
Returns a list of plane - solid intersection points. The 
Intersect(Point, Point, Point) 



IntersectAllFaces 


first item of the list contains a list of the outmost intersection polygon and the rest of the items (if there are any) inner polygons. 
Returns an enumerator for an array list of lists of plane 
- solid intersection points from all intersecting faces. The first item of one list contains points of the outmost intersection polygon and then the inner polygons (if there are any). 
Properties 
  	Name	Description 
MaximumPoint Gets the maximum axis-aligned point of the solid in the current 
plane. 
MinimumPoint	Gets the minimum axis-aligned point of the solid in the current 
plane. 

Properties	1890 


Point Fields 

See Also 
Solid Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	1891 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Solid Methods 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Solid type exposes the following members. 
Methods 
  	Name	Description 
Used to get all the intersection points between the solid and a plane. Does not arrange the points into polygons, thus a lot faster. 
GetCutPart	Returns a shell enumerator for the solid th at results 
cutting this solid with the given solid. GetEdgeEnumerator	Returns a new edge enumerator in the current plane. 
GetFaceEnumerator	Returns a new face enumerator in the current plane. Intersect(LineSegment)	Returns a list of line - solid intersection points. Intersect(Point, Point)	Returns a list of line - solid intersection points. 
Obsolete. 
Returns a list of plane - solid intersection points. The 
Intersect(Point, Point, Point) 



IntersectAllFaces 


first item of the list contains a list of the outmost intersection polygon and the rest of the items (if there are any) inner polygons. 
Returns an enumerator for an array list of lists of plane 
- solid intersection points from all intersecting faces. The first item of one list contains points of the outmost intersection polygon and then the inner polygons (if there are any). 
See Also 
Solid Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1892 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Solid..::..GetAllIntersectionPoints Method 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Used to get all the intersection points between the solid and a plane. Does not arrange the points into polygons, thus a lot faster. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator GetAllIntersectionPoints( 
Point point1, 
Point point2, 
Point point3 
) 
Visual Basic 
Public Function GetAllIntersectionPoints (  
point1 As Point, 
point2 As Point, 
point3 As Point 
) As IEnumerator 
Parameters 

point1 
Type: Tekla.Structures.Geometry3d..::..Point 1st of the 3 points defining a plane 

point2 
Type: Tekla.Structures.Geometry3d..::..Point 2nd of the 3 points defining a plane 

point3 
Type: Tekla.Structures.Geometry3d..::..Point 3rd of the 3 points defining a plane 

Return Value 

Type: IEnumerator 
An IEnumerator containing the intersection points of type the Point 



Syntax	1893 


Point Fields 

See Also 
Solid Class 
Solid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	1894 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..GetCutPart Method 
Solid Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a shell enumerator for the solid th at results cutting this solid with the given solid. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ShellEnumerator GetCutPart( 
Solid CuttingPart 
) 
Visual Basic 
Public Function GetCutPart (  
CuttingPart As Solid 
) As ShellEnumerator 
Parameters 

CuttingPart 
Type: Tekla.Structures.Model..::..Solid 
The solid to use for cutting. 

Return Value 

Type: ShellEnumerator 
An shell enumerator to enumerate through the resulting solid's shells. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Solid; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
private static Beam CreateBeam(Point p1, Point p2, String profileName, bool SetAsOperativeCla 
    { 
        Beam beam1 = new Beam 
        { 
            StartPoint = p1, 

Examples	1895 


Point Fields 
            EndPoint = p2, 
            Profile = { ProfileString = profileName }, 
            Finish = "PAINT", 
            Material = { MaterialString = "S235JR" }, 
            Position = { Depth = Position.DepthEnum.MIDDLE }, 
            Class = SetAsOperativeClass ? BooleanPart.BooleanOperativeClassName : "1"         }; 
return beam1; 
    } 
public void Example1() 
    { 
        Beam beam1 = CreateBeam(new Point(1000.0, 1000.0, 0.0), new Point(1000.0, 2000.0, 0.0), "         Beam beam2 = CreateBeam(new Point(500.0, 1500.0, 250.0), new Point(1500.0, 1500.0, 250.0)         BooleanPart cut = new BooleanPart { Father = beam1 }; 
        cut.SetOperativePart(beam2); 
        Solid solid1 = beam1.GetSolid(Solid.SolidCreationTypeEnum.RAW); 
        Solid solid2 = beam1.GetSolid(Solid.SolidCreationTypeEnum.NORMAL); 
        ShellEnumerator shells = solid1.GetCutPart(solid2); 
int shellCount = 0; 
        List<int> faceCounts = new List<int>(); 
while (shells.MoveNext()) 
        { 
var shell = shells.Current as Shell; 
if (shell != null) 
            { 
                FaceEnumerator faces = shell.GetFaceEnumerator();                 faceCounts.Insert(shellCount, 0);  
while(faces.MoveNext()) 
                { 
                    faceCounts[shellCount]++;  
                } 
            } 
            shellCount++; 
        } 
    } 
} 
See Also 
Solid Class 
Solid Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1896 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..GetEdgeEnumerator Method 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new edge enumerator in the current plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public EdgeEnumerator GetEdgeEnumerator() 
Visual Basic 
Public Function GetEdgeEnumerator As EdgeEnumerator 
Return Value 

Type: EdgeEnumerator 
An edge enumerator to enumerate through the solid's global edges. 

Implements 

ISolid..::..GetEdgeEnumerator()()()() 
See Also 
Solid Class 
Solid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1897 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..GetFaceEnumerator Method 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new face enumerator in the current plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public FaceEnumerator GetFaceEnumerator() 
Visual Basic 
Public Function GetFaceEnumerator As FaceEnumerator 
Return Value 

Type: FaceEnumerator 
A face enumerator to enumerate through solid faces. 

Implements 

ISolid..::..GetFaceEnumerator()()()() 
See Also 
Solid Class 
Solid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1898 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..Intersect Method 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Intersect(LineSegment)	Returns a list of line - solid intersection points. Intersect(Point, Point)	Returns a list of line - solid intersection points. 
Obsolete. 
Returns a list of plane - solid intersection points. The 
Intersect(Point, Point, Point) 


first item of the list contains a list of the outmost intersection polygon and the rest of the items (if there are any) inner polygons. 
See Also 
Solid Class 
Solid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	1899 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..Intersect Method (LineSegment) 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a list of line - solid intersection points. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Intersect( 
LineSegment line 
) 
Visual Basic 
Public Function Intersect (  
line As LineSegment 
) As ArrayList 
Parameters 

line 
Type: Tekla.Structures.Geometry3d..::..LineSegment The intersection line to be used. 

Return Value 

Type: ArrayList 
A list of intersection points. 
See Also 
Solid Class 
Solid Members 
Intersect Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	1900 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..Intersect Method (Point, Point) 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a list of line - solid intersection points. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Intersect( 
Point point1, 
Point point2 
) 
Visual Basic 
Public Function Intersect (  
point1 As Point, 
point2 As Point 
) As ArrayList 
Parameters 

point1 
Type: Tekla.Structures.Geometry3d..::..Point The first end of the intersection line. 

point2 
Type: Tekla.Structures.Geometry3d..::..Point The second end of the intersection line. 

Return Value 

Type: ArrayList 
A list of intersection points. 
See Also 
Solid Class 
Solid Members 
Intersect Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1901 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..Intersect Method (Point, Point, Point) 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a list of plane - solid intersection points. The first item of the list contains a list of the outmost intersection polygon and the rest of the items (if there are any) inner polygons. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Intersect is deprecated, please use IntersectAllFaces instead.")] public ArrayList Intersect( 
Point point1, 
Point point2, 
Point point3 
) 
Visual Basic 
<ObsoleteAttribute("Intersect is deprecated, please use IntersectAllFaces instead.")>  Public Function Intersect (  
point1 As Point, 
point2 As Point, 
point3 As Point 
) As ArrayList 
Parameters 

point1 
Type: Tekla.Structures.Geometry3d..::..Point The first plane point. 

point2 
Type: Tekla.Structures.Geometry3d..::..Point The second plane point. 

point3 
Type: Tekla.Structures.Geometry3d..::..Point The third plane point. 





Syntax	1902 


Point Fields 
Return Value 

Type: ArrayList 
An array list of intersection point lists. 
See Also 
Solid Class 
Solid Members 
Intersect Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	1903 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..IntersectAllFaces Method 
Solid Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator for an array list of lists of plane - solid intersection points from all intersecting faces. The first item of one list contains points of the outmost intersection polygon and then the inner polygons (if there are any). 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator IntersectAllFaces( 
Point point1, 
Point point2, 
Point point3 
) 
Visual Basic 
Public Function IntersectAllFaces (  
point1 As Point, 
point2 As Point, 
point3 As Point 
) As IEnumerator 
Parameters 

point1 
Type: Tekla.Structures.Geometry3d..::..Point The first plane point. 

point2 
Type: Tekla.Structures.Geometry3d..::..Point The second plane point. 

point3 
Type: Tekla.Structures.Geometry3d..::..Point The third plane point. 

Return Value 

Type: IEnumerator 
An enumerator for an array list of intersection point lists. 


Syntax	1904 


Point Fields 

Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Solid; 
using Tekla.Structures.Geometry3d; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
    { 
        Beam Beam = new Beam(new Point(0, 0, 0), new Point(500, 0, 0));         Beam.Profile.ProfileString = "HEA400"; 
        Beam.Name = "SolidPlane"; 
        Beam.Finish = "Normal"; 
        Beam.Class = "6"; 
        Beam.Insert(); 
        Solid Solid = Beam.GetSolid(); 
        IEnumerator FaceEnum = Solid.IntersectAllFaces(new Point(0, -50, 0), new Point(1000, -50, 
int FaceIndex = 0; 
while (FaceEnum.MoveNext()) 
        { 
            ArrayList Points = FaceEnum.Current as ArrayList; 
            IEnumerator LoopsEnum = Points.GetEnumerator(); 
int LoopIndex = 0; 
while (LoopsEnum.MoveNext()) 
            { 
                ArrayList LoopPoints = LoopsEnum.Current as ArrayList; 
if (LoopPoints != null) 
                { 
                    IEnumerator LoopPointsEnum = LoopPoints.GetEnumerator(); 
while (LoopPointsEnum.MoveNext()) 
                    { 
                        Point SolidPoint = LoopPointsEnum.Current as Point; 
if(SolidPoint != null) 
                        { 
                            System.Diagnostics.Debug.WriteLine("Face " + FaceIndex.ToString() + "                         } 
                    } 
                } 
                LoopIndex++; 
            } 
            FaceIndex++; 
        } 
    } 
} 
See Also 
Solid Class 
Solid Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1905 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Solid Properties 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Solid type exposes the following members. 
Properties 
  	Name	Description 
MaximumPoint Gets the maximum axis-aligned point of the solid in the current 
plane. 
MinimumPoint	Gets the minimum axis-aligned point of the solid in the current 
plane. 
See Also 
Solid Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1906 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..MaximumPoint Property 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the maximum axis-aligned point of the solid in the current plane. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point MaximumPoint { get; } 
Visual Basic 
Public ReadOnly Property MaximumPoint As Point 
Get 
Property Value 

Type: Point 

Implements 

ISolid..::..MaximumPoint 
See Also 
Solid Class 
Solid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1907 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Solid..::..MinimumPoint Property 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the minimum axis-aligned point of the solid in the current plane. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point MinimumPoint { get; } 
Visual Basic 
Public ReadOnly Property MinimumPoint As Point 
Get 
Property Value 

Type: Point 

Implements 

ISolid..::..MinimumPoint 
See Also 
Solid Class 
Solid Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1908 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Solid..::..SolidCreationTypeEnum Enumeration 
Solid Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The creation type of the solid. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum SolidCreationTypeEnum 
Visual Basic 
Public Enumeration SolidCreationTypeEnum 
Members 
Member name	Value		Description 
RAW	0	The solid is created without any 
boolean operations. 
FITTED	1	The solid is created with fittings. 
NORMAL	2	The solid is created including all 
cutting and fitting operations. HIGH_ACCURACY	3	The solid is created as normal with 
an exact profile cross section. PLANECUTTED	4	The solid is created with fittings and 
cut planes. 
The solid is created including all 
NORMAL_WITHOUT_EDGECHAMFERS 5 


NORMAL_WITHOUT_WELDPREPS	6 

See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


cutting and fitting operations without edge chamfers. 
The solid is created including all cutting and fitting operations without weld prepping. 

See Also	1909 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
StrandUnbondingData Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The StrandUnbondingData class represents the unbonding of a rebar strand. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class StrandUnbondingData 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class StrandUnbondingData 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
           StrandUnbondingData Unbonding = new StrandUnbondingData();            Unbonding.FromEnd = 20; 
           Unbonding.FromStart = 20; 
           Unbonding.MiddleToEnd = 30; 
           Unbonding.MiddleToStart = 30; 
           Unbonding.StrandIndex = 1; 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..StrandUnbondingData 
See Also 
StrandUnbondingData Members 
Tekla.Structures.Model Namespace 


See Also	1910 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	1911 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
StrandUnbondingData Members 
StrandUnbondingData Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The StrandUnbondingData type exposes the following members. 
Constructors 
  	Name	Description 
StrandUnbondingData Initializes a new strand unbonding data instance with 
empty attributes. 
Properties 
  	Name	Description 
FromEnd	The unbonding from the end of the strand. 
FromStart	The unbonding from the start of the strand. 
MiddleToEnd	The unbonding from the middle of the strand to the end of the 
strand. 
MiddleToStart The unbonding from the middle of the strand to the start of the 
strand. 
StrandIndex	The index of the strand. 
See Also 
StrandUnbondingData Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1912 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
StrandUnbondingData Constructor 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new strand unbonding data instance with empty attributes. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public StrandUnbondingData() 
Visual Basic 
Public Sub New 
See Also 
StrandUnbondingData Class 
StrandUnbondingData Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1913 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
StrandUnbondingData Properties 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The StrandUnbondingData type exposes the following members. 
Properties 
  	Name	Description 
FromEnd	The unbonding from the end of the strand. 
FromStart	The unbonding from the start of the strand. 
MiddleToEnd	The unbonding from the middle of the strand to the end of the 
strand. 
MiddleToStart The unbonding from the middle of the strand to the start of the 
strand. 
StrandIndex	The index of the strand. 
See Also 
StrandUnbondingData Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1914 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 StrandUnbondingData..::..FromEnd Property 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The unbonding from the end of the strand. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FromEnd { get; set; } 
Visual Basic 
Public Property FromEnd As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
StrandUnbondingData Class StrandUnbondingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1915 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 StrandUnbondingData..::..FromStart Property 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The unbonding from the start of the strand. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FromStart { get; set; } 
Visual Basic 
Public Property FromStart As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
StrandUnbondingData Class StrandUnbondingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1916 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 StrandUnbondingData..::..MiddleToEnd Property 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The unbonding from the middle of the strand to the end of the strand. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double MiddleToEnd { get; set; } 
Visual Basic 
Public Property MiddleToEnd As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
StrandUnbondingData Class StrandUnbondingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1917 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 StrandUnbondingData..::..MiddleToStart Property 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The unbonding from the middle of the strand to the start of the strand. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double MiddleToStart { get; set; } 
Visual Basic 
Public Property MiddleToStart As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
StrandUnbondingData Class StrandUnbondingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1918 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 StrandUnbondingData..::..StrandIndex Property 
StrandUnbondingData Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The index of the strand. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int StrandIndex { get; set; } 
Visual Basic 
Public Property StrandIndex As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
StrandUnbondingData Class StrandUnbondingData Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1919 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The SurfaceObject class represents a surface object in the model. Currently this class only support dynamic surfaces whose geometries are determined by the parts or pours they associate to. It is not allowed to modify the geometry of a dynamic surface on Open API. The polymesh setter of this class throws . 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class SurfaceObject : PolymeshObjectBase 
Visual Basic 
<SerializableAttribute> 
Public Class SurfaceObject 
Inherits PolymeshObjectBase 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
using System.Collections.Generic; 
public class Example 
{ 
public void Example1() 
   { 
      Point startPointBeam = new Point(0.0, 0.0, 0.0); 
      Point endPointBeam = new Point(10000.0, 0.0, 0.0); 
      Beam Beam = new Beam(startPointBeam, endPointBeam) 
      { 
         Profile = { ProfileString = "400*400" }, 
         Material = { MaterialString = "Concrete_undefined" }       }; 
      Beam.Insert(); 
      SurfaceObject surfaceObject = new SurfaceObject(); 
      surfaceObject.Polymesh = CreateSingleFacePolymeshGeometry( 
new[] 
                      { 

Examples	1920 


Point Fields 
new Vector(    0.0, -200.0, 0.0), // 0 new Vector(10000.0, -200.0, 0.0), // 1 new Vector(10000.0,  200.0, 0.0), // 2 new Vector(    0.0,  200.0, 0.0)  // 3 
                      }); 
      surfaceObject.Father = this.TestBeam;       surfaceObject.Insert(); 
   } 
private static FacetedBrep CreateSingleFacePolymeshGeometry(Vector[] vertices) 
   { 
var outerWires = new int[1][]; 
       outerWires[0] = new int[vertices.Length]; 
for (int i = 0; ii < vertices.Length; i++) 
           outerWires[0][i] = i; 
var innerWires = new Dictionary<int, int[][]> { }; 
return new FacetedBrep(vertices, outerWires, innerWires); 
   } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..PolymeshObjectBase                 Tekla.Structures.Model..::..SurfaceObject 
See Also 
SurfaceObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	1921 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject Members 
SurfaceObject Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SurfaceObject type exposes the following members. 
Constructors 
  	Name	Description 
SurfaceObject Creates a new surface instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the model object from the model database. 
(Inherited from PolymeshObjectBase.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties 

Methods	1922 


Point Fields 
at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts a new model object. The geometry of the 
object needs to be set by using the public Polymesh 

Methods	1923 







Modify 



Point Fields 
function, before calling insert. 
(Overrides PolymeshObjectBase..::..Insert()()()().) 
Modifies the existing model object in the model database to match the current one. 
(Overrides PolymeshObjectBase..::..Modify()()()().) 
Selects the model object from the model by the identifier of this instance. 
(Overrides PolymeshObjectBase..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Class	Gets or sets the class of the surface object. 
CreateHoles Gets or sets the CreateHoles parameter of the surface object. Father	Gets or sets the father object of the surface object. The father can 
be set only before the Insert(), otherwise exception is thrown. Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	Gets or sets the name of the surface object. 
Polymesh	Gets or sets the polymesh that forms the object geometry. 
(Inherited from PolymeshObjectBase.) 
Type	Gets or sets the type of the surface object. 
See Also 
SurfaceObject Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	1924 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject Constructor 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new surface instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SurfaceObject() 
Visual Basic 
Public Sub New 
See Also 
SurfaceObject Class 
SurfaceObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1925 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject Methods 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SurfaceObject type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Delete	Deletes the model object from the model database. 
(Inherited from PolymeshObjectBase.) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) GetDynamicStringProperty	Gets a dynamic string property from the model 
object. 

Methods	1926 


Point Fields 
(Inherited from ModelObject.) GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetIntegerUserProperties	Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and 
GetPhase 

GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

Insert 


Modify 

Select 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
(Overrides PolymeshObjectBase..::..Insert()()()().) 
Modifies the existing model object in the model database to match the current one. 
(Overrides PolymeshObjectBase..::..Modify()()()().) 

Methods	1927 


Point Fields 
Selects the model object from the model by the identifier of this instance. 
(Overrides PolymeshObjectBase..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
SurfaceObject Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
























See Also	1928 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Insert Method 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts a new model object. The geometry of the object needs to be set by using the public Polymesh function, before calling insert. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1929 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Modify Method 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing model object in the model database to match the current one. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1930 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Select Method 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the model object from the model by the identifier of this instance. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1931 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject Properties 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SurfaceObject type exposes the following members. 
Properties 
  	Name	Description 
Class	Gets or sets the class of the surface object. 
CreateHoles Gets or sets the CreateHoles parameter of the surface object. Father	Gets or sets the father object of the surface object. The father can 
be set only before the Insert(), otherwise exception is thrown. Identifier	The identifier of the object. 
(Inherited from Object.) 
Name	Gets or sets the name of the surface object. 
Polymesh	Gets or sets the polymesh that forms the object geometry. 
(Inherited from PolymeshObjectBase.) 
Type	Gets or sets the type of the surface object. 
See Also 
SurfaceObject Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1932 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Class Property 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the class of the surface object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Class { get; set; } 
Visual Basic 
Public Property Class As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1933 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..CreateHoles Property 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the CreateHoles parameter of the surface object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CreateHoles { get; set; } 
Visual Basic 
Public Property CreateHoles As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1934 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Father Property 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets or sets the father object of the surface object. The father can be set only before the Insert(), otherwise exception is thrown. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject Father { get; set; } 
Visual Basic 
Public Property Father As ModelObject 
Get 
Set 
Property Value 
Type: ModelObject 
Exceptions 
Exception	Condition 
System..::..InvalidOperationException	Thrown when the father is tried to set after 
Insert(). 
See Also 
SurfaceObject Class 
SurfaceObject Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	1935 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Name Property 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the name of the surface object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1936 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceObject..::..Type Property 
SurfaceObject Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets or sets the type of the surface object. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Type { get; set; } 
Visual Basic 
Public Property Type As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SurfaceObject Class 
SurfaceObject Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1937 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The SurfaceTreatment class defines a layer above a building element defining what a surface looks like. The surface could for example have a tiled look. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class SurfaceTreatment : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class SurfaceTreatment 
Inherits ModelObject 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           ContourPlate cp = new ContourPlate(); 
           cp.AddContourPoint(new ContourPoint(new Point( 6000,  6000,0),null));            cp.AddContourPoint(new ContourPoint(new Point( 9000,  6000,0),null));            cp.AddContourPoint(new ContourPoint(new Point( 9000, 12000,0),null));            cp.AddContourPoint(new ContourPoint(new Point(10500, 15000,0),null));            cp.AddContourPoint(new ContourPoint(new Point( 6000, 12000,0),null)); 
           Contour c = new Contour(); 
           c.AddContourPoint(new ContourPoint(new Point( 6000,  6000,5), null));            c.AddContourPoint(new ContourPoint(new Point( 9000,  6000,5), null));            c.AddContourPoint(new ContourPoint(new Point( 9000, 12000,5), null));            c.AddContourPoint(new ContourPoint(new Point(10500, 15000,5), null));            c.AddContourPoint(new ContourPoint(new Point( 7500, 12000,5), null)); 
           cp.Insert(); 
           SurfaceTreatment treatment = new SurfaceTreatment();            treatment.Father = cp; 

Examples	1938 


Point Fields 
           treatment.Polygon = c; 
           treatment.StartPoint = new Point(1500,0000,0);            treatment.EndPoint = new Point(1500,6000,0); 
bool Result = false; 
           Result = treatment.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..SurfaceTreatment 
See Also 
SurfaceTreatment Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






























See Also	1939 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment Members 
SurfaceTreatment Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SurfaceTreatment type exposes the following members. 
Constructors 
  	Name	Description 
SurfaceTreatment Creates a new surface treatment instance. Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the surface treatment with the given identifier from the database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	1940 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	1941 


Point Fields 
Insert	Inserts the surface treatment to the database. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the surface treatment with the given 
Modify 


Select 


SetDynamicStringProperty 


identifier in the database to match the current one. (Overrides ModelObject..::..Modify()()()().) 
Selects the surface treatment with the given identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Class	The class of the surface treatment. 
Color	The color of the surfacing. 
CutByFatherBooleans Defines if the part is cut by the father's cuts. 
EndPoint	Determines the direction the surfacing is filled in. The 
direction is from the start point towards the end point. Father	Defines the father part for the surface treatment: the part 
that the surface treatment is created on. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Defines the material for the surface treatment. 
Name	The name of the surface treatment. 
Polygon	Defines the area for the surface treatment. 
Position	Defines the position for the surface treatment. 
StartPoint	Determines the origin of the surfacing. The surfacing is 
then filled out from the start point towards the end point. Thickness	Defines how thick the surface treatment is. 


Properties	1942 


Point Fields 
Type	The type of the surfacing. 
TypeName	The name of the surface treatment type. The valid names 
are defined in the product_finishes.dat file. 
See Also 
SurfaceTreatment Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	1943 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment Constructor 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new surface treatment instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SurfaceTreatment() 
Visual Basic 
Public Sub New 
See Also 
SurfaceTreatment Class 
SurfaceTreatment Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	1944 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment Methods 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SurfaceTreatment type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the surface treatment with the given identifier from the database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	1945 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the surface treatment to the database. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the surface treatment with the given 
Modify 


identifier in the database to match the current one. (Overrides ModelObject..::..Modify()()()().) 


Methods	1946 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the surface treatment with the given identifier. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
SurfaceTreatment Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	1947 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Delete Method 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the surface treatment with the given identifier from the database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1948 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Insert Method 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the surface treatment to the database. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1949 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Modify Method 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the surface treatment with the given identifier in the database to match the current one. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1950 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Select Method 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the surface treatment with the given identifier. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1951 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment Properties 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SurfaceTreatment type exposes the following members. 
Properties 
  	Name	Description 
Class	The class of the surface treatment. 
Color	The color of the surfacing. 
CutByFatherBooleans Defines if the part is cut by the father's cuts. 
EndPoint	Determines the direction the surfacing is filled in. The 
direction is from the start point towards the end point. Father	Defines the father part for the surface treatment: the part 
that the surface treatment is created on. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Material	Defines the material for the surface treatment. 
Name	The name of the surface treatment. 
Polygon	Defines the area for the surface treatment. 
Position	Defines the position for the surface treatment. 
StartPoint	Determines the origin of the surfacing. The surfacing is 
then filled out from the start point towards the end point. Thickness	Defines how thick the surface treatment is. 
Type	The type of the surfacing. 
TypeName	The name of the surface treatment type. The valid names 
are defined in the product_finishes.dat file. 
See Also 
SurfaceTreatment Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	1952 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Class Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The class of the surface treatment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Class { get; set; } 
Visual Basic 
Public Property Class As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1953 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Color Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The color of the surfacing. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SurfaceTreatment..::..SurfaceColorEnum Color { get; set; } 
Visual Basic 
Public Property Color As SurfaceTreatment..::..SurfaceColorEnum 
Get 
Set 
Property Value 

Type: SurfaceTreatment..::..SurfaceColorEnum 
See Also 
SurfaceTreatment Class 
SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1954 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 SurfaceTreatment..::..CutByFatherBooleans Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines if the part is cut by the father's cuts. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool CutByFatherBooleans { get; set; } 
Visual Basic 
Public Property CutByFatherBooleans As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
Remarks 
Polygon cuts are not supported. 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	1955 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..EndPoint Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Determines the direction the surfacing is filled in. The direction is from the start point towards the end point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; set; } 
Visual Basic 
Public Property EndPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1956 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Father Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines the father part for the surface treatment: the part that the surface treatment is created on. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Part Father { get; set; } 
Visual Basic 
Public Property Father As Part 
Get 
Set 
Property Value 
Type: Part 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1957 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Material Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the material for the surface treatment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Material Material { get; set; } 
Visual Basic 
Public Property Material As Material 
Get 
Set 
Property Value 
Type: Material 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1958 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Name Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the surface treatment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1959 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Polygon Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the area for the surface treatment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Contour Polygon { get; set; } 
Visual Basic 
Public Property Polygon As Contour 
Get 
Set 
Property Value 
Type: Contour 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1960 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Position Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the position for the surface treatment. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Position Position { get; set; } 
Visual Basic 
Public Property Position As Position 
Get 
Set 
Property Value 
Type: Position 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1961 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..StartPoint Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Determines the origin of the surfacing. The surfacing is then filled out from the start point towards the end point. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; set; } 
Visual Basic 
Public Property StartPoint As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1962 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Thickness Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines how thick the surface treatment is. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Thickness { get; set; } 
Visual Basic 
Public Property Thickness As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1963 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SurfaceTreatment..::..Type Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the surfacing. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SurfaceTreatment..::..SurfaceTypeEnum Type { get; set; } 
Visual Basic 
Public Property Type As SurfaceTreatment..::..SurfaceTypeEnum 
Get 
Set 
Property Value 

Type: SurfaceTreatment..::..SurfaceTypeEnum 
See Also 
SurfaceTreatment Class 
SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1964 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 SurfaceTreatment..::..TypeName Property 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The name of the surface treatment type. The valid names are defined in the product_finishes.dat file. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string TypeName { get; set; } 
Visual Basic 
Public Property TypeName As String 
Get 
Set 
Property Value 
Type: String 
See Also 
SurfaceTreatment Class SurfaceTreatment Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	1965 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 SurfaceTreatment..::..SurfaceColorEnum Enumeration 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different surfacing colors. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum SurfaceColorEnum 
Visual Basic 
Public Enumeration SurfaceColorEnum 
Members 
Member name  Value		Description 
WHITE	1	The white surface color. 
RED	2	The red surface color. 
GREEN	3	The green surface color. 
BLUE	4	The blue surface color. 
CYAN	5	The cyan surface color. 
YELLOW	6	The yellow surface color. 
MAGENTA	7	The magenta surface color. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1966 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 SurfaceTreatment..::..SurfaceTypeEnum Enumeration 
SurfaceTreatment Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The different surfacing types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum SurfaceTypeEnum 
Visual Basic 
Public Enumeration SurfaceTypeEnum 
Members 
Member name	Value	Description 
CONCRETE_FINISH 1	The concrete finish surface type. 
SPECIAL_MIX	2	The special mix surface type. 
TILE_SURFACE	3	The tile surface type. 
STEEL_FINISH	4	The steel finish surface type. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	1967 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Task class defines a single building site task. It may contain parts, assemblies or other tasks. Tasks may have a hierarchy between them i.e. there are other tasks as subtasks for a parent task. Tasks may also depend on each other, have resources assigned to them or have a single worktype. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Task : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Task 
Inherits ModelObject 
Examples 
The following example creates and inserts a task with two beams as objects into the model. The task has also a scenario: 

  	Copy 
using System.Collections.Generic; 
using System.Collections; 
using System; 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point Point1 = new Point(0, 0, 0); 
           Point Point2 = new Point(1000, 0, 0); 
           Point Point3 = new Point(0, 1000, 0); 
           Point Point4 = new Point(1000, 1000, 0); 
           Beam Beam1 = new Beam(Point1, Point2); 
           Beam Beam2 = new Beam(Point3, Point4); 
           Beam1.Profile.ProfileString = "HEA400"; 
           Beam1.Finish = "PAINT"; 

Examples	1968 


Point Fields 
           Beam1.Material.MaterialString = "S235JR";            Beam2.Profile.ProfileString = "HEA400"; 
           Beam2.Finish = "PAINT"; 
           Beam2.Material.MaterialString = "S235JR"; 
           Beam1.Insert(); 
           Beam2.Insert(); 
// The Task 
           Task Task1 = new Task(); 
           Task1.PlannedStartDate = DateTime.Now; 
           Task1.Name = "Test Task"; 
           Task1.Critical = true; 
           Task1.Description = "Test task description";            Task1.Url = "http://test.task.url"; 
// Scenario 
           HierarchicDefinition ScenarioDefinition = new HierarchicDefinition(); 
           ScenarioDefinition.Name = "Scenario type"; 
           ScenarioDefinition.HierarchyType = HierarchicDefinitionTypeEnum.DOT_HIERARCHIC_TASK_SC            ScenarioDefinition.Insert(); 
           HierarchicObject Scenario = new HierarchicObject();            Scenario.Name = "Current scenario"; 
           Scenario.Definition = ScenarioDefinition; 
           Scenario.Insert(); 
           Task1.Scenario = Scenario; 
           ArrayList ModelObjects = new ArrayList();            ModelObjects.Add(Beam1); 
           ModelObjects.Add(Beam2); 
           Task1.AddObjectsToTask(ModelObjects); 
           Task1.Insert(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject             Tekla.Structures.Model..::..Task 
See Also 
Task Members 
Tekla.Structures.Model Namespace Tekla.Structures.Model..::..TaskDependency Tekla.Structures.Model..::..TaskWorktype 

Copyright  © Tekla 2013. All rights reserved. 





See Also	1969 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Task Members 
Task Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Task type exposes the following members. 
Constructors 
  	Name	Description 
Task()()()()	Creates a new task instance. 
Task(Identifier) Creates a task instance with a known identifier. Select the task 
after the creation. 
Methods 
  	Name	Description 
AddObjectsToTask	Adds objects to the task. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the task instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAllTasksOfSelectedObjects	Returns an enumerator of all the tasks related to 
the selected objects. 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetChildren	Returns an enumerator of all the children model 
objects. 


Methods	1970 


Point Fields 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDependencies	Returns an enumerator of all the task dependency objects where the task is involved. 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
GetDoubleReportProperties 


GetDoubleUserProperties 


GetDynamicStringProperty 


properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
GetFathers	Returns an enumerator of all the task type 
fathers for the task object. 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 



GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 
GetStringReportProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 

Methods	1971 









GetStringUserProperties 

GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 



Point Fields 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the task instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the task instance in the model. The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 
RemoveObjectsFromTask	Removes objects from the task. 
Selects the task instance from the model. The 
Select 


SetDynamicStringProperty 


identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 


Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
ActualEndDate	The actual end date of the task. ActualStartDate	The actual start date of the task. ActualWorkAmount	The amount of work already used for the task. 

Properties	1972 


Point Fields 
Completeness	The percentage of the completeness of the task on the scale 
from 0 to 100. 
Critical	The criticality of the task. 
Description	A short textual description of the task. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Local	The locality indicates if the task was created in Tekla 
Structures and Task Manager or imported. 
Name	The name of the task. 
PlannedEndDate	The planned end date of the task. 
PlannedStartDate	The planned start date of the task. 
PlannedWorkAmount The amount of work planned to be used for the task. Scenario	The scenario which the task belongs to. 
Url	A link to material or data related to the task. The link can 
be a hyperlink or a file system link. 
See Also 
Task Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

























See Also	1973 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Task Constructor 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Task()()()()	Creates a new task instance. 
Task(Identifier) Creates a task instance with a known identifier. Select the task 
after the creation. 
See Also 
Task Class 
Task Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	1974 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task Constructor 
Task Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new task instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Task() 
Visual Basic 
Public Sub New 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
bool Result = false; 
           Beam Beam1 = new Beam(new Point(0, 0, 0), new Point(1000, 0, 0)); 
           Beam Beam2 = new Beam(new Point(0, 500, 0), new Point(1000, 500, 0));            Beam1.Name = "Default Beam 0000"; 
           Beam2.Name = "Default Beam 0001"; 
           Beam1.Insert(); 
           Beam2.Insert(); 
           Task Task1 = new Task(); 
           Task1.Name = "Default Task 0000"; 
           Task1.Insert(); 
           ArrayList aChildren = new ArrayList(); 
           aChildren.Add(Beam1); 
           aChildren.Add(Beam2); 
           Result = Task1.AddObjectsToTask(aChildren); 
       } 
} 





Examples	1975 


Point Fields 

See Also 
Task Class 
Task Members 
Task Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	1976 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task Constructor (Identifier) 
Task Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a task instance with a known identifier. Select the task after the creation. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Task( 
Identifier ID 
) 
Visual Basic 
Public Sub New (  ID As Identifier 
) 
Parameters 

ID 
Type: Tekla.Structures..::..Identifier 
The identifier of an existing task. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures; 
public class Example 
{ 
public void Example1() 
       { 
           Identifier Identifier1 = new Identifier(357); 
bool Result = true; 
           Task Task1 = new Task(Identifier1); 
           Task1.Select(); 
           ModelObjectEnumerator TaskChildren = Task1.GetChildren(); 
foreach (Task ChildTask in TaskChildren) 
           { 
               ChildTask.Name += " (modified)"; 
               Result = ChildTask.Modify(); 
           } 

Examples	1977 


Point Fields 
       } 
} 
See Also 
Task Class 
Task Members 
Task Overload Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	1978 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Task Methods 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Task type exposes the following members. 
Methods 
  	Name	Description 
AddObjectsToTask	Adds objects to the task. 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the task instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
GetAllTasksOfSelectedObjects	Returns an enumerator of all the tasks related to 
the selected objects. 
Retrieves all properties for the model object in one hashtable. Type for the returned value must 
GetAllUserProperties 


GetChildren 


be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDependencies	Returns an enumerator of all the task dependency objects where the task is involved. 
GetDoubleReportProperties 

Methods	1979 









GetDoubleUserProperties 


GetDynamicStringProperty 



Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
Returns the father component of the model object. 
(Inherited from ModelObject.) 
GetFathers	Returns an enumerator of all the task type 
fathers for the task object. 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 



GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


GetStringReportProperties 


GetStringUserProperties 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). 
(Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple properties at once. 
(Inherited from ModelObject.) 
Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 

Methods	1980 




GetUserProperty(String, Double%) 
GetUserProperty(String, Int32%) 



Point Fields 
Retrieves a double property for the model object. (Inherited from ModelObject.) 
Retrieves an integer property for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the task instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the task instance in the model. The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 
RemoveObjectsFromTask	Removes objects from the task. 
Selects the task instance from the model. The 
Select 


SetDynamicStringProperty 


identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. (Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 


Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Task Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	1981 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..AddObjectsToTask Method 
Task Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds objects to the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool AddObjectsToTask( 
ArrayList ModelObjects 
) 
Visual Basic 
Public Function AddObjectsToTask (  
ModelObjects As ArrayList 
) As Boolean 
Parameters 

ModelObjects 
Type: System.Collections..::..ArrayList 
An array list of model objects to be added to the task. 

Return Value 
Type: Boolean 
True on success. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
// Add beam1 and beam2 into the task. 
           Task task = new Task(); 
           Beam beam1 = new Beam(); 
           Beam beam2 = new Beam(); 
if (task.Insert() && 

Examples	1982 


Point Fields 
               beam1.Insert() && 
               beam2.Insert()) 
           { 
               ArrayList objectsToAdd = new ArrayList(); 
               objectsToAdd.Add(beam1); 
               objectsToAdd.Add(beam2); 
               task.AddObjectsToTask(objectsToAdd); 
           } 
       } 
} 
See Also 
Task Class 
Task Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 

































See Also	1983 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Delete Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the task instance from the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1984 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Task..::..GetAllTasksOfSelectedObjects Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the tasks related to the selected objects. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelObjectEnumerator GetAllTasksOfSelectedObjects() 
Visual Basic 
Public Shared Function GetAllTasksOfSelectedObjects As ModelObjectEnumerator Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Task Class 
Task Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1985 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..GetDependencies Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the task dependency objects where the task is involved. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetDependencies() 
Visual Basic 
Public Function GetDependencies As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Task Class 
Task Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1986 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..GetFathers Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the task type fathers for the task object. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetFathers() 
Visual Basic 
Public Function GetFathers As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator on success, otherwise null. 
See Also 
Task Class 
Task Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1987 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Insert Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the task instance in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1988 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Modify Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the task instance in the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1989 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Task..::..RemoveObjectsFromTask Method 
Task Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Removes objects from the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool RemoveObjectsFromTask( 
ArrayList ModelObjects 
) 
Visual Basic 
Public Function RemoveObjectsFromTask (  
ModelObjects As ArrayList 
) As Boolean 
Parameters 

ModelObjects 
Type: System.Collections..::..ArrayList 
An array list of model objects to be removed from the task. 

Return Value 
Type: Boolean 
True on success. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
           Identifier Identifier1 = new Identifier(357); 
// Remove all the children from the task. 
           Task task = new Task(Identifier1); 


Examples	1990 


Point Fields 
if (task.Select()) 
           { 
               ModelObjectEnumerator taskChildren = task.GetChildren();                ArrayList objectsToRemove = new ArrayList(); 
while (taskChildren.Current != null) 
               objectsToRemove.Add(taskChildren.Current); 
               task.RemoveObjectsFromTask(objectsToRemove); 
           } 
       } 
} 
See Also 
Task Class 
Task Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
































See Also	1991 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Select Method 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the task instance from the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	1992 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Task Properties 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Task type exposes the following members. 
Properties 
  	Name	Description 
ActualEndDate	The actual end date of the task. 
ActualStartDate	The actual start date of the task. 
ActualWorkAmount	The amount of work already used for the task. 
Completeness	The percentage of the completeness of the task on the scale 
from 0 to 100. 
Critical	The criticality of the task. 
Description	A short textual description of the task. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Local	The locality indicates if the task was created in Tekla 
Structures and Task Manager or imported. 
Name	The name of the task. 
PlannedEndDate	The planned end date of the task. 
PlannedStartDate	The planned start date of the task. 
PlannedWorkAmount The amount of work planned to be used for the task. Scenario	The scenario which the task belongs to. 
Url	A link to material or data related to the task. The link can 
be a hyperlink or a file system link. 
See Also 
Task Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	1993 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..ActualEndDate Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The actual end date of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DateTime ActualEndDate { get; set; } 
Visual Basic 
Public Property ActualEndDate As DateTime 
Get 
Set 
Property Value 
Type: DateTime 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1994 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..ActualStartDate Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The actual start date of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DateTime ActualStartDate { get; set; } 
Visual Basic 
Public Property ActualStartDate As DateTime 
Get 
Set 
Property Value 
Type: DateTime 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1995 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..ActualWorkAmount Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The amount of work already used for the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ActualWorkAmount { get; set; } 
Visual Basic 
Public Property ActualWorkAmount As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1996 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Completeness Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The percentage of the completeness of the task on the scale from 0 to 100. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Completeness { get; set; } 
Visual Basic 
Public Property Completeness As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1997 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Critical Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The criticality of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Critical { get; set; } 
Visual Basic 
Public Property Critical As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1998 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Description Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

A short textual description of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Description { get; set; } 
Visual Basic 
Public Property Description As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	1999 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Local Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The locality indicates if the task was created in Tekla Structures and Task Manager or imported. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Local { get; set; } 
Visual Basic 
Public Property Local As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2000 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Name Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2001 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..PlannedEndDate Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The planned end date of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DateTime PlannedEndDate { get; set; } 
Visual Basic 
Public Property PlannedEndDate As DateTime 
Get 
Set 
Property Value 
Type: DateTime 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2002 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..PlannedStartDate Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The planned start date of the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DateTime PlannedStartDate { get; set; } 
Visual Basic 
Public Property PlannedStartDate As DateTime 
Get 
Set 
Property Value 
Type: DateTime 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2003 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..PlannedWorkAmount Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The amount of work planned to be used for the task. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double PlannedWorkAmount { get; set; } 
Visual Basic 
Public Property PlannedWorkAmount As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2004 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Scenario Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The scenario which the task belongs to. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public HierarchicObject Scenario { get; set; } 
Visual Basic 
Public Property Scenario As HierarchicObject 
Get 
Set 
Property Value 

Type: HierarchicObject 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2005 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Task..::..Url Property 
Task Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
A link to material or data related to the task. The link can be a hyperlink or a file system link. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Url { get; set; } 
Visual Basic 
Public Property Url As String 
Get 
Set 
Property Value 
Type: String 
See Also 
Task Class 
Task Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2006 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The TaskDependency class represents a dependency between two task objects. Each task may depend on many other tasks, but between two specific tasks only one type of a dependency may exist. 

There are four types of dependencies: 

 FINISH_TO_FINISH (FF) 
 FINISH_TO_START (FS) 
 START_TO_FINISH (SF) 
 START_TO_START (SS) 

Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class TaskDependency : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class TaskDependency 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..TaskDependency 
See Also 
TaskDependency Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2007 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Members 
TaskDependency Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TaskDependency type exposes the following members. 
Constructors 
  	Name	Description 
TaskDependency()()()()	Creates a new task dependency instance. TaskDependency(Task, 
Task) 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the task dependency instance from the model. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
GetCoordinateSystem	Returns the coordinate system for the given model 
object. 

Methods	2008 


Point Fields 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 


Methods	2009 


Point Fields 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the task dependency instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the task dependency instance in the 
Modify 


Select 


SetDynamicStringProperty 


model. The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the task dependency instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
DependencyType The type of the task dependency. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Lag	The lag of the task dependency represented in whole hours. 
Local	The locality indicates if the dependency was created in Tekla Structures and Task Manager or imported. 
Primary	The primary task of the task dependency. 
Secondary	The secondary task of the task dependency. 
See Also 
TaskDependency Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2010 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Constructor 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
TaskDependency()()()()	Creates a new task dependency instance. TaskDependency(Task, 
Task) 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2011 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Constructor 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new task dependency instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TaskDependency() 
Visual Basic 
Public Sub New 
See Also 
TaskDependency Class 
TaskDependency Members 
TaskDependency Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2012 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Constructor (Task, Task) 
TaskDependency Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new task dependency instance with the given primary and secondary tasks. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TaskDependency( 
Task primary, 
Task secondary 
) 
Visual Basic 
Public Sub New (  primary As Task, secondary As Task 
) 
Parameters 

primary 
Type: Tekla.Structures.Model..::..Task The primary task to be used. 

secondary 
Type: Tekla.Structures.Model..::..Task 
The secondary task to be used. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
public class Example 
{ 
public void Example1() 
       { 
bool Result = false; 
           Task Task1 = new Task(); 
           Task Task2 = new Task(); 
           Task1.Name = "Default Task 0000";            Task2.Name = "Default Task 0001"; 

Examples	2013 


Point Fields 
           Task1.Insert(); 
           Task2.Insert(); 
           TaskDependency TaskDependency1 = new TaskDependency(Task1, Task2); 
           TaskDependency1.DependencyType = TaskDependency.DependencyTypeEnum.START_TO_FINISH;            Result = TaskDependency1.Insert(); 
       } 
} 
See Also 
TaskDependency Class 
TaskDependency Members 
TaskDependency Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	2014 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Methods 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TaskDependency type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the task dependency instance from the model. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	2015 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the task dependency instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the task dependency instance in the 
Modify 


model. The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 


Methods	2016 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the task dependency instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
TaskDependency Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2017 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Delete Method 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the task dependency instance from the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2018 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Insert Method 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the task dependency instance in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2019 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Modify Method 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the task dependency instance in the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2020 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Select Method 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the task dependency instance from the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2021 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency Properties 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TaskDependency type exposes the following members. 
Properties 
  	Name	Description 
DependencyType The type of the task dependency. 
Identifier	The identifier of the object. 
(Inherited from Object.) 
Lag	The lag of the task dependency represented in whole hours. 
Local	The locality indicates if the dependency was created in Tekla Structures and Task Manager or imported. 
Primary	The primary task of the task dependency. 
Secondary	The secondary task of the task dependency. 
See Also 
TaskDependency Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2022 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 TaskDependency..::..DependencyType Property 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the task dependency. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TaskDependency..::..DependencyTypeEnum DependencyType { get; set; } 
Visual Basic 
Public Property DependencyType As TaskDependency..::..DependencyTypeEnum 
Get 
Set 
Property Value 

Type: TaskDependency..::..DependencyTypeEnum 
See Also 
TaskDependency Class 
TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2023 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Lag Property 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The lag of the task dependency represented in whole hours. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Lag { get; set; } 
Visual Basic 
Public Property Lag As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2024 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Local Property 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The locality indicates if the dependency was created in Tekla Structures and Task Manager or imported. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Local { get; set; } 
Visual Basic 
Public Property Local As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2025 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Primary Property 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The primary task of the task dependency. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Task Primary { get; set; } 
Visual Basic 
Public Property Primary As Task 
Get 
Set 
Property Value 
Type: Task 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2026 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskDependency..::..Secondary Property 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The secondary task of the task dependency. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Task Secondary { get; set; } 
Visual Basic 
Public Property Secondary As Task 
Get 
Set 
Property Value 
Type: Task 
See Also 
TaskDependency Class TaskDependency Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2027 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 TaskDependency..::..DependencyTypeEnum Enumeration 
TaskDependency Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The task dependency types. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum DependencyTypeEnum 
Visual Basic 
Public Enumeration DependencyTypeEnum 
Members 
Member name	Value	Description 
FINISH_TO_FINISH 0	The task dependency type finish-to-finish. FINISH_TO_START	1	The task dependency type finish-to-start. START_TO_FINISH	2	The task dependency type start-to-finish. START_TO_START	3	The task dependency type start-to-start. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2028 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The TaskWorktype class defines a single worktype for a task object. Each task may belong to only one worktype. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class TaskWorktype : ModelObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class TaskWorktype 
Inherits ModelObject 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..TaskWorktype 
See Also 
TaskWorktype Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2029 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype Members 
TaskWorktype Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TaskWorktype type exposes the following members. 
Constructors 
  	Name	Description 
TaskWorktype Creates a new task worktype instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the task worktype instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 

GetDoubleReportProperties 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 

Methods	2030 


Point Fields 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 

Methods	2031 


Point Fields 
Insert	Inserts the task worktype instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the task worktype instance in the model. 
Modify 


Select 


SetDynamicStringProperty 


The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 
Selects the task worktype instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
Name	The name of the task worktype. 
See Also 
TaskWorktype Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2032 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype Constructor 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new task worktype instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TaskWorktype() 
Visual Basic 
Public Sub New 
See Also 
TaskWorktype Class 
TaskWorktype Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2033 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype Methods 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TaskWorktype type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the task worktype instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	2034 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 

GetReportProperty(String, String%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Insert	Inserts the task worktype instance in the model. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the task worktype instance in the model. 
Modify 


The identifier must be set. 
(Overrides ModelObject..::..Modify()()()().) 


Methods	2035 





Select 


SetDynamicStringProperty 



Point Fields 
Selects the task worktype instance from the model. The identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
TaskWorktype Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2036 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype..::..Delete Method 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the task worktype instance from the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskWorktype Class 
TaskWorktype Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2037 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype..::..Insert Method 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts the task worktype instance in the model. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskWorktype Class 
TaskWorktype Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2038 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype..::..Modify Method 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the task worktype instance in the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskWorktype Class 
TaskWorktype Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2039 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype..::..Select Method 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects the task worktype instance from the model. The identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
TaskWorktype Class 
TaskWorktype Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2040 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype Properties 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TaskWorktype type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the object. 
(Inherited from Object.) 
Name	The name of the task worktype. 
See Also 
TaskWorktype Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2041 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TaskWorktype..::..Name Property 
TaskWorktype Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the task worktype. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
TaskWorktype Class 
TaskWorktype Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2042 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The TransformationPlane class describes a transformation from global model coordinates to local and back to global. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class TransformationPlane 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class TransformationPlane 
Examples 
The following example shows how to use transformation planes for transforming points: 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Model myModel = new Model(); 
           WorkPlaneHandler myWorkPlaneHandler = myModel.GetWorkPlaneHandler();            Beam myBeam = new Beam(); 
           Point Point1 = new Point(); 
           Point Point2 = new Point(); 
           TransformationPlane currentPlane = myWorkPlaneHandler.GetCurrentTransformationPlane();            TransformationPlane beamPlane = new TransformationPlane(myBeam.GetCoordinateSystem());            Point lPoint1 = beamPlane.TransformationMatrixToLocal.Transform(currentPlane.Transform 
           Point lPoint2 = beamPlane.TransformationMatrixToLocal.Transform(currentPlane.Transform        } 
} 




Examples	2043 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..TransformationPlane 
See Also 
TransformationPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	2044 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Members 
TransformationPlane Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TransformationPlane type exposes the following members. 
Constructors 
  	Name	Description 
TransformationPlane()()()()	Creates a new identity transformation 
using the global coordinate system. 
Creates a new transformation plane 
TransformationPlane(CoordinateSystem) 

TransformationPlane(Point, Vector, Vector) 


defined by the given coordinate system. 
Creates a new transformation plane defined by the given origin and two vectors. 
Methods 
  	Name	Description 
Returns a string representation of the matrices that transform to local and global coordinates. 
(Overrides Object..::..ToString()()()().) 
Properties 
  	Name	Description 
Gives a transformation matrix for converting local 
TransformationMatrixToGlobal 


TransformationMatrixToLocal 


points in the transformation plane to global coordinates. 
Gives a transformation matrix for converting points in the global plane to local coordinates in the transformation plane. 




Properties	2045 


Point Fields 

See Also 
TransformationPlane Class Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2046 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Constructor 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
TransformationPlane()()()()	Creates a new identity transformation 
using the global coordinate system. 
Creates a new transformation plane 
TransformationPlane(CoordinateSystem) 

TransformationPlane(Point, Vector, Vector) 

See Also 
TransformationPlane Class TransformationPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


defined by the given coordinate system. 
Creates a new transformation plane defined by the given origin and two vectors. 
















See Also	2047 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Constructor 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new identity transformation using the global coordinate system. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TransformationPlane() 
Visual Basic 
Public Sub New 
See Also 
TransformationPlane Class 
TransformationPlane Members 
TransformationPlane Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2048 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Constructor (CoordinateSystem) 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new transformation plane defined by the given coordinate system. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TransformationPlane( 
CoordinateSystem CoordinateSystem 
) 
Visual Basic 
Public Sub New (  
CoordinateSystem As CoordinateSystem 
) 
Parameters 

CoordinateSystem 
Type: Tekla.Structures.Geometry3d..::..CoordinateSystem 
The coordinate system to be used. 
See Also 
TransformationPlane Class 
TransformationPlane Members 
TransformationPlane Overload 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2049 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Constructor (Point, Vector, Vector) 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new transformation plane defined by the given origin and two vectors. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TransformationPlane( 
Point Origo, 
Vector Xvector, 
Vector Yvector 
) 
Visual Basic 
Public Sub New (  
Origo As Point, 
Xvector As Vector, 
Yvector As Vector 
) 
Parameters 

Origo 
Type: Tekla.Structures.Geometry3d..::..Point The origin to be used. 

Xvector 
Type: Tekla.Structures.Geometry3d..::..Vector The X vector to be used. 

Yvector 
Type: Tekla.Structures.Geometry3d..::..Vector The Y vector to be used. 
See Also 
TransformationPlane Class 
TransformationPlane Members 
TransformationPlane Overload Tekla.Structures.Model Namespace 

See Also	2050 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2051 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Methods 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TransformationPlane type exposes the following members. 
Methods 
  	Name	Description 
Returns a string representation of the matrices that transform to local and global coordinates. 
(Overrides Object..::..ToString()()()().) 
See Also 
TransformationPlane Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2052 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 TransformationPlane..::..ToString Method 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns a string representation of the matrices that transform to local and global coordinates. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override string ToString() 
Visual Basic 
Public Overrides Function ToString As String 
Return Value 

Type: String 
A string representation of the matrices that transform to local and global coordinates. 
See Also 
TransformationPlane Class 
TransformationPlane Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2053 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
TransformationPlane Properties 
TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The TransformationPlane type exposes the following members. 
Properties 
  	Name	Description 
Gives a transformation matrix for converting local 
TransformationMatrixToGlobal 


TransformationMatrixToLocal 

See Also 
TransformationPlane Class Tekla.Structures.Model Namespace 


points in the transformation plane to global coordinates. 
Gives a transformation matrix for converting points in the global plane to local coordinates in the transformation plane. 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2054 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 TransformationPlane..::..TransformationMatrixToGlobal Property TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gives a transformation matrix for converting local points in the transformation plane to global coordinates. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Matrix TransformationMatrixToGlobal { get; } 
Visual Basic 
Public ReadOnly Property TransformationMatrixToGlobal As Matrix 
Get 
Property Value 
Type: Matrix 
See Also 
TransformationPlane Class TransformationPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2055 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 TransformationPlane..::..TransformationMatrixToLocal Property TransformationPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gives a transformation matrix for converting points in the global plane to local coordinates in the transformation plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Matrix TransformationMatrixToLocal { get; } 
Visual Basic 
Public ReadOnly Property TransformationMatrixToLocal As Matrix 
Get 
Property Value 
Type: Matrix 
See Also 
TransformationPlane Class TransformationPlane Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2056 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Weld class represents a normal weld in the model. A normal weld has a main part and a secondary part. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Weld : BaseWeld 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Weld 
Inherits BaseWeld 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Point Beam1P1 = new Point(   0, 12000, 0);            Point Beam1P2 = new Point(3000, 12000, 0); 
           Point Beam2P1 = new Point(3000, 12000, 0);            Point Beam2P2 = new Point(3000, 18000, 0); 
           Beam Beam1 = new Beam(Beam1P1, Beam1P2);            Beam Beam2 = new Beam(Beam2P1, Beam2P2); 
           Beam1.Profile.ProfileString = "HEA400";            Beam1.Finish = "PAINT"; 
           Beam1.Name = "Beam 1"; 
           Beam2.Name = "Beam 2"; 
           Beam1.Insert(); 
           Beam2.Insert(); 
           Weld Weld = new Weld(); 

Examples	2057 


Point Fields 
           Weld.MainObject = Beam1; 
           Weld.SecondaryObject = Beam2; 
           Weld.TypeAbove = BaseWeld.WeldTypeEnum.WELD_TYPE_SQUARE_GROOVE_SQUARE_BUTT; 
           Weld.Insert(); 
           Weld.LengthAbove = 12; 
           Weld.TypeBelow = BaseWeld.WeldTypeEnum.WELD_TYPE_SLOT; 
           Weld.Modify(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..Object 
        Tekla.Structures.Model..::..ModelObject 
            Tekla.Structures.Model..::..BaseWeld                 Tekla.Structures.Model..::..Weld 
See Also 
Weld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 


























See Also	2058 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Weld Members 
Weld Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Weld type exposes the following members. 
Constructors 
  	Name	Description 
Weld	Creates a new weld instance. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the weld instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
GetDoubleReportProperties	Retrieves multiple double report properties for the 
model object. It is faster to fetch multiple 

Methods	2059 


Point Fields 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetLogicalWeld 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Gets the logical weld where the weld belongs. Returns false if the weld does not belong to any logical weld. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
(Inherited from BaseWeld.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 


Methods	2060 




GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 

GetWeldGeometries 


Insert 


Modify 



Point Fields 
Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
(Inherited from BaseWeld.) 
Inserts the weld into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing weld in the model database to match the current one. The modification cannot be done if the weld is a part of a logical weld. (Overrides ModelObject..::..Modify()()()().) 
Selects a weld from the model database. The weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
(Inherited from BaseWeld.) AngleBelow	Gets or sets the angle below. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is an around weld (true) or an edge weld (false). 
(Inherited from BaseWeld.) 
ConnectAssemblies	Gets or sets a value indicating whether to connect a part 
or an assembly as a secondary part (false) or as a 

Properties	2061 


Point Fields 
sub-assembly (true). 
(Inherited from BaseWeld.) 
ContourAbove	Gets or sets the contour above. 
(Inherited from BaseWeld.) 
ContourBelow	Gets or sets the contour below. 
(Inherited from BaseWeld.) 
Direction	Defines the Weld edge search direction normalized to 
length 1000.0. Overrides Position if set. EffectiveThroatAbove	Gets or sets the effective throat above. 
(Inherited from BaseWeld.) 
EffectiveThroatBelow	Gets or sets the effective throat below. 
(Inherited from BaseWeld.) 
ElectrodeClassification	Gets or sets the weld electrode classification. 
(Inherited from BaseWeld.) 
ElectrodeCoefficient	Gets or sets the electrode strength coefficient. 
(Inherited from BaseWeld.) 
ElectrodeStrength	Gets or sets the electrode strength. 
(Inherited from BaseWeld.) 
FinishAbove	Gets or sets the finish above. 
(Inherited from BaseWeld.) 
FinishBelow	Gets or sets the finish below. 
(Inherited from BaseWeld.) Identifier	The identifier of the object. 
(Inherited from Object.) 
IncrementAmountAbove Gets or sets the increment amount above. 
(Inherited from BaseWeld.) 
IncrementAmountBelow Gets or sets the increment amount below. 
(Inherited from BaseWeld.) 
IntermittentType	Gets or sets the weld intermittent type. 
(Inherited from BaseWeld.) 
LengthAbove	Gets or sets the length above. 
(Inherited from BaseWeld.) 
LengthBelow	Gets or sets the length below. 
(Inherited from BaseWeld.) 
MainObject	Gets or sets the main part of the weld. 
(Inherited from BaseWeld.) 
NDTInspection	Gets or sets the NDT inspection level. 
(Inherited from BaseWeld.) 
PitchAbove	Gets or sets the pitch above. 
(Inherited from BaseWeld.) 
PitchBelow	Gets or sets the pitch below. 
(Inherited from BaseWeld.) 
Placement	Gets or sets the weld placement. 
(Inherited from BaseWeld.) 
Properties	2062 


Point Fields 
Position	Defines the position. Use of Direction is preferred over 
this. 
PrefixAboveLine	Gets or sets the size prefix above the line. 
(Inherited from BaseWeld.) 
PrefixBelowLine	Gets or sets the size prefix below the line. 
(Inherited from BaseWeld.) 
Preparation	Gets or sets the weld preparation. 
(Inherited from BaseWeld.) 
ProcessType	Gets or sets the process type. 
(Inherited from BaseWeld.) 
ReferenceText	Gets or sets the reference text. 
(Inherited from BaseWeld.) 
RootFaceAbove	Gets or sets the root face above. 
(Inherited from BaseWeld.) 
RootFaceBelow	Gets or sets the root face below. 
(Inherited from BaseWeld.) 
RootOpeningAbove	Gets or sets the root opening above. 
(Inherited from BaseWeld.) 
RootOpeningBelow	Gets or sets the root opening below. 
(Inherited from BaseWeld.) 
SecondaryObject	Gets or sets the secondary part of the weld. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
(Inherited from BaseWeld.) 
SizeAbove	Gets or sets the size above. 
(Inherited from BaseWeld.) SizeBelow	Gets or sets the size below. 
(Inherited from BaseWeld.) 
Obsolete. 
Standard 


Gets or sets the weld detail/standard. (Inherited from BaseWeld.) 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
(Inherited from BaseWeld.) 
TypeAbove	Gets or sets the type above. 
(Inherited from BaseWeld.) 
TypeBelow	Gets or sets the type below. 
(Inherited from BaseWeld.) 
WeldNumber	Gets the weld number. 
(Inherited from BaseWeld.) 
WeldNumberPrefix	Gets or sets the weld number prefix. 
(Inherited from BaseWeld.) 
Properties	2063 


Point Fields 

See Also 
Weld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2064 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld Constructor 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new weld instance. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Weld() 
Visual Basic 
Public Sub New 
See Also 
Weld Class 
Weld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2065 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Weld Methods 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Weld type exposes the following members. 
Methods 
  	Name	Description 
CompareTo	Compares Identifiers of model objects. 
(Inherited from ModelObject.) 
Deletes the weld instance with the given identifier from the model database. 
(Overrides ModelObject..::..Delete()()()().) 
Equals	Check if Identifiers of model objects are same. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be 
GetAllReportProperties 



GetAllUserProperties 


GetChildren 


GetCoordinateSystem 


checked using type casting. 
(Inherited from ModelObject.) 
Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting. 
(Inherited from ModelObject.) 
Returns an enumerator of all the children model objects. 
(Inherited from ModelObject.) 
Returns the coordinate system for the given model object. 
(Inherited from ModelObject.) 
Retrieves multiple double report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetDoubleUserProperties	Retrieves all double properties for the model object. 
(Inherited from ModelObject.) 
GetDynamicStringProperty 

Methods	2066 


Point Fields 
Gets a dynamic string property from the model object. 
(Inherited from ModelObject.) 
GetFatherComponent	Returns the father component of the model object. 
(Inherited from ModelObject.) 
Returns an enumerator of all the connected 
GetHierarchicObjects 


GetIntegerReportProperties 


GetIntegerUserProperties 


GetLogicalWeld 


GetPhase 


GetReportProperty(String, Double%) 

GetReportProperty(String, Int32%) 


hierarchic objects. 
(Inherited from ModelObject.) 
Retrieves multiple integer report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
Retrieves all integer properties for the model object. 
(Inherited from ModelObject.) 
Gets the logical weld where the weld belongs. Returns false if the weld does not belong to any logical weld. 
Retrieves the phase of the model object (the phase number, the phase name, the phase comment and whether the phase is the current one or not). (Inherited from ModelObject.) 
Retrieves a double property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves an integer property of the report for the model object. 
(Inherited from ModelObject.) 
Retrieves a string property of the report for the model object. 
(Inherited from ModelObject.) 
GetSolid	Method for getting the weld solid. 
(Inherited from BaseWeld.) 
Retrieves multiple string report properties for the model object. It is faster to fetch multiple 
properties at once. 
(Inherited from ModelObject.) 
GetStringUserProperties	Retrieves all string properties for the model object. 
(Inherited from ModelObject.) 
GetUserProperty(String, 
Double%) 
GetUserProperty(String, Int32%) 
GetUserProperty(String, String%) 


Retrieves an integer property for the model object. (Inherited from ModelObject.) 
Retrieves a string property for the model object. (Inherited from ModelObject.) 


Methods	2067 





GetWeldGeometries 


Insert 


Modify 



Point Fields 
Method for getting weld seam geometries. Every result represents one individual seam geometry in current weld. 
(Inherited from BaseWeld.) 
Inserts the weld into the model database. All the attributes must be set. 
(Overrides ModelObject..::..Insert()()()().) 
Modifies the existing weld in the model database to match the current one. The modification cannot be done if the weld is a part of a logical weld. (Overrides ModelObject..::..Modify()()()().) 
Selects a weld from the model database. The weld identifier must be set. 
(Overrides ModelObject..::..Select()()()().) 
SetDynamicStringProperty	Sets a dynamic string property for the model object. 
(Inherited from ModelObject.) 
Sets a label for an object when a new instance is created. The label is used in plug-ins for identifying the changed object in modification. 
(Inherited from ModelObject.) 
SetPhase	Sets the phase of the model object. 
(Inherited from ModelObject.) 
SetUserProperty(String, 
Double) 
SetUserProperty(String, Int32) 
SetUserProperty(String, String) 


Sets an integer property for the model object. (Inherited from ModelObject.) 
Sets a string property for the model object. (Inherited from ModelObject.) 
See Also 
Weld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2068 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..Delete Method 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the weld instance with the given identifier from the model database. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Delete() 
Visual Basic 
Public Overrides Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Weld Class 
Weld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2069 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..GetLogicalWeld Method 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the logical weld where the weld belongs. Returns false if the weld does not belong to any logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool GetLogicalWeld( ref LogicalWeld LogicalWeld 
) 
Visual Basic 
Public Function GetLogicalWeld (  ByRef LogicalWeld As LogicalWeld 
) As Boolean 
Parameters 

LogicalWeld 
Type: Tekla.Structures.Model..::..LogicalWeld% 
An initialized logical weld object. 

Return Value 

Type: Boolean 
True if the logical weld was selected correctly; false otherwise. 
See Also 
Weld Class 
Weld Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2070 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..Insert Method 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Inserts the weld into the model database. All the attributes must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Insert() 
Visual Basic 
Public Overrides Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Weld Class 
Weld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2071 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..Modify Method 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the existing weld in the model database to match the current one. The modification cannot be done if the weld is a part of a logical weld. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Modify() 
Visual Basic 
Public Overrides Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Weld Class 
Weld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2072 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..Select Method 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Selects a weld from the model database. The weld identifier must be set. Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override bool Select() 
Visual Basic 
Public Overrides Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
Weld Class 
Weld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2073 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Weld Properties 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Weld type exposes the following members. 
Properties 
  	Name	Description 
AngleAbove	Gets or sets the angle above. 
(Inherited from BaseWeld.) AngleBelow	Gets or sets the angle below. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is an 
AroundWeld 


around weld (true) or an edge weld (false). 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether to connect a part or an assembly as a secondary part (false) or as a sub-assembly (true). 
(Inherited from BaseWeld.) 
ContourAbove	Gets or sets the contour above. 
(Inherited from BaseWeld.) 
ContourBelow	Gets or sets the contour below. 
(Inherited from BaseWeld.) 
Direction	Defines the Weld edge search direction normalized to 
length 1000.0. Overrides Position if set. EffectiveThroatAbove	Gets or sets the effective throat above. 
(Inherited from BaseWeld.) 
EffectiveThroatBelow	Gets or sets the effective throat below. 
(Inherited from BaseWeld.) 
ElectrodeClassification	Gets or sets the weld electrode classification. 
(Inherited from BaseWeld.) 
ElectrodeCoefficient	Gets or sets the electrode strength coefficient. 
(Inherited from BaseWeld.) 
ElectrodeStrength	Gets or sets the electrode strength. 
(Inherited from BaseWeld.) 
Properties	2074 


Point Fields 
FinishAbove	Gets or sets the finish above. 
(Inherited from BaseWeld.) 
FinishBelow	Gets or sets the finish below. 
(Inherited from BaseWeld.) Identifier	The identifier of the object. 
(Inherited from Object.) 
IncrementAmountAbove Gets or sets the increment amount above. 
(Inherited from BaseWeld.) 
IncrementAmountBelow Gets or sets the increment amount below. 
(Inherited from BaseWeld.) 
IntermittentType	Gets or sets the weld intermittent type. 
(Inherited from BaseWeld.) 
LengthAbove	Gets or sets the length above. 
(Inherited from BaseWeld.) 
LengthBelow	Gets or sets the length below. 
(Inherited from BaseWeld.) 
MainObject	Gets or sets the main part of the weld. 
(Inherited from BaseWeld.) 
NDTInspection	Gets or sets the NDT inspection level. 
(Inherited from BaseWeld.) 
PitchAbove	Gets or sets the pitch above. 
(Inherited from BaseWeld.) 
PitchBelow	Gets or sets the pitch below. 
(Inherited from BaseWeld.) 
Placement	Gets or sets the weld placement. 
(Inherited from BaseWeld.) 
Position	Defines the position. Use of Direction is preferred over 
this. 
PrefixAboveLine	Gets or sets the size prefix above the line. 
(Inherited from BaseWeld.) 
PrefixBelowLine	Gets or sets the size prefix below the line. 
(Inherited from BaseWeld.) 
Preparation	Gets or sets the weld preparation. 
(Inherited from BaseWeld.) 
ProcessType	Gets or sets the process type. 
(Inherited from BaseWeld.) 
ReferenceText	Gets or sets the reference text. 
(Inherited from BaseWeld.) 
RootFaceAbove	Gets or sets the root face above. 
(Inherited from BaseWeld.) 
RootFaceBelow	Gets or sets the root face below. 
(Inherited from BaseWeld.) 
RootOpeningAbove	Gets or sets the root opening above. 
(Inherited from BaseWeld.) 
Properties	2075 


Point Fields 
RootOpeningBelow	Gets or sets the root opening below. 
(Inherited from BaseWeld.) SecondaryObject	Gets or sets the secondary part of the weld. 
(Inherited from BaseWeld.) 
Gets or sets a value indicating whether the weld is a shop weld (true) or a site weld (false). 
(Inherited from BaseWeld.) 
SizeAbove	Gets or sets the size above. 
(Inherited from BaseWeld.) SizeBelow	Gets or sets the size below. 
(Inherited from BaseWeld.) 
Obsolete. 
Standard 


Gets or sets the weld detail/standard. (Inherited from BaseWeld.) 
Obsolete. 
Gets or sets a value indicating whether the weld is stitched (true) or not stitched (false). 
(Inherited from BaseWeld.) 
TypeAbove	Gets or sets the type above. 
(Inherited from BaseWeld.) 
TypeBelow	Gets or sets the type below. 
(Inherited from BaseWeld.) 
WeldNumber	Gets the weld number. 
(Inherited from BaseWeld.) 
WeldNumberPrefix	Gets or sets the weld number prefix. 
(Inherited from BaseWeld.) 
See Also 
Weld Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2076 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..Direction Property 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines the Weld edge search direction normalized to length 1000.0. Overrides Position if set. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector Direction { get; set; } 
Visual Basic 
Public Property Direction As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
Weld Class 
Weld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2077 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..Position Property 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the position. Use of Direction is preferred over this. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Weld..::..WeldPositionEnum Position { get; set; } 
Visual Basic 
Public Property Position As Weld..::..WeldPositionEnum 
Get 
Set 
Property Value 

Type: Weld..::..WeldPositionEnum 
See Also 
Weld Class 
Weld Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2078 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Weld..::..WeldPositionEnum Enumeration 
Weld Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The weld position. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldPositionEnum 
Visual Basic 
Public Enumeration WeldPositionEnum 
Members 
Member name	Value		Description WELD_POSITION_PLUS_X	1	The position +x. 
WELD_POSITION_MINUS_X 2	The position -x. WELD_POSITION_PLUS_Y	3	The position +y. WELD_POSITION_MINUS_Y  4	The position -y. WELD_POSITION_PLUS_Z	5	The position +z. WELD_POSITION_MINUS_Z 6	The position -z. 
See Also 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2079 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
WorkPlaneHandler Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The WorkPlaneHandler class contains methods for getting and setting the current transformation plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class WorkPlaneHandler 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class WorkPlaneHandler 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model..::..WorkPlaneHandler 
See Also 
WorkPlaneHandler Members 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2080 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
WorkPlaneHandler Members 
WorkPlaneHandler Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The WorkPlaneHandler type exposes the following members. 
Methods 
  	Name	Description 
GetCurrentTransformationPlane Gets the current transformation plane. SetCurrentTransformationPlane	Sets the current transformation plane. 
See Also 
WorkPlaneHandler Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2081 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
WorkPlaneHandler Methods 
WorkPlaneHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The WorkPlaneHandler type exposes the following members. 
Methods 
  	Name	Description 
GetCurrentTransformationPlane Gets the current transformation plane. SetCurrentTransformationPlane	Sets the current transformation plane. 
See Also 
WorkPlaneHandler Class 
Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2082 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 WorkPlaneHandler..::..GetCurrentTransformationPlane Method 
WorkPlaneHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets the current transformation plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public TransformationPlane GetCurrentTransformationPlane() 
Visual Basic 
Public Function GetCurrentTransformationPlane As TransformationPlane 
Return Value 

Type: TransformationPlane 
The current transformation plane. 
See Also 
WorkPlaneHandler Class WorkPlaneHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2083 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 WorkPlaneHandler..::..SetCurrentTransformationPlane Method 
WorkPlaneHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the current transformation plane. 
Namespace:  Tekla.Structures.Model 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SetCurrentTransformationPlane( 
TransformationPlane TransformationPlane 
) 
Visual Basic 
Public Function SetCurrentTransformationPlane (  
TransformationPlane As TransformationPlane 
) As Boolean 
Parameters 

TransformationPlane 
Type: Tekla.Structures.Model..::..TransformationPlane 
The transformation plane to be set as the current transformation plane. 

Return Value 
Type: Boolean 
False on failure. 
See Also 
WorkPlaneHandler Class WorkPlaneHandler Members Tekla.Structures.Model Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2084 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Tekla.Structures.Model.ClashChecker Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Model.ClashChecker namespace contains classes related to 
clash checking. 
Classes 
  	Class	Description 
ClashChekerEvent The ClashChekerEvent class contains methods related to clash 
check events. 
Delegates 
  	Delegate	Description 
ClashChekerEvent..::..ClashCheckDoneDelegate	The delegate to use for clash 
check completion. 
The delegate to use for clash detection. Encapsulates any 
ClashChekerEvent..::..ClashDetectedDelegate 


Copyright  © Tekla 2013. All rights reserved. 


method that takes a clash check data object as a parameter. 



















Delegates	2085 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClashChekerEvent Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ClashChekerEvent class contains methods related to clash check events. Namespace:  Tekla.Structures.Model.ClashChecker 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public static class ClashChekerEvent 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ClashChekerEvent 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.ClashChecker..::..ClashChekerEvent 
See Also 
ClashChekerEvent Members 
Tekla.Structures.Model.ClashChecker Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2086 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClashChekerEvent Members 
ClashChekerEvent Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashChekerEvent type exposes the following members. 
Methods 
  	Name	Description 
GetClashCheckHandler Returns a new clash check handler. See Also 
ClashChekerEvent Class 
Tekla.Structures.Model.ClashChecker Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2087 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClashChekerEvent Methods 
ClashChekerEvent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClashChekerEvent type exposes the following members. 
Methods 
  	Name	Description 
GetClashCheckHandler Returns a new clash check handler. See Also 
ClashChekerEvent Class 
Tekla.Structures.Model.ClashChecker Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2088 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashChekerEvent..::..GetClashCheckHandler Method 
ClashChekerEvent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new clash check handler. 
Namespace:  Tekla.Structures.Model.ClashChecker 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ClashCheckHandler GetClashCheckHandler() 
Visual Basic 
Public Shared Function GetClashCheckHandler As ClashCheckHandler 
Return Value 

Type: ClashCheckHandler 
The new clash check handler instance. 
See Also 
ClashChekerEvent Class 
ClashChekerEvent Members Tekla.Structures.Model.ClashChecker Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2089 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashChekerEvent..::..ClashCheckDoneDelegate Delegate 
ClashChekerEvent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The delegate to use for clash check completion. 
Namespace:  Tekla.Structures.Model.ClashChecker 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ClashCheckDoneDelegate( 
int nClashes 
) 
Visual Basic 
Public Delegate Sub ClashCheckDoneDelegate (  
nClashes As Integer 
) 
Parameters 

nClashes 
Type: System..::..Int32 
See Also 
Tekla.Structures.Model.ClashChecker Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2090 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClashChekerEvent..::..ClashDetectedDelegate Delegate 
ClashChekerEvent Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The delegate to use for clash detection. Encapsulates any method that takes a clash check data object as a parameter. 
Namespace:  Tekla.Structures.Model.ClashChecker 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public delegate void ClashDetectedDelegate( 
ClashCheckData ClashData 
) 
Visual Basic 
Public Delegate Sub ClashDetectedDelegate (  
ClashData As ClashCheckData 
) 
Parameters 

ClashData 
Type: Tekla.Structures.Model..::..ClashCheckData 
See Also 
Tekla.Structures.Model.ClashChecker Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2091 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Tekla.Structures.Model.Collaboration Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Model.Collaboration namespace contains some extra 
functionality to get information about IFC reference model objects. This functionality 
is not really a part of the Tekla product model and might change in the near future. 
Classes 
  	Class	Description 
The IFC2X3_ParametricObject_Circle class contains the circular and hollow definition. 
IFC2X3_ParametricObject_CircleProfile	The IFC2X3_ParametricObject_Circle 
contains the circular profile definition IFC2X3_ParametricObject_CShapeProfile	The IFC2X3_ParametricObject_CShap 
contains the C-shape profile definitio IFC2X3_ParametricObject_EllipseProfile	The IFC2X3_ParametricObject_Ellips 
contains the ellipse profile definition. IFC2X3_ParametricObject_IShapeProfile	The IFC2X3_ParametricObject_IShap 
contains the I-shape profile definition IFC2X3_ParametricObject_LShapeProfile	The IFC2X3_ParametricObject_LShap 
contains the L-shape profile definition 
The IFC2X3_ParametricObject_Rectangle class contains the rectangular and ho definition. 
IFC2X3_ParametricObject_RectangleProfile	The IFC2X3_ParametricObject_Recta class contains the rectangular profile 
IFC2X3_ParametricObject_TShapeProfile	The IFC2X3_ParametricObject_TShap 
contains the T-shape profile definition IFC2X3_ParametricObject_UShapeProfile	The IFC2X3_ParametricObject_UShap 
contains the U-shape profile definitio IFC2X3_ParametricObject_ZShapeProfile	The IFC2X3_ParametricObject_ZShap 
contains the Z-shape profile definition ParametricObject_CustomProfile	The ParametricObject_CustomProfile  
contains the custom profile definition ParametricObject_ObjectBoundingBox	The ParametricObject_ObjectBoundin 
contains the object bounding box (OB 
Classes	2092 






ReferenceModelObjectAttribute 



Point Fields 
The ReferenceModelObjectAttribute c class from where concrete attributes  from. The documentation about differ and their function can be found from  specification, for example from the IF specification. 
The ReferenceModelObjectAttributeE 
ReferenceModelObjectAttributeEnumerator 


class can be used to enumerate throu model object attributes. 
Enumerations 
  	Enumeration	Description 
ReferenceModelObjectAttribute..::..AttributeTypeEnum	All the reference model 
object attribute types. 

Copyright  © Tekla 2013. All rights reserved. 
































Enumerations	2093 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleHollowProfile Class Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_CircleHollowProfile class contains the circular and 
hollow profile definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_CircleHollowProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_CircleHollowProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_CircleHollowPro 
See Also 
IFC2X3_ParametricObject_CircleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2094 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleHollowProfile Members IFC2X3_ParametricObject_CircleHollowProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_CircleHollowProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
Radius	The radius. 
WallThickness The wall thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_CircleHollowProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	2095 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleHollowProfile Properties IFC2X3_ParametricObject_CircleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_CircleHollowProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
Radius	The radius. 
WallThickness The wall thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_CircleHollowProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2096 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleHollowProfile..::..Radius Property IFC2X3_ParametricObject_CircleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Radius { get; } 
Visual Basic 
Public ReadOnly Property Radius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CircleHollowProfile Class IFC2X3_ParametricObject_CircleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2097 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleHollowProfile..::..WallThickness Property IFC2X3_ParametricObject_CircleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The wall thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WallThickness { get; } 
Visual Basic 
Public ReadOnly Property WallThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CircleHollowProfile Class IFC2X3_ParametricObject_CircleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2098 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_CircleProfile class contains the circular profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_CircleProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_CircleProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_CircleProfile 
See Also 
IFC2X3_ParametricObject_CircleProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2099 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleProfile Members IFC2X3_ParametricObject_CircleProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_CircleProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
Radius	The radius. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_CircleProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2100 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleProfile Properties IFC2X3_ParametricObject_CircleProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_CircleProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
Radius	The radius. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_CircleProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2101 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CircleProfile..::..Radius Property IFC2X3_ParametricObject_CircleProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Radius { get; } 
Visual Basic 
Public ReadOnly Property Radius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CircleProfile Class IFC2X3_ParametricObject_CircleProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2102 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_CShapeProfile class contains the C-shape profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_CShapeProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_CShapeProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_CShapeProfile 
See Also 
IFC2X3_ParametricObject_CShapeProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2103 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile Members IFC2X3_ParametricObject_CShapeProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_CShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Girth	The girth. 
InternalFilletRadius The internal fillet radius. Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WallThickness	The wall thickness. 
Width	The width. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2104 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile Properties IFC2X3_ParametricObject_CShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_CShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Girth	The girth. 
InternalFilletRadius The internal fillet radius. Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WallThickness	The wall thickness. 
Width	The width. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2105 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile..::..Depth Property IFC2X3_ParametricObject_CShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The depth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Depth { get; } Visual Basic 
Public ReadOnly Property Depth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class IFC2X3_ParametricObject_CShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2106 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile..::..Girth Property IFC2X3_ParametricObject_CShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The girth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Girth { get; } Visual Basic 
Public ReadOnly Property Girth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class IFC2X3_ParametricObject_CShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2107 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile..::..InternalFilletRadius Property IFC2X3_ParametricObject_CShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The internal fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double InternalFilletRadius { get; } 
Visual Basic 
Public ReadOnly Property InternalFilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class IFC2X3_ParametricObject_CShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2108 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile..::..WallThickness Property IFC2X3_ParametricObject_CShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The wall thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WallThickness { get; } 
Visual Basic 
Public ReadOnly Property WallThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class IFC2X3_ParametricObject_CShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2109 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_CShapeProfile..::..Width Property IFC2X3_ParametricObject_CShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The width. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Width { get; } Visual Basic 
Public ReadOnly Property Width As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_CShapeProfile Class IFC2X3_ParametricObject_CShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2110 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_EllipseProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_EllipseProfile class contains the ellipse profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_EllipseProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_EllipseProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_EllipseProfile 
See Also 
IFC2X3_ParametricObject_EllipseProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2111 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_EllipseProfile Members IFC2X3_ParametricObject_EllipseProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_EllipseProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
SemiAxis1	The first semi-axis. 
SemiAxis2	The second semi-axis. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_EllipseProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2112 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_EllipseProfile Properties IFC2X3_ParametricObject_EllipseProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_EllipseProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
SemiAxis1	The first semi-axis. 
SemiAxis2	The second semi-axis. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_EllipseProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2113 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_EllipseProfile..::..SemiAxis1 Property IFC2X3_ParametricObject_EllipseProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The first semi-axis. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SemiAxis1 { get; } 
Visual Basic 
Public ReadOnly Property SemiAxis1 As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_EllipseProfile Class IFC2X3_ParametricObject_EllipseProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2114 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_EllipseProfile..::..SemiAxis2 Property IFC2X3_ParametricObject_EllipseProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The second semi-axis. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double SemiAxis2 { get; } 
Visual Basic 
Public ReadOnly Property SemiAxis2 As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_EllipseProfile Class IFC2X3_ParametricObject_EllipseProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2115 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_IShapeProfile class contains the I-shape profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_IShapeProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_IShapeProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_IShapeProfile 
See Also 
IFC2X3_ParametricObject_IShapeProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2116 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile Members IFC2X3_ParametricObject_IShapeProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_IShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
FlangeThickness The flange thickness. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) OverallDepth	The overall depth. 
OverallWidth	The overall width. 
ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2117 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile Properties IFC2X3_ParametricObject_IShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_IShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
FlangeThickness The flange thickness. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) OverallDepth	The overall depth. 
OverallWidth	The overall width. 
ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2118 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile..::..FilletRadius Property IFC2X3_ParametricObject_IShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FilletRadius { get; } 
Visual Basic 
Public ReadOnly Property FilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class IFC2X3_ParametricObject_IShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2119 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile..::..FlangeThickness Property IFC2X3_ParametricObject_IShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeThickness { get; } 
Visual Basic 
Public ReadOnly Property FlangeThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class IFC2X3_ParametricObject_IShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2120 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile..::..OverallDepth Property IFC2X3_ParametricObject_IShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The overall depth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double OverallDepth { get; } 
Visual Basic 
Public ReadOnly Property OverallDepth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class IFC2X3_ParametricObject_IShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2121 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile..::..OverallWidth Property IFC2X3_ParametricObject_IShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The overall width. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double OverallWidth { get; } 
Visual Basic 
Public ReadOnly Property OverallWidth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class IFC2X3_ParametricObject_IShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2122 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_IShapeProfile..::..WebThickness Property IFC2X3_ParametricObject_IShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The web thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WebThickness { get; } 
Visual Basic 
Public ReadOnly Property WebThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_IShapeProfile Class IFC2X3_ParametricObject_IShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2123 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_LShapeProfile class contains the L-shape profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_LShapeProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_LShapeProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_LShapeProfile 
See Also 
IFC2X3_ParametricObject_LShapeProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2124 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile Members IFC2X3_ParametricObject_LShapeProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_LShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
EdgeRadius	The edge radius. 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
LegSlope	The leg slope. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
Thickness	The thickness. 
Width	The width. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 


See Also	2125 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2126 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile Properties IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_LShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
EdgeRadius	The edge radius. 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
LegSlope	The leg slope. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
Thickness	The thickness. 
Width	The width. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2127 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile..::..Depth Property IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The depth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Depth { get; } Visual Basic 
Public ReadOnly Property Depth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class IFC2X3_ParametricObject_LShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2128 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile..::..EdgeRadius Property IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The edge radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EdgeRadius { get; } 
Visual Basic 
Public ReadOnly Property EdgeRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class IFC2X3_ParametricObject_LShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2129 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile..::..FilletRadius Property IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FilletRadius { get; } 
Visual Basic 
Public ReadOnly Property FilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class IFC2X3_ParametricObject_LShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2130 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile..::..LegSlope Property IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The leg slope. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double LegSlope { get; } 
Visual Basic 
Public ReadOnly Property LegSlope As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class IFC2X3_ParametricObject_LShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2131 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile..::..Thickness Property IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Thickness { get; } 
Visual Basic 
Public ReadOnly Property Thickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class IFC2X3_ParametricObject_LShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2132 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_LShapeProfile..::..Width Property IFC2X3_ParametricObject_LShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The width. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Width { get; } Visual Basic 
Public ReadOnly Property Width As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_LShapeProfile Class IFC2X3_ParametricObject_LShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2133 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_RectangleHollowProfile class contains the rectangular 
and hollow profile definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_RectangleHollowProfile : ReferenceModelObjectAttribu 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_RectangleHollowProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_RectangleHollow 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2134 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile Members IFC2X3_ParametricObject_RectangleHollowProfile 
Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_RectangleHollowProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) InnerFilletRadius	The inner fillet radius. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) OuterFilletRadius The outer fillet radius. 
ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WallThickness	The wall thickness. 
XDim	The X dimension. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
YDim	The Y dimension. 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class Tekla.Structures.Model.Collaboration Namespace 


See Also	2135 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2136 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile Properties IFC2X3_ParametricObject_RectangleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_RectangleHollowProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) InnerFilletRadius	The inner fillet radius. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) OuterFilletRadius The outer fillet radius. 
ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WallThickness	The wall thickness. 
XDim	The X dimension. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
YDim	The Y dimension. 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2137 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile..::..InnerFilletRadius Property IFC2X3_ParametricObject_RectangleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The inner fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double InnerFilletRadius { get; } 
Visual Basic 
Public ReadOnly Property InnerFilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class IFC2X3_ParametricObject_RectangleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2138 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile..::..OuterFilletRadius Property IFC2X3_ParametricObject_RectangleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The outer fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double OuterFilletRadius { get; } 
Visual Basic 
Public ReadOnly Property OuterFilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class IFC2X3_ParametricObject_RectangleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2139 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile..::..WallThickness Property IFC2X3_ParametricObject_RectangleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The wall thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WallThickness { get; } 
Visual Basic 
Public ReadOnly Property WallThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class IFC2X3_ParametricObject_RectangleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2140 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile..::..XDim Property IFC2X3_ParametricObject_RectangleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The X dimension. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double XDim { get; } 
Visual Basic 
Public ReadOnly Property XDim As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class IFC2X3_ParametricObject_RectangleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2141 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleHollowProfile..::..YDim Property IFC2X3_ParametricObject_RectangleHollowProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Y dimension. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double YDim { get; } 
Visual Basic 
Public ReadOnly Property YDim As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleHollowProfile Class IFC2X3_ParametricObject_RectangleHollowProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2142 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_RectangleProfile class contains the rectangular profile definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_RectangleProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_RectangleProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_RectangleProfile 
See Also 
IFC2X3_ParametricObject_RectangleProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2143 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleProfile Members IFC2X3_ParametricObject_RectangleProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_RectangleProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
XDim	The X dimension. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
YDim	The Y dimension. 
See Also 
IFC2X3_ParametricObject_RectangleProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2144 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleProfile Properties IFC2X3_ParametricObject_RectangleProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_RectangleProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
XDim	The X dimension. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
YDim	The Y dimension. 
See Also 
IFC2X3_ParametricObject_RectangleProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2145 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleProfile..::..XDim Property IFC2X3_ParametricObject_RectangleProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The X dimension. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double XDim { get; } 
Visual Basic 
Public ReadOnly Property XDim As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleProfile Class IFC2X3_ParametricObject_RectangleProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2146 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_RectangleProfile..::..YDim Property IFC2X3_ParametricObject_RectangleProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Y dimension. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double YDim { get; } 
Visual Basic 
Public ReadOnly Property YDim As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_RectangleProfile Class IFC2X3_ParametricObject_RectangleProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2147 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_TShapeProfile class contains the T-shape profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_TShapeProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_TShapeProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_TShapeProfile 
See Also 
IFC2X3_ParametricObject_TShapeProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2148 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile Members IFC2X3_ParametricObject_TShapeProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_TShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) FilletRadius	The fillet radius. 
FlangeEdgeRadius The flange edge radius. 
FlangeSlope	The flange slope. 
FlangeThickness	The flange thickness. 
FlangeWidth	The flange width. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebEdgeRadius	The web edge radius. 
WebSlope	The web slope. 
WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 


Properties	2149 


Point Fields 

See Also 
IFC2X3_ParametricObject_TShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2150 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile Properties IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_TShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) FilletRadius	The fillet radius. 
FlangeEdgeRadius The flange edge radius. 
FlangeSlope	The flange slope. 
FlangeThickness	The flange thickness. 
FlangeWidth	The flange width. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebEdgeRadius	The web edge radius. 
WebSlope	The web slope. 
WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 



Properties	2151 


Point Fields 

See Also 
IFC2X3_ParametricObject_TShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2152 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..Depth Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The depth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Depth { get; } Visual Basic 
Public ReadOnly Property Depth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2153 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..FilletRadius Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FilletRadius { get; } 
Visual Basic 
Public ReadOnly Property FilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2154 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..FlangeEdgeRadius Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange edge radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeEdgeRadius { get; } 
Visual Basic 
Public ReadOnly Property FlangeEdgeRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2155 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..FlangeSlope Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange slope. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeSlope { get; } 
Visual Basic 
Public ReadOnly Property FlangeSlope As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2156 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..FlangeThickness Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeThickness { get; } 
Visual Basic 
Public ReadOnly Property FlangeThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2157 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..FlangeWidth Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange width. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeWidth { get; } 
Visual Basic 
Public ReadOnly Property FlangeWidth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2158 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..WebEdgeRadius Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The web edge radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WebEdgeRadius { get; } 
Visual Basic 
Public ReadOnly Property WebEdgeRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2159 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..WebSlope Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The web slope. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WebSlope { get; } 
Visual Basic 
Public ReadOnly Property WebSlope As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2160 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_TShapeProfile..::..WebThickness Property IFC2X3_ParametricObject_TShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The web thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WebThickness { get; } 
Visual Basic 
Public ReadOnly Property WebThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_TShapeProfile Class IFC2X3_ParametricObject_TShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2161 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_UShapeProfile class contains the U-shape profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_UShapeProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_UShapeProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_UShapeProfile 
See Also 
IFC2X3_ParametricObject_UShapeProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2162 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile Members IFC2X3_ParametricObject_UShapeProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_UShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
EdgeRadius	The edge radius. 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
FlangeSlope	The flange slope. 
FlangeThickness The flange thickness. 
FlangeWidth	The flange width. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 




Properties	2163 


Point Fields 

See Also 
IFC2X3_ParametricObject_UShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2164 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile Properties IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_UShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
EdgeRadius	The edge radius. 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
FlangeSlope	The flange slope. 
FlangeThickness The flange thickness. 
FlangeWidth	The flange width. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

See Also	2165 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2166 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..Depth Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The depth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Depth { get; } Visual Basic 
Public ReadOnly Property Depth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2167 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..EdgeRadius Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The edge radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EdgeRadius { get; } 
Visual Basic 
Public ReadOnly Property EdgeRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2168 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..FilletRadius Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FilletRadius { get; } 
Visual Basic 
Public ReadOnly Property FilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2169 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..FlangeSlope Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange slope. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeSlope { get; } 
Visual Basic 
Public ReadOnly Property FlangeSlope As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2170 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..FlangeThickness Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeThickness { get; } 
Visual Basic 
Public ReadOnly Property FlangeThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2171 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..FlangeWidth Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange width. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeWidth { get; } 
Visual Basic 
Public ReadOnly Property FlangeWidth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2172 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_UShapeProfile..::..WebThickness Property IFC2X3_ParametricObject_UShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The web thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WebThickness { get; } 
Visual Basic 
Public ReadOnly Property WebThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_UShapeProfile Class IFC2X3_ParametricObject_UShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2173 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The IFC2X3_ParametricObject_ZShapeProfile class contains the Z-shape profile 
definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class IFC2X3_ParametricObject_ZShapeProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class IFC2X3_ParametricObject_ZShapeProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_ZShapeProfile 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2174 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile Members IFC2X3_ParametricObject_ZShapeProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_ZShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
EdgeRadius	The edge radius. 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
FlangeThickness The flange thickness. 
FlangeWidth	The flange width. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 


See Also	2175 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2176 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile Properties IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The IFC2X3_ParametricObject_ZShapeProfile type exposes the following members. 
Properties 
  	Name	Description 
Depth	The depth. 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
EdgeRadius	The edge radius. 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
FilletRadius	The fillet radius. 
FlangeThickness The flange thickness. 
FlangeWidth	The flange width. 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) ProfileName	The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) WebThickness	The web thickness. 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2177 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile..::..Depth Property IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The depth. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Depth { get; } Visual Basic 
Public ReadOnly Property Depth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class IFC2X3_ParametricObject_ZShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2178 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile..::..EdgeRadius Property IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The edge radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double EdgeRadius { get; } 
Visual Basic 
Public ReadOnly Property EdgeRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class IFC2X3_ParametricObject_ZShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2179 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile..::..FilletRadius Property IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The fillet radius. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FilletRadius { get; } 
Visual Basic 
Public ReadOnly Property FilletRadius As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class IFC2X3_ParametricObject_ZShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2180 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile..::..FlangeThickness Property IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeThickness { get; } 
Visual Basic 
Public ReadOnly Property FlangeThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class IFC2X3_ParametricObject_ZShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2181 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile..::..FlangeWidth Property IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The flange width. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FlangeWidth { get; } 
Visual Basic 
Public ReadOnly Property FlangeWidth As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class IFC2X3_ParametricObject_ZShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2182 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 IFC2X3_ParametricObject_ZShapeProfile..::..WebThickness Property IFC2X3_ParametricObject_ZShapeProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The web thickness. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double WebThickness { get; } 
Visual Basic 
Public ReadOnly Property WebThickness As Double 
Get 
Property Value 
Type: Double 
See Also 
IFC2X3_ParametricObject_ZShapeProfile Class IFC2X3_ParametricObject_ZShapeProfile Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2183 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_CustomProfile Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ParametricObject_CustomProfile class contains the custom profile definition. Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ParametricObject_CustomProfile : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ParametricObject_CustomProfile 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..ParametricObject_CustomProfile 
See Also 
ParametricObject_CustomProfile Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2184 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_CustomProfile Members 
ParametricObject_CustomProfile Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ParametricObject_CustomProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
ParametricObject_CustomProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	2185 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_CustomProfile Properties 
ParametricObject_CustomProfile Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ParametricObject_CustomProfile type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
See Also 
ParametricObject_CustomProfile Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	2186 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_ObjectBoundingBox Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ParametricObject_ObjectBoundingBox class contains the object bounding box 
(OBB) definition. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ParametricObject_ObjectBoundingBox : ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ParametricObject_ObjectBoundingBox 
Inherits ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..ParametricObject_ObjectBoundingBox 
See Also 
ParametricObject_ObjectBoundingBox Members 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2187 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_ObjectBoundingBox Members ParametricObject_ObjectBoundingBox Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ParametricObject_ObjectBoundingBox type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
yDir	The Y direction. 
See Also 
ParametricObject_ObjectBoundingBox Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2188 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_ObjectBoundingBox Properties ParametricObject_ObjectBoundingBox Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ParametricObject_ObjectBoundingBox type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Extrusion	The extrusion vector. 
(Inherited from ReferenceModelObjectAttribute.) 
Name	The name of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
ObjectType	The object type of the product. 
(Inherited from ReferenceModelObjectAttribute.) 
Origin	The origin of the extrusion. 
(Inherited from ReferenceModelObjectAttribute.) 
ProfileName The name of the profile (often empty). 
(Inherited from ReferenceModelObjectAttribute.) 
xDir	The X-axis direction. 
(Inherited from ReferenceModelObjectAttribute.) 
yDir	The Y direction. 
See Also 
ParametricObject_ObjectBoundingBox Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2189 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ParametricObject_ObjectBoundingBox..::..yDir Property ParametricObject_ObjectBoundingBox Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Y direction. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector yDir { get; } 
Visual Basic 
Public ReadOnly Property yDir As Vector 
Get 
Property Value 
Type: Vector 
See Also 
ParametricObject_ObjectBoundingBox Class ParametricObject_ObjectBoundingBox Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2190 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObjectAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ReferenceModelObjectAttribute class is a base class from where concrete 
attributes are derived from. The documentation about different attributes and their 
function can be found from the vendor specification, for example from the IFC format specification. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public abstract class ReferenceModelObjectAttribute 
Visual Basic 
<SerializableAttribute> 
Public MustInherit Class ReferenceModelObjectAttribute 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttribute 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_CircleHollowPro 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_CircleProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_CShapeProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_EllipseProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_IShapeProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_LShapeProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_RectangleHollow         Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_RectangleProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_TShapeProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_UShapeProfile 
        Tekla.Structures.Model.Collaboration..::..IFC2X3_ParametricObject_ZShapeProfile 
        Tekla.Structures.Model.Collaboration..::..ParametricObject_CustomProfile 
        Tekla.Structures.Model.Collaboration..::..ParametricObject_ObjectBoundingBox 
See Also 
ReferenceModelObjectAttribute Members 
Tekla.Structures.Model.Collaboration Namespace 

See Also	2191 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2192 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObjectAttribute Members 
ReferenceModelObjectAttribute Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObjectAttribute type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
Extrusion	The extrusion vector. 
Name	The name of the product. 
ObjectType	The object type of the product. 
Origin	The origin of the extrusion. 
ProfileName The name of the profile (often empty). 
xDir	The X-axis direction. 
See Also 
ReferenceModelObjectAttribute Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2193 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ReferenceModelObjectAttribute Properties 
ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObjectAttribute type exposes the following members. 
Properties 
  	Name	Description 
Description	The description of the product. 
Extrusion	The extrusion vector. 
Name	The name of the product. 
ObjectType	The object type of the product. 
Origin	The origin of the extrusion. 
ProfileName The name of the profile (often empty). 
xDir	The X-axis direction. 
See Also 
ReferenceModelObjectAttribute Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2194 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..Description Property ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The description of the product. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Description { get; } 
Visual Basic 
Public ReadOnly Property Description As String 
Get 
Property Value 
Type: String 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2195 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..Extrusion Property ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The extrusion vector. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector Extrusion { get; } 
Visual Basic 
Public ReadOnly Property Extrusion As Vector 
Get 
Property Value 
Type: Vector 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2196 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..Name Property 
ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the product. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; } 
Visual Basic 
Public ReadOnly Property Name As String 
Get 
Property Value 
Type: String 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2197 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..ObjectType Property ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The object type of the product. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ObjectType { get; } 
Visual Basic 
Public ReadOnly Property ObjectType As String 
Get 
Property Value 
Type: String 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2198 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..Origin Property 
ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The origin of the extrusion. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Origin { get; } Visual Basic 
Public ReadOnly Property Origin As Point 
Get 
Property Value 
Type: Point 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2199 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..ProfileName Property ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the profile (often empty). 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ProfileName { get; set; } 
Visual Basic 
Public Property ProfileName As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2200 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..xDir Property 
ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The X-axis direction. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector xDir { get; } 
Visual Basic 
Public ReadOnly Property xDir As Vector 
Get 
Property Value 
Type: Vector 
See Also 
ReferenceModelObjectAttribute Class ReferenceModelObjectAttribute Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2201 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttribute..::..AttributeTypeEnum Enumeration ReferenceModelObjectAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

All the reference model object attribute types. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum AttributeTypeEnum 
Visual Basic 
Public Enumeration AttributeTypeEnum 
Members 
Member name	Value D 
Th 
ATTRIBUTETYPE_INVALID	0 


ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_CSHAPEPROFILE	3 



ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_CIRCLEHOLLOWPROFILE	4 



ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_CIRCLEPROFILE	5 


at ty 
Th pr at ty 
Th an pr at ty 
Th pr at ty 
Th pr at ty 
ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_ISHAPEPROFILE	7	Th 
pr 

Members	2202 


Point Fields 




ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_LSHAPEPROFILE	8 




ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_RECTANGLEHOLLOWPROFILE 9 




ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_RECTANGLEPROFILE	10 



ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_TSHAPEPROFILE	11 



ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_USHAPEPROFILE	12 



ATTRIBUTETYPE_IFC2X3_PARAMETRICOBJECT_ZSHAPEPROFILE	13 



ATTRIBUTETYPE_PARAMETRICOBJECT_CUSTOMPROFILE	14 



ATTRIBUTETYPE_PARAMETRICOBJECT_OBB	29 


See Also 
Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2203 





at ty 
Th pr at ty 
Th re an pr at ty 
Th re pr at ty 
Th pr at ty 
Th pr at ty 
Th pr at ty 
Th pr at ty 
Th bo bo 
at ty 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ReferenceModelObjectAttributeEnumerator class can be used to enumerate through reference model object attributes. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ReferenceModelObjectAttributeEnumerator : IEnumerator 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ReferenceModelObjectAttributeEnumerator 
Implements IEnumerator 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Collaboration; 
using System; 
public class Example 
{ 
public void Example1() 
       { 
           ReferenceModel RM = new ReferenceModel(); 
           RM.Filename = "c:\\TeklaStructuresModels\\reference_model.dwg";            RM.Scale = 1.0; 
if(RM.Insert()) 
           { 
foreach(ReferenceModelObject RMO in RM.GetChildren()) 
               { 
                   ReferenceModelObjectAttributeEnumerator RMOAttributeEnumerator = new Reference 
while(RMOAttributeEnumerator.MoveNext()) 
                   { 
                       ReferenceModelObjectAttribute RMOAttribute = (ReferenceModelObjectAttribut                        Console.WriteLine("Attribute name: " + RMOAttribute.Name); 
                   } 
               } 
           } 

Examples	2204 


Point Fields 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Collaboration..::..ReferenceModelObjectAttributeEnumerator 
See Also 
ReferenceModelObjectAttributeEnumerator Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	2205 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator Members ReferenceModelObjectAttributeEnumerator 
Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObjectAttributeEnumerator type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new reference model 
ReferenceModelObjectAttributeEnumerator 


object attribute enumerator instance. 
Methods 
  	Name	Description 
MoveNext Moves to the next reference model object attribute. Reset	Resets the enumerator. 
Properties 
  	Name	Description 
Current The current attribute. 
See Also 
ReferenceModelObjectAttributeEnumerator Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	2206 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator Constructor ReferenceModelObjectAttributeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new reference model object attribute enumerator instance. Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ReferenceModelObjectAttributeEnumerator( 
ReferenceModelObject RMO 
) 
Visual Basic 
Public Sub New (  
RMO As ReferenceModelObject 
) 
Parameters 

RMO 
Type: Tekla.Structures.Model..::..ReferenceModelObject 
The reference model object from which the enumerator is created. 
See Also 
ReferenceModelObjectAttributeEnumerator Class ReferenceModelObjectAttributeEnumerator Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2207 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator Methods ReferenceModelObjectAttributeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObjectAttributeEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next reference model object attribute. 
Reset	Resets the enumerator. 
See Also 
ReferenceModelObjectAttributeEnumerator Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2208 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator..::..MoveNext Method ReferenceModelObjectAttributeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next reference model object attribute. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 

Type: Boolean 
True if successfully moved to the next reference model object attribute. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
ReferenceModelObjectAttributeEnumerator Class ReferenceModelObjectAttributeEnumerator Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2209 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator..::..Reset Method ReferenceModelObjectAttributeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
ReferenceModelObjectAttributeEnumerator Class ReferenceModelObjectAttributeEnumerator Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2210 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator Properties ReferenceModelObjectAttributeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ReferenceModelObjectAttributeEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Current The current attribute. 
See Also 
ReferenceModelObjectAttributeEnumerator Class Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2211 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ReferenceModelObjectAttributeEnumerator..::..Current Property ReferenceModelObjectAttributeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The current attribute. 
Namespace:  Tekla.Structures.Model.Collaboration 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object Current { get; } 
Visual Basic 
Public ReadOnly Property Current As Object 
Get 
Property Value 

Type: Object 

Implements 

IEnumerator..::..Current 
See Also 
ReferenceModelObjectAttributeEnumerator Class ReferenceModelObjectAttributeEnumerator Members Tekla.Structures.Model.Collaboration Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2212 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Tekla.Structures.Model.History Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Model.History namespace provides some helper classes containing information about what objects have changed in the model during some time period. 
Classes 
  	Class	Description 
The ModelHistory class provides history information about 
ModelHistory 


ModificationStamp 


the objects of the model that is currently open in Tekla Structures. 
The ModificationStamp class provides the modification stamp for the objects of the model that is currently open in Tekla Structures. 
Structures 
  	Structure	Description 
ModificationInfo Modification info returned by History. 

Copyright  © Tekla 2013. All rights reserved. 



















Structures	2213 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelHistory Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelHistory class provides history information about the objects of the model that is currently open in Tekla Structures. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public static class ModelHistory 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelHistory 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.History; 
using System; 
using System.Diagnostics; 
using Tekla.Structures.Geometry3d; 
public class Example1 
{ 
/// to be called before modifications 
private void Init() 
    { 
        ModelHistory.TakeModifications("Example1_ModStamp");     } 
/// to be called when need to handle modifications 
private void Run_TakeModifications() 
    { 
var Modifications = ModelHistory.TakeModifications("Example1_ModStamp"); 
while (Modifications.Modified.MoveNext()) 
        { 
            ModelObject mo = Modifications.Modified.Current; 
            Console.WriteLine("Run_TakeModifications: Modified id: {0}", mo.Identifier.GUID);         } 
    } 
/// to be called when need to preview modifications without advancing modstamp 

Examples	2214 


Point Fields 
private void Run_GetModifications() 
    { 
var Modifications = ModelHistory.GetModifications("Example1_ModStamp"); 
while (Modifications.Modified.MoveNext()) 
        { 
            ModelObject mo = Modifications.Modified.Current; 
            Console.WriteLine("Run_GetModifications: Modified id: {0}", mo.Identifier.GUID);         } 
    } 
/// this takes each modification only once 
public void ModificationProcessed() 
    { 
this.Init(); 
new Beam(new Point(), new Point(0, 0, 1000)) 
        { 
            Name = "BEAM1", 
            Profile = new Profile() { ProfileString = "HEA400" }, 
            Material = new Material() { MaterialString = "Steel_Undefined" }         }.Insert(); 
new Model().CommitChanges(); 
this.Run_TakeModifications(); // prints BEAM1 
new Beam(new Point(), new Point(0, 0, 1000))  
        { 
            Name = "BEAM2", 
            Profile = new Profile() { ProfileString = "HEA400" }, 
            Material = new Material() { MaterialString = "Steel_Undefined" }         }.Insert(); 
new Model().CommitChanges(); 
this.Run_TakeModifications(); // prints BEAM2, but not BEAM1 
    } 
/// this always returns all modifications since last TakeModifications() public void ModificationPreviewed() 
    { 
this.Init(); 
new Beam(new Point(), new Point(0, 0, 1000))  
        { 
            Name = "BEAM1", 
            Profile = new Profile() { ProfileString = "HEA400" }, 
            Material = new Material() { MaterialString = "Steel_Undefined" }         }.Insert(); 
new Model().CommitChanges(); 
this.Run_GetModifications(); // prints BEAM1 
new Beam(new Point(), new Point(0, 0, 1000))  
        { 
            Name = "BEAM2", 
            Profile = new Profile() { ProfileString = "HEA400" }, 
            Material = new Material() { MaterialString = "Steel_Undefined" }         }.Insert(); 
new Model().CommitChanges(); 
this.Run_GetModifications(); // prints both BEAM1 and BEAM2 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.History..::..ModelHistory 



Inheritance Hierarchy	2215 


Point Fields 

See Also 
ModelHistory Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2216 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelHistory Members 
ModelHistory Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelHistory type exposes the following members. 
Methods 
  	Name	Description 
Obsolete. 
GetCurrentModificationStamp 


GetDeletedObjects 


Gets the current modification stamp from the model. 
Obsolete. 
Gets a list of the objects that have been deleted after the modification stamp. 
Obsolete. 
Gets based on type a list of the objects that have been deleted after the modification stamp. 
GetLocalChanges	Get changes which are not written out. 
Lookup modifications sine previous call of 
GetModifications 


GetModifiedObjects 


TakeModifications() without resetting the modstamp 
Obsolete. 
Gets a list of the objects that have been added or modified after the modification stamp. 
Obsolete. 
Gets based on type a list of the objects that have been added or modified after the modification stamp. 
GetNotSharedObjects	Get object which are was created or modified 
since last ModelSharing WriteOut. TakeModifications	Take modifications since previous call. 
See Also 
ModelHistory Class 
Tekla.Structures.Model.History Namespace 

See Also	2217 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2218 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelHistory Methods 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelHistory type exposes the following members. 
Methods 
  	Name	Description 
Obsolete. 
GetCurrentModificationStamp 


GetDeletedObjects 


Gets the current modification stamp from the model. 
Obsolete. 
Gets a list of the objects that have been deleted after the modification stamp. 
Obsolete. 
Gets based on type a list of the objects that have been deleted after the modification stamp. 
GetLocalChanges	Get changes which are not written out. 
Lookup modifications sine previous call of 
GetModifications 


GetModifiedObjects 


TakeModifications() without resetting the modstamp 
Obsolete. 
Gets a list of the objects that have been added or modified after the modification stamp. 
Obsolete. 
Gets based on type a list of the objects that have been added or modified after the modification stamp. 
GetNotSharedObjects	Get object which are was created or modified 
since last ModelSharing WriteOut. TakeModifications	Take modifications since previous call. 
See Also 
ModelHistory Class 
Tekla.Structures.Model.History Namespace 

See Also	2219 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2220 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetCurrentModificationStamp Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the current modification stamp from the model. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use TakeModifications() instead.")] 
public static ModificationStamp GetCurrentModificationStamp() 
Visual Basic 
<ObsoleteAttribute("Use TakeModifications() instead.")>  
Public Shared Function GetCurrentModificationStamp As ModificationStamp 
Return Value 

Type: ModificationStamp 
The current modification stamp. 
See Also 
ModelHistory Class 
ModelHistory Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2221 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetDeletedObjects Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a list of the objects that have been deleted after the modification stamp. Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use TakeModifications() instead.")] 
public static ModelObjectEnumerator GetDeletedObjects( 
ModificationStamp ModStamp 
) 
Visual Basic 
<ObsoleteAttribute("Use TakeModifications() instead.")>  
Public Shared Function GetDeletedObjects (  
ModStamp As ModificationStamp 
) As ModelObjectEnumerator 
Parameters 

ModStamp 
Type: Tekla.Structures.Model.History..::..ModificationStamp 
The modification stamp. 

Return Value 

Type: ModelObjectEnumerator 
A list of the objects that have been deleted after the given modification stamp. 
See Also 
ModelHistory Class 
ModelHistory Members 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2222 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetDeletedObjectsWithType Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets based on type a list of the objects that have been deleted after the modification stamp. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use TakeModifications() instead.")] 
public static ModelObjectEnumerator GetDeletedObjectsWithType( 
ModificationStamp ModStamp, 
ModelObject..::..ModelObjectEnum Enum 
) 
Visual Basic 
<ObsoleteAttribute("Use TakeModifications() instead.")>  
Public Shared Function GetDeletedObjectsWithType (  
ModStamp As ModificationStamp, 
Enum As ModelObject..::..ModelObjectEnum 
) As ModelObjectEnumerator 
Parameters 

ModStamp 
Type: Tekla.Structures.Model.History..::..ModificationStamp 
The modification stamp. 

Enum 
Type: Tekla.Structures.Model..::..ModelObject..::..ModelObjectEnum The type of the objects to return. 

Return Value 

Type: ModelObjectEnumerator 
A list of the objects that have been deleted after the given modification stamp. 
See Also 
ModelHistory Class 
ModelHistory Members 
Tekla.Structures.Model.History Namespace 

See Also	2223 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2224 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetLocalChanges Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Get changes which are not written out. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModificationInfo GetLocalChanges() 
Visual Basic 
Public Shared Function GetLocalChanges As ModificationInfo 
Return Value 

Type: ModificationInfo 
Modifications which are not written out. 
See Also 
ModelHistory Class 
ModelHistory Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2225 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetModifications Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Lookup modifications sine previous call of TakeModifications() without resetting the modstamp 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModificationInfo GetModifications( 
string Name, 
ModificationStamp PrevStamp = null 
) 
Visual Basic 
Public Shared Function GetModifications (  
Name As String, 
        Optional  


Name 
Type: System..::..String 
Name of reference which is used for collecting modifications and which is updated. Intended use is to assign an unique name for each client application which needs to be informed of the model updates. Maximum length is 79 characters. 

PrevStamp (Optional) 
Type: Tekla.Structures.Model.History..::..ModificationStamp 
When specified, default value of reference if is it not found 

Return Value 

Type: ModificationInfo 
All modifications which happened since the last call 
Remarks 
Takes modification which has happened to the model since the previous call to TakeModifications with the same Name argument. If there was no previous call of 

Remarks	2226 


Point Fields 
TakeModifications() with this Name, shows modifications since beginning, or since PrevStap, if it is specified. 
See Also 
ModelHistory Class 
ModelHistory Members 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 








































See Also	2227 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetModifiedObjects Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a list of the objects that have been added or modified after the modification stamp. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use TakeModifications() instead.")] public static ModelObjectEnumerator GetModifiedObjects( ModificationStamp ModStamp 
) 
Visual Basic 
<ObsoleteAttribute("Use TakeModifications() instead.")>  
Public Shared Function GetModifiedObjects (  
ModStamp As ModificationStamp 
) As ModelObjectEnumerator 
Parameters 

ModStamp 
Type: Tekla.Structures.Model.History..::..ModificationStamp 
The modification stamp. 

Return Value 

Type: ModelObjectEnumerator 
A list of the objects that have been modified after the given modification stamp. 
See Also 
ModelHistory Class 
ModelHistory Members 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2228 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetModifiedObjectsWithType Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets based on type a list of the objects that have been added or modified after the modification stamp. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use TakeModifications() instead.")] 
public static ModelObjectEnumerator GetModifiedObjectsWithType( 
ModificationStamp ModStamp, 
ModelObject..::..ModelObjectEnum Enum 
) 
Visual Basic 
<ObsoleteAttribute("Use TakeModifications() instead.")>  
Public Shared Function GetModifiedObjectsWithType (  
ModStamp As ModificationStamp, 
Enum As ModelObject..::..ModelObjectEnum 
) As ModelObjectEnumerator 
Parameters 

ModStamp 
Type: Tekla.Structures.Model.History..::..ModificationStamp 
The modification stamp. 

Enum 
Type: Tekla.Structures.Model..::..ModelObject..::..ModelObjectEnum The type of the objects to return. 

Return Value 

Type: ModelObjectEnumerator 
A list of the objects that have been modified after the given modification stamp. 
See Also 
ModelHistory Class 
ModelHistory Members 
Tekla.Structures.Model.History Namespace 

See Also	2229 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2230 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..GetNotSharedObjects Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Get object which are was created or modified since last ModelSharing WriteOut. Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelObjectEnumerator GetNotSharedObjects() 
Visual Basic 
Public Shared Function GetNotSharedObjects As ModelObjectEnumerator 
Return Value 
Type: ModelObjectEnumerator 
A list of objects 
Remarks 
If the model is not shared, returns all objects. 
See Also 
ModelHistory Class 
ModelHistory Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2231 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelHistory..::..TakeModifications Method 
ModelHistory Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Take modifications since previous call. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModificationInfo TakeModifications( 
string Name, 
ModificationStamp PrevStamp = null 
) 
Visual Basic 
Public Shared Function TakeModifications (  
Name As String, 
        Optional  


Name 
Type: System..::..String 
Name of reference which is used for collecting modifications and which is updated. Intended use is to assign an unique name for each client application which needs to be informed of the model updates. Maximum length is 79 characters. 

PrevStamp (Optional) 
Type: Tekla.Structures.Model.History..::..ModificationStamp 
When specified, default value of reference if is it not found 

Return Value 

Type: ModificationInfo 
All modifications which happened since the last call. See ModificationInfo reference 
Remarks 
Takes modification which has happened to the model since the previous call to TakeModifications with the same Name argument. If there was no previous call with this Name, shows modifications since beginning, or since PrevStap, if it is specified. 

Remarks	2232 


Point Fields 
Updates internal reference for use when TakeModifications() is called next time. 
See Also 
ModelHistory Class 
ModelHistory Members 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2233 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationInfo Structure 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modification info returned by History. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public struct ModificationInfo 
Visual Basic 
<SerializableAttribute> 
Public Structure ModificationInfo 
See Also 
ModificationInfo Members 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2234 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModificationInfo Members 
ModificationInfo Structure  Fields  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModificationInfo type exposes the following members. 
Fields 
  	Name	Description 
Deleted	List of objects which have been deleted 
Modified List of objects which have been modified or created 
See Also 
ModificationInfo Structure 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2235 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModificationInfo Fields 
ModificationInfo Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModificationInfo type exposes the following members. 
Fields 
  	Name	Description 
Deleted	List of objects which have been deleted 
Modified List of objects which have been modified or created 
See Also 
ModificationInfo Structure 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2236 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationInfo..::..Deleted Field 
ModificationInfo Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

List of objects which have been deleted 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator Deleted 
Visual Basic 
Public Deleted As ModelObjectEnumerator 
Field Value 

Type: ModelObjectEnumerator 
See Also 
ModificationInfo Structure 
ModificationInfo Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2237 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationInfo..::..Modified Field 
ModificationInfo Structure  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

List of objects which have been modified or created 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator Modified 
Visual Basic 
Public Modified As ModelObjectEnumerator 
Field Value 

Type: ModelObjectEnumerator 
See Also 
ModificationInfo Structure 
ModificationInfo Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2238 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModificationStamp class provides the modification stamp for the objects of the model that is currently open in Tekla Structures. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ModificationStamp 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModificationStamp 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.History..::..ModificationStamp 
See Also 
ModificationStamp Members 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2239 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp Members 
ModificationStamp Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModificationStamp type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new modification stamp instance where the current modification stamp is 0. Can be used for 
ModificationStamp()()()() 


ModificationStamp(Int32, Int32) 


fetching all the created or deleted model objects from the model history. 
Creates a new modification stamp instance with the given local and server stamps. Can be used for fetching from the model history all the model objects that have been created or deleted after the specified stamp. 
Properties 
  	Name	Description 
Guid	Guid representation 
LocalStamp	The modification stamp for the local changes. 
ServerStamp The modification stamp from the multi-user server for the external 
changes caused by the saving of the multi-user model. 
See Also 
ModificationStamp Class 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2240 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp Constructor 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Creates a new modification stamp instance where the current modification stamp is 0. Can be used for 
ModificationStamp()()()() 


ModificationStamp(Int32, Int32) 


fetching all the created or deleted model objects from the model history. 
Creates a new modification stamp instance with the given local and server stamps. Can be used for fetching from the model history all the model objects that have been created or deleted after the specified stamp. 
See Also 
ModificationStamp Class 
ModificationStamp Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2241 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp Constructor 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new modification stamp instance where the current modification stamp is 0. Can be used for fetching all the created or deleted model objects from the model history. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModificationStamp() 
Visual Basic 
Public Sub New 
See Also 
ModificationStamp Class 
ModificationStamp Members 
ModificationStamp Overload 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2242 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp Constructor (Int32, Int32) 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new modification stamp instance with the given local and server stamps. Can be used for fetching from the model history all the model objects that have been created or deleted after the specified stamp. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModificationStamp( 
int LocalStamp, 
int ServerStamp 
) 
Visual Basic 
Public Sub New (  
LocalStamp As Integer, 
ServerStamp As Integer 
) 
Parameters 

LocalStamp 
Type: System..::..Int32 
The local stamp to be used for fetching the model changes after the stamp. 

ServerStamp 
Type: System..::..Int32 
The server stamp for fetching the external multi-user or synchronized model changes after the stamp. 
See Also 
ModificationStamp Class 
ModificationStamp Members 
ModificationStamp Overload 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2243 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp Properties 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModificationStamp type exposes the following members. 
Properties 
  	Name	Description 
Guid	Guid representation 
LocalStamp	The modification stamp for the local changes. 
ServerStamp The modification stamp from the multi-user server for the external 
changes caused by the saving of the multi-user model. 
See Also 
ModificationStamp Class 
Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2244 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModificationStamp..::..Guid Property 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Guid representation 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Guid { get; } 
Visual Basic 
Public ReadOnly Property Guid As String 
Get 
Property Value 
Type: String 
See Also 
ModificationStamp Class 
ModificationStamp Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2245 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModificationStamp..::..LocalStamp Property 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The modification stamp for the local changes. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int LocalStamp { get; set; } 
Visual Basic 
Public Property LocalStamp As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
ModificationStamp Class 
ModificationStamp Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2246 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModificationStamp..::..ServerStamp Property 
ModificationStamp Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The modification stamp from the multi-user server for the external changes caused by the saving of the multi-user model. 
Namespace:  Tekla.Structures.Model.History 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int ServerStamp { get; set; } 
Visual Basic 
Public Property ServerStamp As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
ModificationStamp Class 
ModificationStamp Members Tekla.Structures.Model.History Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2247 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Tekla.Structures.Model.Operations Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Model.Operations namespace contains functionality related to operations. 
Classes 
  	Class	Description 
Conversion of old TS GUIDs to current GUIDs. GUIDs are changed in TS save as operation, this class can be used to convert old GUIDs to current GUIDs. To 
recognize the need for GUID conversion, application needs to save project GUID and compare to the current project GUID. Note: With big models the instance uses a lot of memory. 
Operation	The Operation class implements Tekla Structures 
level operations. 
Operation..::..ProgressBar	The ProgressBar class implements progress bar with 
cancel button. 
Enumerations 
  	Enumeration	Description 
Operation..::..MISExportTypeEnum	The MIS export types. 

Copyright  © Tekla 2013. All rights reserved. 















Enumerations	2248 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GuidConversion Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Conversion of old TS GUIDs to current GUIDs. GUIDs are changed in TS save as operation, this class can be used to convert old GUIDs to current GUIDs. To recognize the need for GUID conversion, application needs to save project GUID and compare to the current project GUID. Note: With big models the instance uses a lot of memory. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public class GuidConversion 
Visual Basic 
Public Class GuidConversion 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Operations..::..GuidConversion 
See Also 
GuidConversion Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2249 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GuidConversion Members 
GuidConversion Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GuidConversion type exposes the following members. 
Constructors 
  	Name	Description 
GuidConversion Initializes a new instance of the GuidConversion class. Methods 
  	Name	Description 
GetGuidMapping Gets the GUID mapping. 
GetNewGuid	Gets the new GUID. 
See Also 
GuidConversion Class 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2250 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GuidConversion Constructor 
GuidConversion Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the GuidConversion class. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GuidConversion() 
Visual Basic 
Public Sub New 
See Also 
GuidConversion Class 
GuidConversion Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2251 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GuidConversion Methods 
GuidConversion Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GuidConversion type exposes the following members. 
Methods 
  	Name	Description 
GetGuidMapping Gets the GUID mapping. GetNewGuid	Gets the new GUID. 
See Also 
GuidConversion Class 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2252 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GuidConversion..::..GetGuidMapping Method 
GuidConversion Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the GUID mapping. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Dictionary<Guid, Guid> GetGuidMapping() 
Visual Basic 
Public Function GetGuidMapping As Dictionary(Of Guid, Guid) 
Return Value 
Type: Dictionary<(Of <(<'Guid, Guid>)>)> 
The GUID mapping 
See Also 
GuidConversion Class 
GuidConversion Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2253 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GuidConversion..::..GetNewGuid Method 
GuidConversion Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the new GUID. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Guid GetNewGuid( 
Guid oldGuid 
) 
Visual Basic 
Public Function GetNewGuid (  
oldGuid As Guid 
) As Guid 
Parameters 

oldGuid 
Type: System..::..Guid The old GUID. 

Return Value 

Type: Guid 
The current GUID 
See Also 
GuidConversion Class 
GuidConversion Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2254 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Operation class implements Tekla Structures level operations. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public static class Operation 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Operation 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Operations..::..Operation 
See Also 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2255 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation Members 
Operation Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Operation type exposes the following members. 
Methods 
  	Name	Description 
Combine(Beam, Beam)	Combines two beams into one beam. Combine(RebarGroup, RebarGroup)	Combines two rebar groups into one 
rebar group. 
Combine(SingleRebar, SingleRebar)	Combines two single rebars into one 
rebar. 
CopyObject(ModelObject, Vector)	Copies the model object using the given 
translation vector. 
CopyObject(ModelObject, 
CoordinateSystem, 
CoordinateSystem) 
Creates MIS files from all parts using the given file name. 
CreateMISFileFromAll 
See Tekla Structures Help for more information about MIS files. 
Creates MIS files from the selected parts using the given file name. 
CreateMISFileFromSelected 
See Tekla Structures Help for more information about MIS files. 
Creates NC files from all parts using the given NC template name. 
CreateNCFilesFromAll 
See Tekla Structures Help for more information about NC files. 
CreateNCFilesFromSelected	Creates NC files from the selected parts 
using the given NC template name. 


Methods	2256 














CreateReportFromAll 














CreateReportFromSelected 



Point Fields 
See Tekla Structures Help for more information about NC files. 
Creates a report from all the objects using the given template name and filename. 
If a path is not given in the filename, the file is created to the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 
If the given folder does not exist, the report creation fails. 
Internally, this method is asynchronous, and because of that the output file cannot be immediately available. 
See Tekla Structures Help for more information about reports. 
Creates a report from the selected objects using the given template name and filename. 
If a path is not given in the filename, the file is created to the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 
If the given folder does not exist, the report creation fails. 
See Tekla Structures Help for more information about reports. 
DisplayPrompt	Displays a message in the status bar. 
Opens and displays a report with the given name. 
If a path is not given in the filename, the file is searched from the folder defined 
DisplayReport 


with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 
See Tekla Structures Help for more information about reports. 
Group	Groups a list of single rebars or rebar 
groups and creates a new rebar group. IsMacroRunning	Returns true if a macro is running, false 

Methods	2257 













IsModelAutoSaved 


IsNumberingUpToDate 



Point Fields 
otherwise. 
Macros are saved as *.cs files in the folder defined with the XS_MACRO_DIRECTORY variable. 
See Tekla Structures Help for more information about macros. 
Obsolete. 
Tells whether a model has auto saved information. 
Checks whether the numbering is up-to-date for an assembly, a part or a rebar. 
Checks whether the numbering is up-to-date for every assembly, part and rebar on the model. 
Remarks 
Using this method is much faster than checking each object individually. 
MoveObject(ModelObject, Vector)	Moves the model object using the given 
translation vector. 
MoveObject(ModelObject, 
CoordinateSystem, 
CoordinateSystem) 
ObjectMatchesToFilter(ModelObject, String) 
ObjectMatchesToFilter(ModelObject, FilterExpression) 


Checks whether the object matches to the criteria in the given filter. 
Checks whether the object matches to the criteria in the given filter. 
Obsolete. 
Opens a new model to Tekla Structures ignoring auto saved information. 
Open(String, Boolean)	Obsolete. 
Opens a new model to Tekla Structures. RunMacro	Starts a macro with the given name. 
Throws an exception if the file is not found. 
Macros are saved as *.cs files in the folder defined with the XS_MACRO_DIRECTORY variable. 
It is possible to run drawing macros using relative paths. 

Remarks	2258 








SaveAsWebModel 



Point Fields 
See Tekla Structures Help for more information about macros. 
Saves the current model as a web model. 
You can save the model as a web model that can be viewed via the Internet using a web browser (e.g. Internet Explorer). 
Saves the selected objects as a web model. 
You can save the selected objects as a 
web model that can be viewed via the Internet using a web browser (e.g. 
Internet Explorer). 
Split(Beam, Point)	Splits the beam and creates a new one in 
the given position. 
Split(CircleRebarGroup, Line)	Splits the circle rebar group and creates a 
new one in the given position. Split(ContourPlate, Polygon)	Splits the contour plate and creates a new 
one along the given polygon. Split(CurvedRebarGroup, Line)	Splits the curved rebar group and creates 
a new one in the given position. Split(RebarGroup, Line)	Splits the rebar group and creates a new 
one in the given position. Split(SingleRebar, Line)	Splits the single rebar and creates a new 
one in the given position. Ungrouping(RebarGroup)	Ungroups the rebar group and creates 
new single rebars. Ungrouping(RebarMesh)	Ungroups the rebar mesh and creates 
new single rebars. 
See Also 
Operation Class 
Tekla.Structures.Model.Operations Namespace 
Copyright  © Tekla 2013. All rights reserved. 











See Also	2259 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation Methods 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Operation type exposes the following members. 
Methods 
  	Name	Description 
Combine(Beam, Beam)	Combines two beams into one beam. Combine(RebarGroup, RebarGroup)	Combines two rebar groups into one 
rebar group. 
Combine(SingleRebar, SingleRebar)	Combines two single rebars into one 
rebar. 
CopyObject(ModelObject, Vector)	Copies the model object using the given 
translation vector. 
CopyObject(ModelObject, 
CoordinateSystem, 
CoordinateSystem) 
Creates MIS files from all parts using the given file name. 
CreateMISFileFromAll 
See Tekla Structures Help for more information about MIS files. 
Creates MIS files from the selected parts using the given file name. 
CreateMISFileFromSelected 
See Tekla Structures Help for more information about MIS files. 
Creates NC files from all parts using the given NC template name. 
CreateNCFilesFromAll 
See Tekla Structures Help for more information about NC files. 
CreateNCFilesFromSelected	Creates NC files from the selected parts 
using the given NC template name. 


Methods	2260 














CreateReportFromAll 














CreateReportFromSelected 



Point Fields 
See Tekla Structures Help for more information about NC files. 
Creates a report from all the objects using the given template name and filename. 
If a path is not given in the filename, the file is created to the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 
If the given folder does not exist, the report creation fails. 
Internally, this method is asynchronous, and because of that the output file cannot be immediately available. 
See Tekla Structures Help for more information about reports. 
Creates a report from the selected objects using the given template name and filename. 
If a path is not given in the filename, the file is created to the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 
If the given folder does not exist, the report creation fails. 
See Tekla Structures Help for more information about reports. 
DisplayPrompt	Displays a message in the status bar. 
Opens and displays a report with the given name. 
If a path is not given in the filename, the file is searched from the folder defined 
DisplayReport 


with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 
See Tekla Structures Help for more information about reports. 
Group	Groups a list of single rebars or rebar 
groups and creates a new rebar group. IsMacroRunning	Returns true if a macro is running, false 

Methods	2261 













IsModelAutoSaved 


IsNumberingUpToDate 



Point Fields 
otherwise. 
Macros are saved as *.cs files in the folder defined with the XS_MACRO_DIRECTORY variable. 
See Tekla Structures Help for more information about macros. 
Obsolete. 
Tells whether a model has auto saved information. 
Checks whether the numbering is up-to-date for an assembly, a part or a rebar. 
Checks whether the numbering is up-to-date for every assembly, part and rebar on the model. 
Remarks 
Using this method is much faster than checking each object individually. 
MoveObject(ModelObject, Vector)	Moves the model object using the given 
translation vector. 
MoveObject(ModelObject, 
CoordinateSystem, 
CoordinateSystem) 
ObjectMatchesToFilter(ModelObject, String) 
ObjectMatchesToFilter(ModelObject, FilterExpression) 


Checks whether the object matches to the criteria in the given filter. 
Checks whether the object matches to the criteria in the given filter. 
Obsolete. 
Opens a new model to Tekla Structures ignoring auto saved information. 
Open(String, Boolean)	Obsolete. 
Opens a new model to Tekla Structures. RunMacro	Starts a macro with the given name. 
Throws an exception if the file is not found. 
Macros are saved as *.cs files in the folder defined with the XS_MACRO_DIRECTORY variable. 
It is possible to run drawing macros using relative paths. 

Remarks	2262 








SaveAsWebModel 



Point Fields 
See Tekla Structures Help for more information about macros. 
Saves the current model as a web model. 
You can save the model as a web model that can be viewed via the Internet using a web browser (e.g. Internet Explorer). 
Saves the selected objects as a web model. 
You can save the selected objects as a 
web model that can be viewed via the Internet using a web browser (e.g. 
Internet Explorer). 
Split(Beam, Point)	Splits the beam and creates a new one in 
the given position. 
Split(CircleRebarGroup, Line)	Splits the circle rebar group and creates a 
new one in the given position. Split(ContourPlate, Polygon)	Splits the contour plate and creates a new 
one along the given polygon. Split(CurvedRebarGroup, Line)	Splits the curved rebar group and creates 
a new one in the given position. Split(RebarGroup, Line)	Splits the rebar group and creates a new 
one in the given position. Split(SingleRebar, Line)	Splits the single rebar and creates a new 
one in the given position. Ungrouping(RebarGroup)	Ungroups the rebar group and creates 
new single rebars. Ungrouping(RebarMesh)	Ungroups the rebar mesh and creates 
new single rebars. 
See Also 
Operation Class 
Tekla.Structures.Model.Operations Namespace 
Copyright  © Tekla 2013. All rights reserved. 











See Also	2263 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Combine Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Combine(Beam, Beam)	Combines two beams into one beam. Combine(RebarGroup, 
RebarGroup) 
Combine(SingleRebar, 
SingleRebar)	Combines two single rebars into one rebar. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2264 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Combine Method (Beam, Beam) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Combines two beams into one beam. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Beam Combine( 
Beam ObjectToCombineTo, 
Beam ObjectToBeCombined 
) 
Visual Basic 
Public Shared Function Combine (  
ObjectToCombineTo As Beam, 
ObjectToBeCombined As Beam 
) As Beam 
Parameters 

ObjectToCombineTo 
Type: Tekla.Structures.Model..::..Beam 
The beam to be combined to. 

ObjectToBeCombined 
Type: Tekla.Structures.Model..::..Beam 
The beam which will be deleted after a successful operation. 

Return Value 

Type: Beam 
The combined beam on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Combine Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2265 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Combine Method (RebarGroup, RebarGroup) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Combines two rebar groups into one rebar group. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static RebarGroup Combine( 
RebarGroup ObjectToCombineTo, 
RebarGroup ObjectToBeCombined 
) 
Visual Basic 
Public Shared Function Combine (  ObjectToCombineTo As RebarGroup, ObjectToBeCombined As RebarGroup 
) As RebarGroup 
Parameters 

ObjectToCombineTo 
Type: Tekla.Structures.Model..::..RebarGroup 
The rebar group to be combined to. 

ObjectToBeCombined 
Type: Tekla.Structures.Model..::..RebarGroup 
The rebar group which will be deleted after a successful operation. 

Return Value 

Type: RebarGroup 
The combined rebar group on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Combine Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2266 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Combine Method (SingleRebar, SingleRebar) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Combines two single rebars into one rebar. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static SingleRebar Combine( 
SingleRebar ObjectToCombineTo, 
SingleRebar ObjectToBeCombined 
) 
Visual Basic 
Public Shared Function Combine (  
ObjectToCombineTo As SingleRebar, 
ObjectToBeCombined As SingleRebar 
) As SingleRebar 
Parameters 

ObjectToCombineTo 
Type: Tekla.Structures.Model..::..SingleRebar 
The rebar to be combined to. 

ObjectToBeCombined 
Type: Tekla.Structures.Model..::..SingleRebar 
The rebar which will be deleted after a successful operation. 

Return Value 

Type: SingleRebar 
The combined single rebar on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Combine Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2267 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..CopyObject Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
CopyObject(ModelObject, Vector)	Copies the model object using the 
given translation vector. 
CopyObject(ModelObject, 
CoordinateSystem, CoordinateSystem) 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2268 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..CopyObject Method (ModelObject, Vector) 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Copies the model object using the given translation vector. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelObject CopyObject( 
ModelObject Object, 
Vector CopyVector 
) 
Visual Basic 
Public Shared Function CopyObject (  
Object As ModelObject, 
CopyVector As Vector 
) As ModelObject 
Parameters 

Object 
Type: Tekla.Structures.Model..::..ModelObject The model object to copy. 

CopyVector 
Type: Tekla.Structures.Geometry3d..::..Vector 
The translation vector for copying. 

Return Value 

Type: ModelObject 
The copied model object on success, null on failure. 
Examples 
In the following example a connection to the Tekla Structures model has already been established. The example code creates a beam to the model and copies the beam to a location that is one meter in the x and y directions. 

  	Copy 
using Tekla.Structures.Model; 

Examples	2269 


Point Fields 
using Tekla.Structures.Model.Operations; using Tekla.Structures.Geometry3d; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam1 = new Beam(new Point(0, 0, 0), new Point(3000, 0, 0));            Vector Vector1 = new Vector(1000, 1000, 0); 
           Beam1.Profile.ProfileString = "PL10*140"; 
if(Beam1.Insert()) 
           { 
               Beam Beam2 = Operation.CopyObject(Beam1, Vector1) as Beam; 
if(Beam2 != null) 
                   MessageBox.Show("Copy succeeded"); 
           } 
       } 
} 
See Also 
Operation Class 
Operation Members 
CopyObject Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 


























See Also	2270 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..CopyObject Method (ModelObject, CoordinateSystem, CoordinateSystem) 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Copies the model object between the given translation coordinate systems. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelObject CopyObject( 
ModelObject Object, 
CoordinateSystem StartCoordinateSystem, 
CoordinateSystem EndCoordinateSystem 
) 
Visual Basic 
Public Shared Function CopyObject (  
Object As ModelObject, 
StartCoordinateSystem As CoordinateSystem, 
EndCoordinateSystem As CoordinateSystem 
) As ModelObject 
Parameters 

Object 
Type: Tekla.Structures.Model..::..ModelObject The model object to copy. 

StartCoordinateSystem 
Type: Tekla.Structures.Geometry3d..::..CoordinateSystem 
The coordinate system to copy the object from. 

EndCoordinateSystem 
Type: Tekla.Structures.Geometry3d..::..CoordinateSystem 
The coordinate system to copy the object to. 

Return Value 

Type: ModelObject 
The copied model object on success, null on failure. 



Syntax	2271 


Point Fields 

Examples 
In the following example a connection to the Tekla Structures model has already been established. The example code creates a beam (Beam3) to the model and copies the beam between the coordinate systems of Beam1 and Beam2. 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Operations; 
using Tekla.Structures.Geometry3d; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam1 = new Beam(new Point(0, 0, 0), new Point(3000, 0, 0));            Beam1.Profile.ProfileString = "PL10*140"; 
           Beam1.Insert(); 
           Beam Beam2 = new Beam(new Point(3000, 0, 0), new Point(6000, 0, 0));            Beam2.Profile.ProfileString = "PL10*140"; 
           Beam2.Insert(); 
           Beam Beam3 = new Beam(new Point(100, 0, 0), new Point(100, 0, 400));            Beam3.Profile.ProfileString = "PL10*140"; 
           Beam3.Insert(); 
           Beam Beam4 = Operation.CopyObject(Beam3, Beam1.GetCoordinateSystem(), Beam2.GetCoordin 
if(Beam4 != null) 
               MessageBox.Show("Copy succeeded"); 
       } 
} 
See Also 
Operation Class 
Operation Members 
CopyObject Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2272 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..CreateMISFileFromAll Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates MIS files from all parts using the given file name. 

See Tekla Structures Help for more information about MIS files. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool CreateMISFileFromAll( 
Operation..::..MISExportTypeEnum MISType, 
string FileName 
) 
Visual Basic 
Public Shared Function CreateMISFileFromAll (  
MISType As Operation..::..MISExportTypeEnum, 
FileName As String 
) As Boolean 
Parameters 

MISType 
Type: Tekla.Structures.Model.Operations..::..Operation..::..MISExportTypeEnum 
The type of the MIS export. 

FileName 
Type: System..::..String 
The name of the MIS file to be used in creation. 

Return Value 

Type: Boolean 
True if the MIS files are created, false if the numbering is not up-to-date or the used configuration is wrong. 
Examples 
  	Copy 
using Tekla.Structures.Model.Operations; 

Examples	2273 


Point Fields 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
if (Operation.CreateMISFileFromAll(Operation.MISExportTypeEnum.STEEL2000, "myExport.st                MessageBox.Show("MIS creation succesfull"); 
       } 
} 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	Thrown when the FileName is null. 
System..::..ArgumentException	Thrown when the FileName is not defined. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 


























See Also	2274 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..CreateMISFileFromSelected Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates MIS files from the selected parts using the given file name. 

See Tekla Structures Help for more information about MIS files. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool CreateMISFileFromSelected( 
Operation..::..MISExportTypeEnum MISType, 
string FileName 
) 
Visual Basic 
Public Shared Function CreateMISFileFromSelected (  
MISType As Operation..::..MISExportTypeEnum, 
FileName As String 
) As Boolean 
Parameters 

MISType 
Type: Tekla.Structures.Model.Operations..::..Operation..::..MISExportTypeEnum 
The type of the MIS export. 

FileName 
Type: System..::..String 
The name of the MIS file to be used in creation. 

Return Value 

Type: Boolean 
True if the MIS files are created, false if the numbering is not up-to-date or the used configuration is wrong. 
Examples 
  	Copy 
using Tekla.Structures.Model; 

Examples	2275 


Point Fields 
using Tekla.Structures.Model.Operations; using Tekla.Structures.Model.UI; 
using System.Collections; using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Picker Picker = new Picker(); 
try 
           { 
               Beam Beam1 = Picker.PickObject(Picker.PickObjectEnum.PICK_ONE_PART, "Pick object t                ArrayList Parts = new ArrayList(); 
               Parts.Add(Beam1); 
               Tekla.Structures.Model.UI.ModelObjectSelector MOS = new Tekla.Structures.Model.UI. 
               MOS.Select(Parts); 
if (Operation.CreateMISFileFromSelected(Operation.MISExportTypeEnum.STEEL2000, "my                    MessageBox.Show("MIS creation succesfull"); 
               MOS.Select(new ArrayList()); //remove UI selection 
           } 
catch { } 
       } 
} 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	Thrown when the FileName is null. 
System..::..ArgumentException	Thrown when the FileName is not defined. See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2276 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..CreateNCFilesFromAll Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates NC files from all parts using the given NC template name. 

See Tekla Structures Help for more information about NC files. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool CreateNCFilesFromAll( 
string NCFileSettings, 
string DestinationFolder 
) 
Visual Basic 
Public Shared Function CreateNCFilesFromAll (  
NCFileSettings As String, 
DestinationFolder As String 
) As Boolean 
Parameters 

NCFileSettings 
Type: System..::..String 
The name of the NC setting template to be used in creation. 

DestinationFolder 
Type: System..::..String 
The name of the folder where NC files are created. If defined, overrides the default folder in the setting template. 

Return Value 

Type: Boolean 
True if the NC files are created, false if the numbering is not up-to-date or the used configuration is wrong. 





Syntax	2277 


Point Fields 

Remarks 
PopMarks cannot currently be created through the API. 
Examples 
  	Copy 
using Tekla.Structures.Model.Operations; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
if (Operation.CreateNCFilesFromAll("DSTV for plates", "")) 
               MessageBox.Show("NC creation succesfull"); 
       } 
} 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when the NCFileSettings is not 
defined. 
System..::..ArgumentNullException	Thrown when the NCFileSettings is null. See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2278 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..CreateNCFilesFromSelected Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates NC files from the selected parts using the given NC template name. 

See Tekla Structures Help for more information about NC files. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool CreateNCFilesFromSelected( 
string NCFileSettings, 
string DestinationFolder 
) 
Visual Basic 
Public Shared Function CreateNCFilesFromSelected (  
NCFileSettings As String, 
DestinationFolder As String 
) As Boolean 
Parameters 

NCFileSettings 
Type: System..::..String 
The name of the NC setting template to be used in creation. 

DestinationFolder 
Type: System..::..String 
The name of the folder where NC files are created. If defined, overrides the default folder in the setting template. 

Return Value 

Type: Boolean 
True if the NC files are created, false if the numbering is not up-to-date or the used configuration is wrong. 





Syntax	2279 


Point Fields 

Remarks 
PopMarks cannot currently be created through the API. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Operations; 
using Tekla.Structures.Model.UI; 
using System.Collections; using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Picker Picker = new Picker(); 
try 
           { 
               Beam Beam1 = Picker.PickObject(Picker.PickObjectEnum.PICK_ONE_PART, "Pick object t                ArrayList Parts = new ArrayList(); 
               Parts.Add(Beam1); 
               Tekla.Structures.Model.UI.ModelObjectSelector MOS = new Tekla.Structures.Model.UI. 
               MOS.Select(Parts); 
if (Operation.CreateNCFilesFromSelected("DSTV for profiles", "")) 
                   MessageBox.Show("NC creation succesfull"); 
               MOS.Select(new ArrayList()); //remove UI selection 
           } 
catch { } 
       } 
} 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when the NCFileSettings is not 
defined. 
System..::..ArgumentNullException	Thrown when the NCFileSettings is null. See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	2280 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..CreateReportFromAll Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a report from all the objects using the given template name and filename. 
If a path is not given in the filename, the file is created to the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 

If the given folder does not exist, the report creation fails. 
Internally, this method is asynchronous, and because of that the output file cannot be immediately available. 

See Tekla Structures Help for more information about reports. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool CreateReportFromAll( 
string TemplateName, 
string FileName, 
string Title1, 
string Title2, 
string Title3 
) 
Visual Basic 
Public Shared Function CreateReportFromAll (  
TemplateName As String, 
FileName As String, 
Title1 As String, 
Title2 As String, 
Title3 As String 
) As Boolean 
Parameters 

TemplateName 
Type: System..::..String 
The name of the report template to be used in report creation. The name must contain more than three characters. 


Syntax	2281 


Point Fields 
FileName 
Type: System..::..String 
The name of the created report. The name must contain more than three characters. 

Title1 
Type: System..::..String 
The first title for the created report. 

Title2 
Type: System..::..String 
The second title for the created report. 

Title3 
Type: System..::..String 
The third title for the created report. 

Return Value 

Type: Boolean 
True if the report is created. 
Examples 
The following example creates a report and then displays it. It is taken into account that the created file might not be immediately available. 

  	Copy 
using System.IO; 
using System.Threading; 
using Tekla.Structures.Model.Operations; 
public class Example 
{ 
public bool IfLockedWait(string FileName) 
       { 
// try 10 times 
int RetryNumber = 10; 
while (true) 
           { 
try 
               { 
using(FileStream FileStream = new FileStream( 
                   FileName, FileMode.Open, 
                   FileAccess.ReadWrite, FileShare.ReadWrite)) 
                   { 
byte[] ReadText = new byte[FileStream.Length]; 
                       FileStream.Seek(0, SeekOrigin.Begin); 
                       FileStream.Read(ReadText, 0, (int)FileStream.Length); 
                   } 
return true; 
               } 
catch (IOException) 
               { 
// wait one second 
                   Thread.Sleep(1000); 

Examples	2282 


Point Fields 
                   RetryNumber--; 
if(RetryNumber == 0) 
return false; 
               } 
           } 
       } 
public void Example1() 
       { 
           Operation.CreateReportFromAll("Assembly_list", "Assembly_list.xsr", "MyTitle", "", "") 
if(File.Exists("Assembly_list.xsr")) 
           { 
// wait until Tekla Structures has unlocked the file, or timeout if(IfLockedWait("Assembly_list.xsr")) 
               { 
// display the report 
                   Operation.DisplayReport("Assembly_list.xsr"); 
               } 
           } 
       } 
} 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	Thrown when the TemplateName or FileName 
is null. 
System..::..ArgumentException	Thrown when the TemplateName or FileName 
is too short. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2283 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..CreateReportFromSelected Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a report from the selected objects using the given template name and filename. 
If a path is not given in the filename, the file is created to the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 

If the given folder does not exist, the report creation fails. 

See Tekla Structures Help for more information about reports. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool CreateReportFromSelected( 
string TemplateName, 
string FileName, 
string Title1, 
string Title2, 
string Title3 
) 
Visual Basic 
Public Shared Function CreateReportFromSelected (  
TemplateName As String, 
FileName As String, 
Title1 As String, 
Title2 As String, 
Title3 As String 
) As Boolean 
Parameters 

TemplateName 
Type: System..::..String 
The name of the report template to be used in report creation. The name must contain more than three characters. 

FileName 


Syntax	2284 


Point Fields 
Type: System..::..String 
The name of the created report. The name must contain more than three characters. 

Title1 
Type: System..::..String 
The first title for the created report. 

Title2 
Type: System..::..String 
The second title for the created report. 

Title3 
Type: System..::..String 
The third title for the created report. 

Return Value 

Type: Boolean 
True if the report is created. 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Operations; 
using Tekla.Structures.Geometry3d; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           Beam B = new Beam(new Point(0,0,0), new Point(0,0,6000)); 
           Beam B1 = new Beam(new Point(0,1000,0), new Point(0,1000,6000));            Beam B2 = new Beam(new Point(0,2000,0), new Point(0,2000,6000)); 
           B.Insert(); 
           B1.Insert(); 
           B2.Insert(); 
           ArrayList ObjectsToSelect = new ArrayList();            ObjectsToSelect.Add(B); 
           ObjectsToSelect.Add(B2); 
           Model.CommitChanges(); 
           Tekla.Structures.Model.UI.ModelObjectSelector ModelSelector = new Tekla.Structures.Mod            ModelSelector.Select(ObjectsToSelect); 
           Operation.CreateReportFromSelected("Assembly_list", "Assembly_list_selected.xsr", "MyT            Operation.DisplayReport("Assembly_list_selected.xsr"); 
       } 
} 


Examples	2285 


Point Fields 

Exceptions 
Exception	Condition 
System..::..ArgumentNullException	Thrown when the TemplateName or FileName 
is null. 
System..::..ArgumentException	Thrown when the TemplateName or FileName 
is too short. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 
































See Also	2286 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..DisplayPrompt Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Displays a message in the status bar. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool DisplayPrompt( 
string Message 
) 
Visual Basic 
Public Shared Function DisplayPrompt (  
Message As String 
) As Boolean 
Parameters 

Message 
Type: System..::..String 
The message to display. 

Return Value 

Type: Boolean 
True if the message could be displayed. 
Remarks 
Prompts 
Tekla Structures prefixes the given prompt with "prompt_" and looks for a translation in the prompts.ail file. If the translation (e.g. "prompt_Pick_first_position") is not found in the prompts.ail file, the prompt string is displayed as such. This feature can be used to give already translated strings to the picker. 
Exceptions 
Exception	Condition 

Exceptions	2287 


Point Fields 
System..::..ArgumentNullException	Thrown when the Message is null. See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 








































See Also	2288 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..DisplayReport Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Opens and displays a report with the given name. 
If a path is not given in the filename, the file is searched from the folder defined with the advanced option XS_REPORT_OUTPUT_DIRECTORY. 

See Tekla Structures Help for more information about reports. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool DisplayReport( 
string FileName 
) 
Visual Basic 
Public Shared Function DisplayReport (  
FileName As String 
) As Boolean 
Parameters 

FileName 
Type: System..::..String 
The name of the report to display. The name must contain more than three characters. 

Return Value 

Type: Boolean 
True if the report existed. 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when the file specified in the FileName is 
not found or when the FileName is too short. 

Exceptions	2289 


Point Fields 

See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	2290 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Group Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Groups a list of single rebars or rebar groups and creates a new rebar group. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static RebarGroup Group( 
IEnumerable RebarList 
) 
Visual Basic 
Public Shared Function Group (  
RebarList As IEnumerable 
) As RebarGroup 
Parameters 

RebarList 
Type: System.Collections..::..IEnumerable 
The list of single rebars and rebar groups to be grouped. 

Return Value 

Type: RebarGroup 
The created rebar group on success, null on failure. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2291 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..IsMacroRunning Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns true if a macro is running, false otherwise. 
Macros are saved as *.cs files in the folder defined with the XS_MACRO_DIRECTORY variable. 

See Tekla Structures Help for more information about macros. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool IsMacroRunning() 
Visual Basic 
Public Shared Function IsMacroRunning As Boolean 
Return Value 

Type: Boolean 
True if a macro is running. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2292 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..IsModelAutoSaved Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Tells whether a model has auto saved information. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use the method in ModelHandler class instead. Will be removed in near future public static bool IsModelAutoSaved( 
string ModelFolder 
) 
Visual Basic 
<ObsoleteAttribute("Use the method in ModelHandler class instead. Will be removed in near future Public Shared Function IsModelAutoSaved (  
ModelFolder As String 
) As Boolean 
Parameters 

ModelFolder 
Type: System..::..String 
The model folder to be used. 

Return Value 

Type: Boolean 
True if there is auto saved information. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2293 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..IsNumberingUpToDate Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Checks whether the numbering is up-to-date for an assembly, a part or a rebar. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool IsNumberingUpToDate( 
ModelObject ModelObject 
) 
Visual Basic 
Public Shared Function IsNumberingUpToDate (  
ModelObject As ModelObject 
) As Boolean 
Parameters 

ModelObject 
Type: Tekla.Structures.Model..::..ModelObject 
The model object to check. The object must be an assembly, a part, a rebar or an inherited object. 

Return Value 

Type: Boolean 
True if the numbering information is up-to-date. 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown if the ModelObject is not of a correct type 
or if it is not valid. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

See Also	2294 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2295 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..IsNumberingUpToDateAll Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Checks whether the numbering is up-to-date for every assembly, part and rebar on the model. 
Remarks 
Using this method is much faster than checking each object individually. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool IsNumberingUpToDateAll() 
Visual Basic 
Public Shared Function IsNumberingUpToDateAll As Boolean 
Return Value 

Type: Boolean 
True if the numbering information is up-to-date. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2296 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..MoveObject Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
MoveObject(ModelObject, Vector)	Moves the model object using the 
given translation vector. 
MoveObject(ModelObject, 
CoordinateSystem, CoordinateSystem) 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2297 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..MoveObject Method (ModelObject, Vector) 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves the model object using the given translation vector. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool MoveObject( 
ModelObject Object, 
Vector TranslationVector 
) 
Visual Basic 
Public Shared Function MoveObject (  
Object As ModelObject, 
TranslationVector As Vector 
) As Boolean 
Parameters 

Object 
Type: Tekla.Structures.Model..::..ModelObject The model object to move. 

TranslationVector 
Type: Tekla.Structures.Geometry3d..::..Vector 
The vector for moving the object. 

Return Value 

Type: Boolean 
True on success, false on failure. 
Remarks 
Note that the object is moved and updated in the view so ModelObject.Modify() is not needed. Call Modify() only after the object's data has been updated with the ModelObject.Select() method. 




Remarks	2298 


Point Fields 

Examples 
In the following example a connection to the Tekla Structures model has already been established. The example code creates a beam to the model and moves the beam one meter in the x and y directions. 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Operations; 
using Tekla.Structures.Geometry3d; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam1 = new Beam(new Point(0, 0, 0), new Point(3000, 0, 0));            Beam1.Profile.ProfileString = "PL10*140"; 
if(Beam1.Insert()) 
           { 
               Vector Vector1 = new Vector(1000, 1000, 0); 
if(Operation.MoveObject(Beam1, Vector1))                    MessageBox.Show("Move succeeded"); 
           } 
       } 
} 
See Also 
Operation Class 
Operation Members 
MoveObject Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2299 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..MoveObject Method (ModelObject, CoordinateSystem, CoordinateSystem) 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Moves the model object between the given translation coordinate systems. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool MoveObject( 
ModelObject Object, 
CoordinateSystem StartCoordinateSystem, 
CoordinateSystem EndCoordinateSystem 
) 
Visual Basic 
Public Shared Function MoveObject (  
Object As ModelObject, 
StartCoordinateSystem As CoordinateSystem, 
EndCoordinateSystem As CoordinateSystem 
) As Boolean 
Parameters 

Object 
Type: Tekla.Structures.Model..::..ModelObject The model object to move. 

StartCoordinateSystem 
Type: Tekla.Structures.Geometry3d..::..CoordinateSystem 
The coordinate system to move the object from. 

EndCoordinateSystem 
Type: Tekla.Structures.Geometry3d..::..CoordinateSystem 
The coordinate system to move the object to. 

Return Value 

Type: Boolean 
True on success, false on failure. 



Syntax	2300 


Point Fields 

Remarks 
Note that the object is moved and updated in the view so ModelObject.Modify() is not needed. Call Modify() only after the object's data has been updated with the ModelObject.Select() method. 
Examples 
In the following example a connection to the Tekla Structures model has already been established. The example code creates a beam (Beam3) to the model and moves the beam between the coordinate systems of Beam1 and Beam2. 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Operations; 
using Tekla.Structures.Geometry3d; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam1 = new Beam(new Point(0, 0, 0), new Point(3000, 0, 0));            Beam1.Profile.ProfileString = "PL10*140"; 
           Beam1.Insert(); 
           Beam Beam2 = new Beam(new Point(3000, 0, 0), new Point(6000, 0, 0));            Beam2.Profile.ProfileString = "PL10*140"; 
           Beam2.Insert(); 
           Beam Beam3 = new Beam(new Point(100, 0, 0), new Point(100, 0, 400));            Beam3.Profile.ProfileString = "PL10*140"; 
           Beam3.Insert(); 
if(Operation.MoveObject(Beam3, Beam1.GetCoordinateSystem(), Beam2.GetCoordinateSystem(                MessageBox.Show("Move succeeded"); 
       } 
} 
See Also 
Operation Class 
Operation Members 
MoveObject Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2301 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ObjectMatchesToFilter Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
ObjectMatchesToFilter(ModelObject, 
String) 
ObjectMatchesToFilter(ModelObject, FilterExpression) 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 


Checks whether the object matches to the criteria in the given filter. 




















See Also	2302 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ObjectMatchesToFilter Method (ModelObject, String) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Checks whether the object matches to the criteria in the given filter. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool ObjectMatchesToFilter( 
ModelObject ModelObject, 
string FilterName 
) 
Visual Basic 
Public Shared Function ObjectMatchesToFilter (  
ModelObject As ModelObject, 
FilterName As String 
) As Boolean 
Parameters 

ModelObject 
Type: Tekla.Structures.Model..::..ModelObject 
The model object to check. 

FilterName 
Type: System..::..String 
The filter file to check against. 

Return Value 

Type: Boolean 
True if the object matches to the given filter criteria. 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when the ModelObject is not valid. 




Exceptions	2303 


Point Fields 

See Also 
Operation Class 
Operation Members 
ObjectMatchesToFilter Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2304 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ObjectMatchesToFilter Method (ModelObject, FilterExpression) Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Checks whether the object matches to the criteria in the given filter. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool ObjectMatchesToFilter( 
ModelObject ModelObject, 
FilterExpression FilterExpression 
) 
Visual Basic 
Public Shared Function ObjectMatchesToFilter (  
ModelObject As ModelObject, 
FilterExpression As FilterExpression 
) As Boolean 
Parameters 

ModelObject 
Type: Tekla.Structures.Model..::..ModelObject 
The model object to check. 

FilterExpression 
Type: Tekla.Structures.Filtering..::..FilterExpression 
The definition of a selection filter to check against. 

Return Value 

Type: Boolean 
True if the object matches to the given filter criteria. 
Examples 
In the following example a connection to the Tekla Structures model has already been established. The example code creates a beam to the model and moves the beam one meter in the x and y directions. 

  	Copy 
using Tekla.Structures.Model; 

Examples	2305 


Point Fields 
using Tekla.Structures.Model.Operations; using Tekla.Structures.Filtering; 
using Tekla.Structures.Filtering.Categories; using Tekla.Structures.Geometry3d; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Beam Beam1 = new Beam(new Point(0, 0, 0), new Point(3000, 0, 0)); 
           Beam1.Profile.ProfileString = "PL10*140"; 
           Beam1.Name = "GetObjectsByFilter"; 
if(Beam1.Insert()) 
           { 
               BinaryFilterExpression FilterExpression1 = new BinaryFilterExpression(new PartFilt                                                               StringOperatorType.IS_EQUAL,  
new StringConstantFilterExpression( if(Operation.ObjectMatchesToFilter(Beam1, FilterExpression1)) 
                   MessageBox.Show("Object matches the filter"); 
           } 
       } 
} 
Exceptions 
Exception	Condition 
System..::..ArgumentException	Thrown when the ModelObject is not valid. 
See Also 
Operation Class 
Operation Members 
ObjectMatchesToFilter Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2306 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Open Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Obsolete. 
Open(String) 

Open(String, Boolean) 


Opens a new model to Tekla Structures ignoring auto saved information. 
Obsolete. 
Opens a new model to Tekla Structures. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2307 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Open Method (String) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Opens a new model to Tekla Structures ignoring auto saved information. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use the method in ModelHandler class instead. Will be removed in near future public static bool Open( 
string ModelFolder 
) 
Visual Basic 
<ObsoleteAttribute("Use the method in ModelHandler class instead. Will be removed in near future Public Shared Function Open (  
ModelFolder As String 
) As Boolean 
Parameters 

ModelFolder 
Type: System..::..String 
The model folder to be used. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Operation Class 
Operation Members 
Open Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2308 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Open Method (String, Boolean) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Opens a new model to Tekla Structures. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 
2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[ObsoleteAttribute("Use the method in ModelHandler class instead. Will be removed in near future public static bool Open( 
string ModelFolder, 
bool OpenAutoSaved 
) 
Visual Basic 
<ObsoleteAttribute("Use the method in ModelHandler class instead. Will be removed in near future Public Shared Function Open (  
ModelFolder As String, 
OpenAutoSaved As Boolean 
) As Boolean 
Parameters 

ModelFolder 
Type: System..::..String 
The model folder to be used. 

OpenAutoSaved 
Type: System..::..Boolean 
Tells whether to open auto saved information or not. 

Return Value 
Type: Boolean 
True on success. 
See Also 
Operation Class 
Operation Members 
Open Overload Tekla.Structures.Model.Operations Namespace 

See Also	2309 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2310 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..RunMacro Method 
Operation Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Starts a macro with the given name. Throws an exception if the file is not found. 
Macros are saved as *.cs files in the folder defined with the XS_MACRO_DIRECTORY variable. 

It is possible to run drawing macros using relative paths. 

See Tekla Structures Help for more information about macros. 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool RunMacro( 
string FileName 
) 
Visual Basic 
Public Shared Function RunMacro (  
FileName As String 
) As Boolean 
Parameters 

FileName 
Type: System..::..String 
The name of the macro to start. 

Return Value 

Type: Boolean 
True if the macro existed. 
Examples 
  	Copy 
using Tekla.Structures.Model.Operations; 
public class Example 

Examples	2311 


Point Fields 
{ 
public void Example1() 
       { 
           Operation.RunMacro("MyModelingMacro.cs"); 
           Operation.RunMacro(@"..\drawings\MyDrawingMacro.cs");        } 
} 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	2312 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..SaveAsWebModel Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Saves the current model as a web model. 
You can save the model as a web model that can be viewed via the Internet using a web browser (e.g. Internet Explorer). 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SaveAsWebModel( 
string Filename 
) 
Visual Basic 
Public Shared Function SaveAsWebModel (  
Filename As String 
) As Boolean 
Parameters 

Filename 
Type: System..::..String 
The filename to be used. 

Return Value 

Type: Boolean 
True on success, false on failure. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	2313 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..SaveSelectedAsWebModel Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Saves the selected objects as a web model. 
You can save the selected objects as a web model that can be viewed via the Internet using a web browser (e.g. Internet Explorer). 

Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SaveSelectedAsWebModel( 
string Filename 
) 
Visual Basic 
Public Shared Function SaveSelectedAsWebModel (  
Filename As String 
) As Boolean 
Parameters 

Filename 
Type: System..::..String 
The filename to be used. 

Return Value 

Type: Boolean 
True on success, false on failure. 
See Also 
Operation Class 
Operation Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	2314 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Split Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Split(Beam, Point)	Splits the beam and creates a new one in 
the given position. 
Split(CircleRebarGroup, Line)	Splits the circle rebar group and creates a 
new one in the given position. Split(ContourPlate, Polygon)	Splits the contour plate and creates a new 
one along the given polygon. Split(CurvedRebarGroup, Line)	Splits the curved rebar group and creates 
a new one in the given position. Split(RebarGroup, Line)	Splits the rebar group and creates a new 
one in the given position. Split(SingleRebar, Line)	Splits the single rebar and creates a new 
one in the given position. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2315 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Split Method (Beam, Point) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Splits the beam and creates a new one in the given position. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static Beam Split( 
Beam Object, 
Point SplitPoint 
) 
Visual Basic 
Public Shared Function Split (  
Object As Beam, 
SplitPoint As Point 
) As Beam 
Parameters 

Object 
Type: Tekla.Structures.Model..::..Beam The beam object to be splitted. 

SplitPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The position where splitting is executed. 

Return Value 

Type: Beam 
The created beam on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Split Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2316 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..Split Method (CircleRebarGroup, Line) Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Splits the circle rebar group and creates a new one in the given position. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static CircleRebarGroup Split( 
CircleRebarGroup Object, 
Line SplitLine 
) 
Visual Basic 
Public Shared Function Split (  
Object As CircleRebarGroup, 
SplitLine As Line 
) As CircleRebarGroup 
Parameters 

Object 
Type: Tekla.Structures.Model..::..CircleRebarGroup The circle rebar group object to be splitted. 

SplitLine 
Type: Tekla.Structures.Geometry3d..::..Line 
The line where splitting is executed. 

Return Value 

Type: CircleRebarGroup 
The created circle rebar group on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Split Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2317 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Split Method (ContourPlate, Polygon) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Splits the contour plate and creates a new one along the given polygon. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ContourPlate Split( 
ContourPlate Object, 
Polygon SplitPolygon 
) 
Visual Basic 
Public Shared Function Split (  
Object As ContourPlate, 
SplitPolygon As Polygon 
) As ContourPlate 
Parameters 

Object 
Type: Tekla.Structures.Model..::..ContourPlate The contour plate object to be splitted. 

SplitPolygon 
Type: Tekla.Structures.Model..::..Polygon 
The position where splitting is executed. 

Return Value 

Type: ContourPlate 
The created contour plate on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Split Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2318 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Split Method (CurvedRebarGroup, Line) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Splits the curved rebar group and creates a new one in the given position. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static CurvedRebarGroup Split( 
CurvedRebarGroup Object, 
Line SplitLine 
) 
Visual Basic 
Public Shared Function Split (  
Object As CurvedRebarGroup, 
SplitLine As Line 
) As CurvedRebarGroup 
Parameters 

Object 
Type: Tekla.Structures.Model..::..CurvedRebarGroup The curved rebar group object to be splitted. 

SplitLine 
Type: Tekla.Structures.Geometry3d..::..Line 
The line where splitting is executed. 

Return Value 

Type: CurvedRebarGroup 
The created curved rebar group on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Split Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2319 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Split Method (RebarGroup, Line) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Splits the rebar group and creates a new one in the given position. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static RebarGroup Split( 
RebarGroup Object, 
Line SplitLine 
) 
Visual Basic 
Public Shared Function Split (  
Object As RebarGroup, 
SplitLine As Line 
) As RebarGroup 
Parameters 

Object 
Type: Tekla.Structures.Model..::..RebarGroup The rebar group object to be splitted. 

SplitLine 
Type: Tekla.Structures.Geometry3d..::..Line 
The line where splitting is executed. 

Return Value 

Type: RebarGroup 
The created rebar group on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Split Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2320 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Split Method (SingleRebar, Line) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Splits the single rebar and creates a new one in the given position. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static SingleRebar Split( 
SingleRebar Object, 
Line SplitLine 
) 
Visual Basic 
Public Shared Function Split (  
Object As SingleRebar, 
SplitLine As Line 
) As SingleRebar 
Parameters 

Object 
Type: Tekla.Structures.Model..::..SingleRebar The single rebar object to be splitted. 

SplitLine 
Type: Tekla.Structures.Geometry3d..::..Line 
The line where splitting is executed. 

Return Value 

Type: SingleRebar 
The created single rebar on success, null on failure. 
See Also 
Operation Class 
Operation Members 
Split Overload 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2321 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Ungrouping Method 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Ungrouping(RebarGroup) Ungroups the rebar group and creates new single 
rebars. 
Ungrouping(RebarMesh)	Ungroups the rebar mesh and creates new single 
rebars. 
See Also 
Operation Class 
Operation Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2322 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Ungrouping Method (RebarGroup) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Ungroups the rebar group and creates new single rebars. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelObjectEnumerator Ungrouping( 
RebarGroup Reinforcement 
) 
Visual Basic 
Public Shared Function Ungrouping (  
Reinforcement As RebarGroup 
) As ModelObjectEnumerator 
Parameters 

Reinforcement 
Type: Tekla.Structures.Model..::..RebarGroup 
The rebar group to be ungrouped. 

Return Value 
Type: ModelObjectEnumerator 
An enumerator of single rebars. 
See Also 
Operation Class 
Operation Members 
Ungrouping Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2323 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..Ungrouping Method (RebarMesh) 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Ungroups the rebar mesh and creates new single rebars. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelObjectEnumerator Ungrouping( 
RebarMesh Reinforcement 
) 
Visual Basic 
Public Shared Function Ungrouping (  
Reinforcement As RebarMesh 
) As ModelObjectEnumerator 
Parameters 

Reinforcement 
Type: Tekla.Structures.Model..::..RebarMesh 
The rebar mesh to be ungrouped. 

Return Value 
Type: ModelObjectEnumerator 
An enumerator of single rebars. 
See Also 
Operation Class 
Operation Members 
Ungrouping Overload Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2324 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..MISExportTypeEnum Enumeration 
Operation Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The MIS export types. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum MISExportTypeEnum 
Visual Basic 
Public Enumeration MISExportTypeEnum 
Members 
Member name  Value		Description 
DSTV	0	The DSTV type. 
KISS	1	The KISS type. 
EJE	2	The EJE type. 
EPC	3	The EPC type. 
STEEL2000	4	The STEEL2000 type. 
See Also 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2325 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..ProgressBar Class 
Operation Class  Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ProgressBar class implements progress bar with cancel button. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public class ProgressBar 
Visual Basic 
Public Class ProgressBar 
Examples 
The following example displays progress bar, updates progress, checks if cancel has been pressed and closes the progress bar. 

  	Copy 
var progress = new Tekla.Structures.Model.Operations.Operation.ProgressBar(); bool displayResult = progress.Display(100, "title", "message", "cancel..", " "); // looping ii from 0 to totalCount-1 
{ 
if (ii % 20 == 0) // progress update every 20th item 
    { 
if (progress.Canceled()) 
        { 
break; 
        } 
        progress.SetProgress(ii.ToString(), 100*ii/totalCount); 
    }                 
} 
progress.Close(); 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Operations..::..Operation..::..ProgressBar 
See Also 
Operation..::..ProgressBar Members 
Tekla.Structures.Model.Operations Namespace 

See Also	2326 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2327 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..ProgressBar Members 
Operation..::..ProgressBar Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Operation..::..ProgressBar type exposes the following members. 
Constructors 
  	Name	Description 
Operation..::..ProgressBar	Initializes a new instance of the Operation..::..ProgressBar class 
Methods 
  	Name	Description 
Canceled	Check if cancel has been pressed. 
Close	Close progress bar. Can be called even if Display was not successful. Display	Display progress bar dialog with cancel button. Display will fail if 
progress bar is already displayed. 
SetProgress Update status information on the progress bar. 
See Also 
Operation..::..ProgressBar Class 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2328 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..ProgressBar Constructor 
Operation..::..ProgressBar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Initializes a new instance of the Operation..::..ProgressBar class 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ProgressBar() 
Visual Basic 
Public Sub New 
See Also 
Operation..::..ProgressBar Class 
Operation..::..ProgressBar Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2329 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Operation..::..ProgressBar Methods 
Operation..::..ProgressBar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Operation..::..ProgressBar type exposes the following members. 
Methods 
  	Name	Description 
Canceled	Check if cancel has been pressed. 
Close	Close progress bar. Can be called even if Display was not successful. Display	Display progress bar dialog with cancel button. Display will fail if 
progress bar is already displayed. 
SetProgress Update status information on the progress bar. 
See Also 
Operation..::..ProgressBar Class 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2330 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ProgressBar..::..Canceled Method 
Operation..::..ProgressBar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Check if cancel has been pressed. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Canceled() 
Visual Basic 
Public Function Canceled As Boolean 
Return Value 

Type: Boolean 
True if cancel has been pressed. 
See Also 
Operation..::..ProgressBar Class Operation..::..ProgressBar Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2331 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ProgressBar..::..Close Method 
Operation..::..ProgressBar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Close progress bar. Can be called even if Display was not successful. Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Close() 
Visual Basic 
Public Sub Close 
See Also 
Operation..::..ProgressBar Class 
Operation..::..ProgressBar Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2332 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ProgressBar..::..Display Method 
Operation..::..ProgressBar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Display progress bar dialog with cancel button. Display will fail if progress bar is already displayed. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Display( 
int SleepTime, 
string Title, 
string Message, 
string CancelButtonLabel, 
string ProgressLabel 
) 
Visual Basic 
Public Function Display (  
SleepTime As Integer, 
Title As String, 
Message As String, 
CancelButtonLabel As String, 
ProgressLabel As String 
) As Boolean 
Parameters 

SleepTime 
Type: System..::..Int32 
Time (ms) to wait until bar is displayed. 

Title 
Type: System..::..String Title of the dialog. 

Message 
Type: System..::..String 
Message to be displayed on the dialog above progress bar. 

CancelButtonLabel 
Type: System..::..String 
Label of cancel button. 

Syntax	2333 


Point Fields 
ProgressLabel 
Type: System..::..String 
Initial progress label (updated with SetProgress). If empty of null no bar exists. 

Return Value 

Type: Boolean 
True if bar was displayed successfully (meaning bar must be closed later). 
See Also 
Operation..::..ProgressBar Class 
Operation..::..ProgressBar Members 
Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 


































See Also	2334 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Operation..::..ProgressBar..::..SetProgress Method 
Operation..::..ProgressBar Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Update status information on the progress bar. 
Namespace:  Tekla.Structures.Model.Operations 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void SetProgress( 
string ProgressLabel, 
int Progress 
) 
Visual Basic 
Public Sub SetProgress (  ProgressLabel As String, Progress As Integer 
) 
Parameters 

ProgressLabel 
Type: System..::..String 
Bar label text. 

Progress 
Type: System..::..Int32 
Progess, number between 0..100 
See Also 
Operation..::..ProgressBar Class Operation..::..ProgressBar Members Tekla.Structures.Model.Operations Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2335 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Tekla.Structures.Model.UI Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Model.UI namespace consists of some classes that can be used, for example, to highlight objects from the user interface. 
Classes 
  	Class	Description 
ClipPlane	The ClipPlane class defines a clip plane which can be 
used together with a visible view. 
ClipPlaneCollection	The ClipPlaneCollection class handles the collection of 
the clip planes. 
The Color class represents an RGB color with 
Color 


transparency. The color values must be between 0.0 and 1.0. 
GraphicPolyLine 
GraphicsDrawer	The GraphicsDrawer class draws temporary graphics in 
the currently active rendered view in Tekla Structures. Mesh	The Mesh class represents a mesh for drawing 
three-dimensional data. 
The ModelObjectSelector class can be used to select objects from the Tekla Structures user interface. 
ModelObjectSelector 




ModelObjectVisualization 



ModelViewEnumerator 


Picker 

PickInput 


Currently, these selections both select the objects from the database and highlight them visually. 
The class to set and clear temporary visualization 
(color and transparency) for model objects in view. Permananet representation will be restored when view is redrawed or temporary visualization is cleared. Can be used also to fetch current permanent representation of model object. 
The ModelViewEnumerator class is an enumerator class for model views. The enumerator enables model view items to be looped. 
The Picker class can be used to query the user to do manual picks of objects and points from the Tekla Structures model. The methods throw an exception if the user interrupts (cancels) the pick command. 

Classes	2336 


Point Fields 
The PickInput class handles the input of picked objects and positions. 
View	The View class contains methods related to views. 
The ViewCamera class defines a camera which can be used together with a visible view. Always supply a properly orthogonalized camera up vector when rotating the camera. 
ViewHandler	The ViewHandler class contains methods for handling 
views. 
Enumerations 
  	Enumeration	Description 
GraphicPolyLine..::..LineType	The appearance of the line. For instance solid, 
dashed or dotted. 
Picker..::..PickObjectEnum	The possible model object pick types for a 
single object. 
Picker..::..PickObjectsEnum	The possible model object pick types for many 
objects. 
Picker..::..PickPointEnum	The possible point pick types. 
The possible temporary transparencies. Used to temporarily change transparency of a model object to visualize some state in the model. 
View..::..DisplayOrientationType	The view plane types. The plane type can be 
changed. 
View..::..ViewProjectionType	The view projection types. The projection type 
can be read but not changed. View..::..ViewRenderingType	The view rendering types. Only rendered views 
can be modified. 
Copyright  © Tekla 2013. All rights reserved. 
















Enumerations	2337 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ClipPlane class defines a clip plane which can be used together with a visible view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class ClipPlane 
Visual Basic 
<SerializableAttribute> 
Public Class ClipPlane 
Examples 
The following example shows how three ClipPlanes are created to the first visible view: 

  	Copy 
using System; 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
public class ClipPlaneExample 
{ 
public void ClipPlaneExample1() 
    { 
        ModelViewEnumerator ViewEnum = ViewHandler.GetVisibleViews();         ViewEnum.MoveNext(); 
        View ActiveView = ViewEnum.Current; 
        ClipPlane CPlane = new ClipPlane(); 
        CPlane.View = ActiveView; 
        CPlane.UpVector = new Vector(1, 0, 0); 
        CPlane.Location = new Point(20000, 10000, 5000); 
        CPlane.Insert(); 
        CPlane.UpVector = new Vector(0, 1, 0); 
        CPlane.Location = new Point(10000, 20000, 2000);         CPlane.Insert(); 
        CPlane.UpVector = new Vector(0, 0, 1); 

Examples	2338 


Point Fields 
        CPlane.Location = new Point(20000, 20000, 6000);         CPlane.Insert(); 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ClipPlane 
See Also 
ClipPlane Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



































See Also	2339 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane Members 
ClipPlane Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClipPlane type exposes the following members. 
Constructors 
  	Name	Description 
ClipPlane Instantiates a new view camera instance with zero length vectors. Methods 
  	Name	Description 
Delete	Deletes the clip plane from the application view. The application view 
must be visible. 
Insert	Creates a new clip plane to the application view. The application view 
must be visible. 
Modify Modifies the clip plane position in the application view. The application 
view must be visible. 
Properties 
  	Name	Description 
Location	The clip plane location in global coordinates (XYZ). 
UpVector The clip plane up vector in global coordinates (XYZ). 
View	The view the clip plane belongs to. 
See Also 
ClipPlane Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	2340 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane Constructor 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Instantiates a new view camera instance with zero length vectors. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ClipPlane() 
Visual Basic 
Public Sub New 
See Also 
ClipPlane Class 
ClipPlane Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2341 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane Methods 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClipPlane type exposes the following members. 
Methods 
  	Name	Description 
Delete	Deletes the clip plane from the application view. The application view 
must be visible. 
Insert	Creates a new clip plane to the application view. The application view 
must be visible. 
Modify Modifies the clip plane position in the application view. The application 
view must be visible. 
See Also 
ClipPlane Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2342 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane..::..Delete Method 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Deletes the clip plane from the application view. The application view must be visible. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Delete() 
Visual Basic 
Public Function Delete As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ClipPlane Class 
ClipPlane Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2343 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane..::..Insert Method 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new clip plane to the application view. The application view must be visible. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Insert() 
Visual Basic 
Public Function Insert As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ClipPlane Class 
ClipPlane Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2344 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane..::..Modify Method 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Modifies the clip plane position in the application view. The application view must be visible. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Modify() 
Visual Basic 
Public Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ClipPlane Class 
ClipPlane Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2345 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane Properties 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClipPlane type exposes the following members. 
Properties 
  	Name	Description 
Location	The clip plane location in global coordinates (XYZ). UpVector The clip plane up vector in global coordinates (XYZ). View	The view the clip plane belongs to. 
See Also 
ClipPlane Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2346 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane..::..Location Property 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The clip plane location in global coordinates (XYZ). 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Location { get; set; } 
Visual Basic 
Public Property Location As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ClipPlane Class 
ClipPlane Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2347 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane..::..UpVector Property 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The clip plane up vector in global coordinates (XYZ). 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector UpVector { get; set; } 
Visual Basic 
Public Property UpVector As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
ClipPlane Class 
ClipPlane Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2348 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlane..::..View Property 
ClipPlane Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view the clip plane belongs to. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View View { get; set; } 
Visual Basic 
Public Property View As View 
Get 
Set 
Property Value 
Type: View 
See Also 
ClipPlane Class 
ClipPlane Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2349 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlaneCollection Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ClipPlaneCollection class handles the collection of the clip planes. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ClipPlaneCollection : ICollection,  
IEnumerable 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ClipPlaneCollection 
Implements ICollection, IEnumerable 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ClipPlaneCollection 
See Also 
ClipPlaneCollection Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2350 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlaneCollection Members 
ClipPlaneCollection Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClipPlaneCollection type exposes the following members. 
Methods 
  	Name	Description 
CopyTo	Copies the elements of the ICollection to an Array, starting at a 
particular Array index. 
GetEnumerator Returns an enumerator that iterates through a collection. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
ClipPlaneCollection Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2351 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlaneCollection Methods 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClipPlaneCollection type exposes the following members. 
Methods 
  	Name	Description 
CopyTo	Copies the elements of the ICollection to an Array, starting at a 
particular Array index. 
GetEnumerator Returns an enumerator that iterates through a collection. 
See Also 
ClipPlaneCollection Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2352 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlaneCollection..::..CopyTo Method 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Copies the elements of the ICollection to an Array, starting at a particular Array index. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void CopyTo( 
Array array, 
int index 
) 
Visual Basic 
Public Sub CopyTo (  
array As Array, 
index As Integer 
) 
Parameters 

array 
Type: System..::..Array 
The one-dimensional Array that is the destination of the elements copied from the ICollection. The Array must have zero-based indexing. 

index 
Type: System..::..Int32 
The zero-based index in the array at which copying begins. 

Implements 

ICollection..::..CopyTo(Array, Int32) 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	Thrown when the array is null. System..::..ArgumentOutOfRangeException	Thrown when the index is less than 
zero. 

Exceptions	2353 







System..::..ArgumentException 





System..::..InvalidCastException 



Point Fields 
Thrown when the array is multidimensional, or the index is equal to or greater than the length of the array, or the number of elements in 
the source ICollection is greater than the available space from the index to the end of the destination array. 
Thrown when the type of the source ICollection cannot be cast automatically to the type of the destination array. 
See Also 
ClipPlaneCollection Class ClipPlaneCollection Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






























See Also	2354 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClipPlaneCollection..::..GetEnumerator Method 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator that iterates through a collection. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator GetEnumerator() 
Visual Basic 
Public Function GetEnumerator As IEnumerator 
Return Value 

Type: IEnumerator 
An IEnumerator object that can be used to iterate through the collection. 

Implements 

IEnumerable..::..GetEnumerator()()()() 
See Also 
ClipPlaneCollection Class ClipPlaneCollection Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2355 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlaneCollection Properties 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ClipPlaneCollection type exposes the following members. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
ClipPlaneCollection Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2356 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ClipPlaneCollection..::..Count Property 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the number of elements contained in the ICollection. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Count { get; } 
Visual Basic 
Public ReadOnly Property Count As Integer 
Get 
Property Value 

Type: Int32 

Implements 

ICollection..::..Count 
See Also 
ClipPlaneCollection Class ClipPlaneCollection Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2357 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClipPlaneCollection..::..IsSynchronized Property 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a value indicating whether access to the ICollection is synchronized (thread safe). Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsSynchronized { get; } 
Visual Basic 
Public ReadOnly Property IsSynchronized As Boolean 
Get 
Property Value 

Type: Boolean 

Implements 

ICollection..::..IsSynchronized 
See Also 
ClipPlaneCollection Class ClipPlaneCollection Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2358 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ClipPlaneCollection..::..SyncRoot Property 
ClipPlaneCollection Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets an object that can be used to synchronize access to the ICollection. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object SyncRoot { get; } 
Visual Basic 
Public ReadOnly Property SyncRoot As Object 
Get 
Property Value 

Type: Object 

Implements 

ICollection..::..SyncRoot 
See Also 
ClipPlaneCollection Class ClipPlaneCollection Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2359 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Color class represents an RGB color with transparency. The color values must be between 0.0 and 1.0. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Color 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Color 
Examples 
  	Copy 
using Tekla.Structures.Model.UI; 
public class Example 
{ 
public void Example1() 
       { 
           Color SolidGreen = new Color(0.0, 1.0, 0.0); 
           Color SeeThroughBlue = new Color(0.0, 0.0, 1.0, 0.5);        } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..Color 
See Also 
Color Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2360 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Color Members 
Color Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Color type exposes the following members. 
Constructors 
  	Name	Description 
Color()()()()	Creates a new color object. The default object 
is black. 
Color(Double, Double, Double)	Creates a new color object with the given 
values. 
Color(Double, Double, Double, 
Double) 
Properties 
  	Name	Description 
Blue	The blue value of the color, between 0.0 and 1.0. 
Green	The green value of the color, between 0.0 and 1.0. 
Red	The red value of the color, between 0.0 and 1.0. 
Transparency The transparency value of the color, between 0.0 (completely 
see-through) and 1.0 (completely solid). 
See Also 
Color Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2361 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Color Constructor 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Color()()()()	Creates a new color object. The default object 
is black. 
Color(Double, Double, Double)	Creates a new color object with the given 
values. 
Color(Double, Double, Double, 
Double) 
See Also 
Color Class 
Color Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2362 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color Constructor 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new color object. The default object is black. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Color() 
Visual Basic 
Public Sub New 
See Also 
Color Class 
Color Members 
Color Overload 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2363 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color Constructor (Double, Double, Double) 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new color object with the given values. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Color( 
double Red, 
double Green, 
double Blue 
) 
Visual Basic 
Public Sub New (  
Red As Double, 
Green As Double, 
Blue As Double 
) 
Parameters 

Red 
Type: System..::..Double 
The red value of the color, between 0.0 and 1.0. 

Green 
Type: System..::..Double 
The green value of the color, between 0.0 and 1.0. 

Blue 
Type: System..::..Double 
The blue value of the color, between 0.0 and 1.0. 
See Also 
Color Class 
Color Members 
Color Overload 
Tekla.Structures.Model.UI Namespace 

See Also	2364 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2365 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color Constructor (Double, Double, Double, Double) 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new color object with the given values. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Color( 
double Red, 
double Green, 
double Blue, 
double Transparency 
) 
Visual Basic 
Public Sub New (  
Red As Double, 
Green As Double, 
Blue As Double, 
Transparency As Double 
) 
Parameters 

Red 
Type: System..::..Double 
The red value of the color, between 0.0 and 1.0. 

Green 
Type: System..::..Double 
The green value of the color, between 0.0 and 1.0. 

Blue 
Type: System..::..Double 
The blue value of the color, between 0.0 and 1.0. 

Transparency 
Type: System..::..Double 
The transparency value of the color, between 0.0 (completely see-through) and 1.0 (completely solid). 


Syntax	2366 


Point Fields 

See Also 
Color Class 
Color Members 
Color Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2367 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Color Properties 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Color type exposes the following members. 
Properties 
  	Name	Description 
Blue	The blue value of the color, between 0.0 and 1.0. 
Green	The green value of the color, between 0.0 and 1.0. 
Red	The red value of the color, between 0.0 and 1.0. 
Transparency The transparency value of the color, between 0.0 (completely 
see-through) and 1.0 (completely solid). 
See Also 
Color Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2368 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color..::..Blue Property 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The blue value of the color, between 0.0 and 1.0. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Blue { get; set; } 
Visual Basic 
Public Property Blue As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Color Class 
Color Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2369 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color..::..Green Property 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The green value of the color, between 0.0 and 1.0. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Green { get; set; } 
Visual Basic 
Public Property Green As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Color Class 
Color Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2370 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color..::..Red Property 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The red value of the color, between 0.0 and 1.0. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Red { get; set; } 
Visual Basic 
Public Property Red As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Color Class 
Color Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2371 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Color..::..Transparency Property 
Color Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The transparency value of the color, between 0.0 (completely see-through) and 1.0 (completely solid). 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double Transparency { get; set; } 
Visual Basic 
Public Property Transparency As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
Color Class 
Color Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2372 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
[Missing <summary> documentation for "T:Tekla.Structures.Model.UI.GraphicPolyLine"] 

Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class GraphicPolyLine 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class GraphicPolyLine 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..GraphicPolyLine 
See Also 
GraphicPolyLine Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2373 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Members 
GraphicPolyLine Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GraphicPolyLine type exposes the following members. 
Constructors 
  	Name	Description 
GraphicPolyLine()()()()	Create a black line with width 
1 and solid line type. 
GraphicPolyLine(Color, Int32, GraphicPolyLine..::..LineType) 
GraphicPolyLine(PolyLine, Color, Int32, GraphicPolyLine..::..LineType) 


Create a graphic polyline object. 
Properties 
  	Name	Description 
Color	The line color. 
PolyLine The path of the line. 
Type	The appearance of the line. For instance solid, dashed or dotted. 
Width	The line width in pixels. NOTE: Currently the valid width values are 1, 2 
and 4 
See Also 
GraphicPolyLine Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2374 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Constructor 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
GraphicPolyLine()()()()	Create a black line with width 
1 and solid line type. 
GraphicPolyLine(Color, Int32, GraphicPolyLine..::..LineType) 
GraphicPolyLine(PolyLine, Color, Int32, GraphicPolyLine..::..LineType) 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


Create a graphic polyline object. 


















See Also	2375 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Constructor 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Create a black line with width 1 and solid line type. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GraphicPolyLine() 
Visual Basic 
Public Sub New 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members 
GraphicPolyLine Overload 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2376 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Constructor (Color, Int32, GraphicPolyLine..::..LineType) GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Create a graphic polyline object with 0 points. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GraphicPolyLine( 
Color color, 
int width, 
GraphicPolyLine..::..LineType type 
) 
Visual Basic 
Public Sub New (  
color As Color, 
width As Integer, 
type As GraphicPolyLine..::..LineType 
) 
Parameters 

color 
Type: Tekla.Structures.Model.UI..::..Color The color of the line. 

width 
Type: System..::..Int32 The width of the line. 

type 
Type: Tekla.Structures.Model.UI..::..GraphicPolyLine..::..LineType The type of the line. For example solid, dashed or dotted. 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members 
GraphicPolyLine Overload 
Tekla.Structures.Model.UI Namespace 

See Also	2377 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2378 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Constructor (PolyLine, Color, Int32, GraphicPolyLine..::..LineType) GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Create a graphic polyline object. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GraphicPolyLine( 
PolyLine polyLine, 
Color color, 
int width, 
GraphicPolyLine..::..LineType type 
) 
Visual Basic 
Public Sub New (  
polyLine As PolyLine, 
color As Color, 
width As Integer, 
type As GraphicPolyLine..::..LineType 
) 
Parameters 

polyLine 
Type: Tekla.Structures.Geometry3d..::..PolyLine 
The path of the line. 

color 
Type: Tekla.Structures.Model.UI..::..Color The color of the line. 

width 
Type: System..::..Int32 The width of the line. 

type 
Type: Tekla.Structures.Model.UI..::..GraphicPolyLine..::..LineType The type of the line. For example solid, dashed or dotted. 



Syntax	2379 


Point Fields 

See Also 
GraphicPolyLine Class 
GraphicPolyLine Members GraphicPolyLine Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2380 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine Properties 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GraphicPolyLine type exposes the following members. 
Properties 
  	Name	Description 
Color	The line color. 
PolyLine The path of the line. 
Type	The appearance of the line. For instance solid, dashed or dotted. 
Width	The line width in pixels. NOTE: Currently the valid width values are 1, 2 
and 4 
See Also 
GraphicPolyLine Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2381 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine..::..Color Property 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The line color. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Color Color { get; set; } 
Visual Basic 
Public Property Color As Color 
Get 
Set 
Property Value 
Type: Color 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2382 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine..::..PolyLine Property 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The path of the line. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PolyLine PolyLine { get; set; } 
Visual Basic 
Public Property PolyLine As PolyLine 
Get 
Set 
Property Value 
Type: PolyLine 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2383 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine..::..Type Property 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The appearance of the line. For instance solid, dashed or dotted. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GraphicPolyLine..::..LineType Type { get; set; } 
Visual Basic 
Public Property Type As GraphicPolyLine..::..LineType 
Get 
Set 
Property Value 

Type: GraphicPolyLine..::..LineType 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2384 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine..::..Width Property 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The line width in pixels. NOTE: Currently the valid width values are 1, 2 and 4 Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Width { get; set; } 
Visual Basic 
Public Property Width As Integer 
Get 
Set 
Property Value 
Type: Int32 
See Also 
GraphicPolyLine Class 
GraphicPolyLine Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2385 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicPolyLine..::..LineType Enumeration 
GraphicPolyLine Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The appearance of the line. For instance solid, dashed or dotted. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum LineType 
Visual Basic 
Public Enumeration LineType 
Members 
Member name	Value	Description 
Solid	1	The solid line type. 
Dashed1	2	The first dashed line type. 
Dashed2	3	The second dashed line type. 
DashedAndDotted 4	The dashed and dotted line type. 
Dotted	5	The dotted line type. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2386 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicsDrawer Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The GraphicsDrawer class draws temporary graphics in the currently active rendered view in Tekla Structures. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class GraphicsDrawer 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class GraphicsDrawer 
Examples 
  	Copy 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           GraphicsDrawer drawer = new GraphicsDrawer(); 
           drawer.DrawText(new Point(0.0, 1000.0, 1000.0), "TEXT SAMPLE", new Color(1.0, 0.5, 0.0            drawer.DrawLineSegment(new Point(0.0, 0.0, 0.0), new Point(1000.0, 1000.0, 1000.0), ne 
           Mesh mesh = new Mesh(); 
           mesh.AddPoint(new Point(   0.0,    0.0, 0.0)); 
           mesh.AddPoint(new Point(1000.0,    0.0, 0.0)); 
           mesh.AddPoint(new Point(1000.0, 1000.0, 0.0)); 
           mesh.AddPoint(new Point(   0.0, 1000.0, 0.0)); 
           mesh.AddTriangle(0,1,2); 
           mesh.AddTriangle(0,2,3); 
           mesh.AddLine(0,1); mesh.AddLine(1,2); mesh.AddLine(2,3); mesh.AddLine(3,1); 
           drawer.DrawMeshSurface(mesh, new Color(1.0, 0.0, 0.0, 0.5));            drawer.DrawMeshLines(mesh, new Color(0.0, 0.0, 1.0)); 
       } 
} 


Examples	2387 


Point Fields 

Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..GraphicsDrawer 
See Also 
GraphicsDrawer Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






































See Also	2388 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GraphicsDrawer Members 
GraphicsDrawer Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GraphicsDrawer type exposes the following members. 
Constructors 
  	Name	Description 
GraphicsDrawer Creates a new graphics drawer instance. Methods 
  	Name	Description 
DrawLineSegment(LineSegment, 
Color) 
DrawLineSegment(Point, Point, Color) 

DrawMeshLines 


Draws a temporary line segment in the currently active rendered view. 
Draws the mesh lines as temporary graphics in the currently active Tekla Structures rendered view. 
Draws the mesh surface as temporary graphics in the currently active Tekla Structures rendered view. The counterclockwise sides of the mesh triangles are drawn. 
DrawPolyLine	Draw a temporary polyline into all open 
Tekla Structures views. 
DrawText	Draws a temporary text in the currently 
active rendered view. RemoveTemporaryGraphicsObject	Remove a temporary graphic object from all 
views. 
RemoveTemporaryGraphicsObjects	Remove a list of temporary graphic objects 
from all views. 



Methods	2389 


Point Fields 

See Also 
GraphicsDrawer Class Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2390 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicsDrawer Constructor 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new graphics drawer instance. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public GraphicsDrawer() 
Visual Basic 
Public Sub New 
See Also 
GraphicsDrawer Class 
GraphicsDrawer Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2391 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
GraphicsDrawer Methods 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The GraphicsDrawer type exposes the following members. 
Methods 
  	Name	Description 
DrawLineSegment(LineSegment, 
Color) 
DrawLineSegment(Point, Point, Color) 

DrawMeshLines 


Draws a temporary line segment in the currently active rendered view. 
Draws the mesh lines as temporary graphics in the currently active Tekla Structures rendered view. 
Draws the mesh surface as temporary graphics in the currently active Tekla Structures rendered view. The counterclockwise sides of the mesh triangles are drawn. 
DrawPolyLine	Draw a temporary polyline into all open 
Tekla Structures views. 
DrawText	Draws a temporary text in the currently 
active rendered view. RemoveTemporaryGraphicsObject	Remove a temporary graphic object from all 
views. 
RemoveTemporaryGraphicsObjects	Remove a list of temporary graphic objects 
from all views. 
See Also 
GraphicsDrawer Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2392 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..DrawLineSegment Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
DrawLineSegment(LineSegment, 
Color) 
DrawLineSegment(Point, Point, Color) 
See Also 
GraphicsDrawer Class 
GraphicsDrawer Members Tekla.Structures.Model.UI Namespace 


Draws a temporary line segment in the currently active rendered view. 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2393 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..DrawLineSegment Method (LineSegment, Color) GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Draws a temporary line segment in the currently active rendered view. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool DrawLineSegment( 
LineSegment LineSegment, 
Color Color 
) 
Visual Basic 
Public Function DrawLineSegment (  
LineSegment As LineSegment, 
Color As Color 
) As Boolean 
Parameters 

LineSegment 
Type: Tekla.Structures.Geometry3d..::..LineSegment 
The line to draw. 

Color 
Type: Tekla.Structures.Model.UI..::..Color 
The color of the line. The transparency value of the color is ignored. 

Return Value 
Type: Boolean 
True on success. 
See Also 
GraphicsDrawer Class 
GraphicsDrawer Members DrawLineSegment Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2394 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..DrawLineSegment Method (Point, Point, Color) 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Draws a temporary line segment in the currently active rendered view. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool DrawLineSegment( 
Point Point1, 
Point Point2, 
Color Color 
) 
Visual Basic 
Public Function DrawLineSegment (  
Point1 As Point, 
Point2 As Point, 
Color As Color 
) As Boolean 
Parameters 

Point1 
Type: Tekla.Structures.Geometry3d..::..Point The first point of the line. 

Point2 
Type: Tekla.Structures.Geometry3d..::..Point The second point of the line. 

Color 
Type: Tekla.Structures.Model.UI..::..Color 
The color of the line. The transparency value of the color is ignored. 

Return Value 
Type: Boolean True on success. 




Syntax	2395 


Point Fields 

See Also 
GraphicsDrawer Class 
GraphicsDrawer Members DrawLineSegment Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2396 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..DrawMeshLines Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Draws the mesh lines as temporary graphics in the currently active Tekla Structures rendered view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool DrawMeshLines( 
Mesh Mesh, 
Color Color 
) 
Visual Basic 
Public Function DrawMeshLines (  
Mesh As Mesh, 
Color As Color 
) As Boolean 
Parameters 

Mesh 
Type: Tekla.Structures.Model.UI..::..Mesh The mesh to draw. 

Color 
Type: Tekla.Structures.Model.UI..::..Color 
The color of the mesh lines. The transparency value of the color is ignored. 

Return Value 
Type: Boolean 
True on success. 
See Also 
GraphicsDrawer Class 
GraphicsDrawer Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2397 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..DrawMeshSurface Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Draws the mesh surface as temporary graphics in the currently active Tekla Structures rendered view. The counterclockwise sides of the mesh triangles are drawn. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool DrawMeshSurface( 
Mesh Mesh, 
Color Color 
) 
Visual Basic 
Public Function DrawMeshSurface (  
Mesh As Mesh, 
Color As Color 
) As Boolean 
Parameters 

Mesh 
Type: Tekla.Structures.Model.UI..::..Mesh The mesh to draw. 

Color 
Type: Tekla.Structures.Model.UI..::..Color The color of the mesh. 

Return Value 
Type: Boolean 
True on success. 
See Also 
GraphicsDrawer Class 
GraphicsDrawer Members Tekla.Structures.Model.UI Namespace 


See Also	2398 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2399 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..DrawPolyLine Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Draw a temporary polyline into all open Tekla Structures views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int DrawPolyLine( 
GraphicPolyLine GraphicPolyLine 
) 
Visual Basic 
Public Function DrawPolyLine (  
GraphicPolyLine As GraphicPolyLine 
) As Integer 
Parameters 

GraphicPolyLine 
Type: Tekla.Structures.Model.UI..::..GraphicPolyLine 
The polyline to draw. 

Return Value 

Type: Int32 
The identifier of the temporary graphic. You can delete the graphic with RemoveTemporaryGraphicsObject. 
See Also 
GraphicsDrawer Class 
GraphicsDrawer Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2400 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
GraphicsDrawer..::..DrawText Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Draws a temporary text in the currently active rendered view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool DrawText( 
Point Location, 
string Text, 
Color Color 
) 
Visual Basic 
Public Function DrawText (  
Location As Point, 
Text As String, 
Color As Color 
) As Boolean 
Parameters 

Location 
Type: Tekla.Structures.Geometry3d..::..Point 
The location of the text's top-left corner. 

Text 
Type: System..::..String 
The text to be drawn. The maximum length is 511 characters. 

Color 
Type: Tekla.Structures.Model.UI..::..Color 
The color of the text. The transparency value of the color is ignored. 

Return Value 
Type: Boolean True on success. 




Syntax	2401 


Point Fields 

See Also 
GraphicsDrawer Class 
GraphicsDrawer Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	2402 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..RemoveTemporaryGraphicsObject Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Remove a temporary graphic object from all views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void RemoveTemporaryGraphicsObject( 
int GraphicObjectID 
) 
Visual Basic 
Public Sub RemoveTemporaryGraphicsObject (  
GraphicObjectID As Integer 
) 
Parameters 

GraphicObjectID 
Type: System..::..Int32 
The identifier that was returned when the object was created. See Also 
GraphicsDrawer Class 
GraphicsDrawer Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2403 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 GraphicsDrawer..::..RemoveTemporaryGraphicsObjects Method 
GraphicsDrawer Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Remove a list of temporary graphic objects from all views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void RemoveTemporaryGraphicsObjects( 
IEnumerable GraphicObjectIDs 
) 
Visual Basic 
Public Sub RemoveTemporaryGraphicsObjects (  
GraphicObjectIDs As IEnumerable 
) 
Parameters 

GraphicObjectIDs 
Type: System.Collections..::..IEnumerable 
The identifiers that was returned when the object was created. See Also 
GraphicsDrawer Class 
GraphicsDrawer Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2404 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Mesh class represents a mesh for drawing three-dimensional data. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Mesh 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Mesh 
Examples 
  	Copy 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
using System; 
public class ConeMesh 
{ 
private Mesh _mesh; 
public Mesh Mesh 
    { 
get { return _mesh; } 
    } 
public ConeMesh(Point center, double height, double radius, int segmentCount) 
    { 
        _mesh = new Mesh(); 
        Point centerTop = new Point(center); 
        centerTop.Z = centerTop.Z + height; 
        _mesh.Points.Add(centerTop); 
double x = center.X + radius * Math.Cos(0.0); double y = center.Y + radius * Math.Sin(0.0); double z = center.Z; 
        Point p = new Point(x, y, z);         _mesh.AddPoint(p); 
        _mesh.AddLine(0, 1); 

Examples	2405 


Point Fields 

for (int i = 1; i < segmentCount; i++) 
        { 
            x = center.X + radius * Math.Cos(i * (2 * Math.PI) / segmentCount);             y = center.Y + radius * Math.Sin(i * (2 * Math.PI) / segmentCount);             z = center.Z; 
            p = new Point(x, y, z); 
            _mesh.AddPoint(p); 
            _mesh.AddTriangle(0, i, i + 1); 
            _mesh.AddLine(0, i + 1); 
            _mesh.AddLine(i, i + 1); 
        } 
        _mesh.AddTriangle(0, segmentCount, 1);         _mesh.AddLine(segmentCount, 1); 
    } 
} 
public class Example 
{ 
public void Example1() 
       { 
           GraphicsDrawer drawer = new GraphicsDrawer(); 
           ConeMesh cone = new ConeMesh(new Point(0.0, 0.0, 0.0), 5000.0, 5000.0, 100); 
           drawer.DrawMeshSurface(cone.Mesh, new Color(1.0, 0.0, 0.0, 1.0));            drawer.DrawMeshLines(cone.Mesh, new Color(0.0, 0.0, 1.0)); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..Mesh 
See Also 
Mesh Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2406 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Members 
Mesh Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Mesh type exposes the following members. 
Constructors 
  	Name	Description 
Mesh()()()()	Creates a new empty mesh instance. 
Mesh(ArrayList, 
ArrayList, ArrayList) 

Methods 
  	Name	Description 
AddLine	Adds a new line in the mesh. 
AddPoint	Adds a new point in the mesh. 
AddTriangle Adds a new triangle in the mesh. 
Properties 
  	Name	Description 
Lines	An array list of indices (as integers) pointing to the points array list. 
Two consecutive indices always represent a single line. 
Points	An array list of point objects representing the mesh points. 
Triangles An array list of indices (as integers) pointing to the points array list. 
Three consecutive indices always represent a single triangle. 
See Also 
Mesh Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2407 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Constructor 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Mesh()()()()	Creates a new empty mesh instance. 
Mesh(ArrayList, 
ArrayList, ArrayList) 

See Also 
Mesh Class 
Mesh Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2408 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Constructor 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new empty mesh instance. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Mesh() 
Visual Basic 
Public Sub New 
See Also 
Mesh Class 
Mesh Members 
Mesh Overload 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2409 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Constructor (ArrayList, ArrayList, ArrayList) 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new mesh instance with the given points, triangles and lines. Does not check the indices in the given triangles and lines array lists for correctness. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Mesh( 
ArrayList Points, 
ArrayList Triangles, 
ArrayList Lines 
) 
Visual Basic 
Public Sub New (  
Points As ArrayList, 
Triangles As ArrayList, 
Lines As ArrayList 
) 
Parameters 

Points 
Type: System.Collections..::..ArrayList 
An array list of point objects representing the mesh points. Null represents no points. 

Triangles 
Type: System.Collections..::..ArrayList 
An array list of indices (of type integer) pointing to the points array list. Three consecutive indices represent a single triangle. The first index is 0. If null, the mesh will not contain any triangles. 

Lines 
Type: System.Collections..::..ArrayList 
An array list of indices (of type integer) pointing to the points array list. Two consecutive indices represent a single line. The first index is 0. If null, the mesh will not contain any lines. 



Syntax	2410 


Point Fields 

See Also 
Mesh Class 
Mesh Members 
Mesh Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2411 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Methods 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Mesh type exposes the following members. 
Methods 
  	Name	Description 
AddLine	Adds a new line in the mesh. AddPoint	Adds a new point in the mesh. AddTriangle Adds a new triangle in the mesh. 
See Also 
Mesh Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2412 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh..::..AddLine Method 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a new line in the mesh. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void AddLine( 
int Index1, 
int Index2 
) 
Visual Basic 
Public Sub AddLine (  
Index1 As Integer, 
Index2 As Integer 
) 
Parameters 

Index1 
Type: System..::..Int32 
The index of the line's start point in the points array list. 

Index2 
Type: System..::..Int32 
The index of the line's end point in the points array list. 
See Also 
Mesh Class 
Mesh Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2413 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh..::..AddPoint Method 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a new point in the mesh. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int AddPoint( 
Point Point 
) 
Visual Basic 
Public Function AddPoint (  
Point As Point 
) As Integer 
Parameters 

Point 
Type: Tekla.Structures.Geometry3d..::..Point The point to be added, must not be null. 

Return Value 

Type: Int32 
The index of the added point. 
See Also 
Mesh Class 
Mesh Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2414 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh..::..AddTriangle Method 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Adds a new triangle in the mesh. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void AddTriangle( 
int Index1, 
int Index2, 
int Index3 
) 
Visual Basic 
Public Sub AddTriangle (  
Index1 As Integer, 
Index2 As Integer, 
Index3 As Integer 
) 
Parameters 

Index1 
Type: System..::..Int32 
The index of the triangle's first point in the points array list. 

Index2 
Type: System..::..Int32 
The index of the triangle's second point in the points array list. 

Index3 
Type: System..::..Int32 
The index of the triangle's third point in the points array list. 
See Also 
Mesh Class 
Mesh Members 
Tekla.Structures.Model.UI Namespace 


See Also	2415 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2416 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Mesh Properties 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Mesh type exposes the following members. 
Properties 
  	Name	Description 
Lines	An array list of indices (as integers) pointing to the points array list. 
Two consecutive indices always represent a single line. 
Points	An array list of point objects representing the mesh points. 
Triangles An array list of indices (as integers) pointing to the points array list. 
Three consecutive indices always represent a single triangle. 
See Also 
Mesh Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2417 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh..::..Lines Property 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
An array list of indices (as integers) pointing to the points array list. Two consecutive indices always represent a single line. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Lines { get; } 
Visual Basic 
Public ReadOnly Property Lines As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
Mesh Class 
Mesh Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2418 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh..::..Points Property 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

An array list of point objects representing the mesh points. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Points { get; } 
Visual Basic 
Public ReadOnly Property Points As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
Mesh Class 
Mesh Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2419 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Mesh..::..Triangles Property 
Mesh Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
An array list of indices (as integers) pointing to the points array list. Three consecutive indices always represent a single triangle. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Triangles { get; } 
Visual Basic 
Public ReadOnly Property Triangles As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
Mesh Class 
Mesh Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2420 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelObjectSelector class can be used to select objects from the Tekla Structures user interface. Currently, these selections both select the objects from the database and highlight them visually. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public class ModelObjectSelector 
Visual Basic 
<SerializableAttribute> 
Public Class ModelObjectSelector 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
           Model Model = new Model(); 
           Beam B = new Beam(new Point(0,0,0), new Point(0,0,6000)); 
           Beam B1 = new Beam(new Point(0,1000,0), new Point(0,1000,6000));            Beam B2 = new Beam(new Point(0,2000,0), new Point(0,2000,6000)); 
           B.Insert(); 
           B1.Insert(); 
           B2.Insert(); 
           ArrayList ObjectsToSelect = new ArrayList();            ObjectsToSelect.Add(B); 
           ObjectsToSelect.Add(B2); 
           Tekla.Structures.Model.UI.ModelObjectSelector MS = new Tekla.Structures.Model.UI.Model            MS.Select(ObjectsToSelect); 


Examples	2421 


Point Fields 
           Model.CommitChanges(); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ModelObjectSelector 
See Also 
ModelObjectSelector Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	2422 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Members 
ModelObjectSelector Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectSelector type exposes the following members. 
Constructors 
  	Name	Description 
ModelObjectSelector Creates a new model object selector instance. Methods 
  	Name	Description 
Returns an enumerator of the given view's visible model objects that collide with the given geometrical bounding box. Note that this method uses 
approximate bounding boxes and thus is NOT EXACT, and may return objects not necessarily colliding with the given box but only being somewhere near to it. 
GetSelectedObjects	Returns an enumerator of all the selected model 
objects in the model view. 
Select(ArrayList)	Selects a list of objects from the user interface. 
Select(ArrayList, Boolean)	Selects a list of objects from the user interface. 
See Also 
ModelObjectSelector Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	2423 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Constructor 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new model object selector instance. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectSelector() 
Visual Basic 
Public Sub New 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2424 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector Methods 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectSelector type exposes the following members. 
Methods 
  	Name	Description 
Returns an enumerator of the given view's visible model objects that collide with the given geometrical bounding box. Note that this method uses 
approximate bounding boxes and thus is NOT EXACT, and may return objects not necessarily colliding with the given box but only being somewhere near to it. 
GetSelectedObjects	Returns an enumerator of all the selected model 
objects in the model view. 
Select(ArrayList)	Selects a list of objects from the user interface. 
Select(ArrayList, Boolean)	Selects a list of objects from the user interface. 
See Also 
ModelObjectSelector Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2425 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetObjectsByBoundingBox Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of the given view's visible model objects that collide with the given geometrical bounding box. Note that this method uses approximate bounding boxes and thus is NOT EXACT, and may return objects not necessarily colliding with the given box but only being somewhere near to it. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetObjectsByBoundingBox( 
Point MinPoint, 
Point MaxPoint, 
View View 
) 
Visual Basic 
Public Function GetObjectsByBoundingBox (  
MinPoint As Point, 
MaxPoint As Point, 
View As View 
) As ModelObjectEnumerator 
Parameters 

MinPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The minimum point of the bounding box. 

MaxPoint 
Type: Tekla.Structures.Geometry3d..::..Point 
The maximum point of the bounding box. 

View 
Type: Tekla.Structures.Model.UI..::..View The view to get the objects from. 

Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of the visible model objects colliding with the given 

Syntax	2426 


Point Fields 
bounding box. 
See Also 
ModelObjectSelector Class ModelObjectSelector Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2427 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectSelector..::..GetSelectedObjects Method ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns an enumerator of all the selected model objects in the model view. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator GetSelectedObjects() 
Visual Basic 
Public Function GetSelectedObjects As ModelObjectEnumerator 
Return Value 

Type: ModelObjectEnumerator 
A model object enumerator of all the selected model objects. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2428 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector..::..Select Method 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Select(ArrayList)	Selects a list of objects from the user interface. Select(ArrayList, Boolean)	Selects a list of objects from the user interface. 
See Also 
ModelObjectSelector Class 
ModelObjectSelector Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2429 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector..::..Select Method (ArrayList) 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects a list of objects from the user interface. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Select( 
ArrayList ModelObjects 
) 
Visual Basic 
Public Function Select (  
ModelObjects As ArrayList 
) As Boolean 
Parameters 

ModelObjects 
Type: System.Collections..::..ArrayList 
The list of model objects to select. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObjectSelector Class ModelObjectSelector Members 
Select Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2430 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectSelector..::..Select Method (ArrayList, Boolean) 
ModelObjectSelector Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects a list of objects from the user interface. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Select( 
ArrayList ModelObjects, 
bool ShowDimensions 
) 
Visual Basic 
Public Function Select (  
ModelObjects As ArrayList, 
ShowDimensions As Boolean 
) As Boolean 
Parameters 

ModelObjects 
Type: System.Collections..::..ArrayList 
The list of model objects to select. 

ShowDimensions 
Type: System..::..Boolean 
Defines whether to show dimensions of the parts in the selection. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ModelObjectSelector Class ModelObjectSelector Members 
Select Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2431 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectVisualization Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The class to set and clear temporary visualization (color and transparency) for model objects in view. Permananet representation will be restored when view is redrawed or temporary visualization is cleared. Can be used also to fetch current permanent representation of model object. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public static class ModelObjectVisualization 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelObjectVisualization 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
       { 
           Model model = new Model(); 
           Beam b = new Beam(new Point(0,0,0), new Point(0,0,6000)); 
           Beam b1 = new Beam(new Point(0,1000,0), new Point(0,1000,6000)); 
           Beam b2 = new Beam(new Point(0,2000,0), new Point(0,2000,6000)); 
           b.Material.MaterialString = b1.Material.MaterialString = b2.Material.MaterialString =             b.Profile.ProfileString = b1.Profile.ProfileString = b2.Profile.ProfileString = "PL10* 
           b.Insert(); 
           b1.Insert(); 
           b2.Insert(); 
           model.CommitChanges(); 
var blueObjects = new List<ModelObject> { b , b2 }; 

Examples	2432 


Point Fields 
var redObjects = new List<ModelObject> { b1 }; 
           ModelObjectVisualization.SetTransparencyForAll(TemporaryTransparency.HIDDEN);  
           ModelObjectVisualization.SetState(blueObjects, new TSM.UI.Color(0.0, 0.0, 1.0));            ModelObjectVisualization.SetState(redObjects, new TSM.UI.Color(1.0, 0.0, 0.0)); 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ModelObjectVisualization 
See Also 
ModelObjectVisualization Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
































See Also	2433 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectVisualization Members 
ModelObjectVisualization Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectVisualization type exposes the following members. 
Methods 
  	Name	Description 
ClearAllTemporaryStates	Clears temporary visualization from all model objects 
and restores permanent representation. GetRepresentation	Gets current permanent representation (red, blue, 
green and transparency) of given model object SetTemporaryState	Sets visualization temporary state (red, blue, green 
and transparency) for given model objects SetTemporaryStateForAll Sets temporary visualization state (red, blue, green 
and transparency) for all model objects SetTransparency	Restores permanent representation settings and sets 
temporary transparency for given model objects SetTransparencyForAll	Restores permanent representation settings and sets 
temporary transparency for all model objects 
See Also 
ModelObjectVisualization Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2434 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelObjectVisualization Methods 
ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelObjectVisualization type exposes the following members. 
Methods 
  	Name	Description 
ClearAllTemporaryStates	Clears temporary visualization from all model objects 
and restores permanent representation. GetRepresentation	Gets current permanent representation (red, blue, 
green and transparency) of given model object SetTemporaryState	Sets visualization temporary state (red, blue, green 
and transparency) for given model objects SetTemporaryStateForAll Sets temporary visualization state (red, blue, green 
and transparency) for all model objects SetTransparency	Restores permanent representation settings and sets 
temporary transparency for given model objects SetTransparencyForAll	Restores permanent representation settings and sets 
temporary transparency for all model objects 
See Also 
ModelObjectVisualization Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2435 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectVisualization..::..ClearAllTemporaryStates Method ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Clears temporary visualization from all model objects and restores permanent representation. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool ClearAllTemporaryStates() 
Visual Basic 
Public Shared Function ClearAllTemporaryStates As Boolean 
Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.ClearAllTemporaryStates"] 
See Also 
ModelObjectVisualization Class 
ModelObjectVisualization Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2436 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectVisualization..::..GetRepresentation Method 
ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets current permanent representation (red, blue, green and transparency) of given model object 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool GetRepresentation( 
ModelObject modelObject, 
ref Color color 
) 
Visual Basic 
Public Shared Function GetRepresentation (  
modelObject As ModelObject, 
ByRef color As Color 
) As Boolean 
Parameters 

modelObject 
Type: Tekla.Structures.Model..::..ModelObject 
[Missing <param name="modelObject"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.GetRepresentation(Tekla.Stru 

color 
Type: Tekla.Structures.Model.UI..::..Color% 
[Missing <param name="color"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.GetRepresentation(Tekla.Stru 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.GetRepresentation(Tekla.Structures 



Syntax	2437 


Point Fields 

See Also 
ModelObjectVisualization Class ModelObjectVisualization Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	2438 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectVisualization..::..SetTemporaryState Method 
ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets visualization temporary state (red, blue, green and transparency) for given model objects 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SetTemporaryState( 
List<ModelObject> modelObjects, 
Color color 
) 
Visual Basic 
Public Shared Function SetTemporaryState (  
modelObjects As List(Of ModelObject), 
color As Color 
) As Boolean 
Parameters 

modelObjects 
Type: System.Collections.Generic..::..List<(Of <(<'ModelObject>)>)> 
[Missing <param name="modelObjects"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTemporaryState(System.C 

color 
Type: Tekla.Structures.Model.UI..::..Color 
[Missing <param name="color"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTemporaryState(System.C 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTemporaryState(System.Collectio 



Syntax	2439 


Point Fields 

See Also 
ModelObjectVisualization Class ModelObjectVisualization Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	2440 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectVisualization..::..SetTemporaryStateForAll Method ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Sets temporary visualization state (red, blue, green and transparency) for all model objects 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SetTemporaryStateForAll( 
Color color 
) 
Visual Basic 
Public Shared Function SetTemporaryStateForAll (  
color As Color 
) As Boolean 
Parameters 

color 
Type: Tekla.Structures.Model.UI..::..Color 
[Missing <param name="color"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTemporaryStateForAll(Tek 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTemporaryStateForAll(Tekla.Stru 
See Also 
ModelObjectVisualization Class 
ModelObjectVisualization Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2441 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectVisualization..::..SetTransparency Method 
ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Restores permanent representation settings and sets temporary transparency for given model objects 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SetTransparency( 
List<ModelObject> modelObjects, 
TemporaryTransparency transparency 
) 
Visual Basic 
Public Shared Function SetTransparency (  
modelObjects As List(Of ModelObject), 
transparency As TemporaryTransparency 
) As Boolean 
Parameters 

modelObjects 
Type: System.Collections.Generic..::..List<(Of <(<'ModelObject>)>)> 
[Missing <param name="modelObjects"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTransparency(System.Coll 

transparency 
Type: Tekla.Structures.Model.UI..::..TemporaryTransparency 
[Missing <param name="transparency"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTransparency(System.Coll 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTransparency(System.Collections 



Syntax	2442 


Point Fields 

See Also 
ModelObjectVisualization Class ModelObjectVisualization Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










































See Also	2443 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelObjectVisualization..::..SetTransparencyForAll Method ModelObjectVisualization Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Restores permanent representation settings and sets temporary transparency for all model objects 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SetTransparencyForAll( 
TemporaryTransparency transparency 
) 
Visual Basic 
Public Shared Function SetTransparencyForAll (  
transparency As TemporaryTransparency 
) As Boolean 
Parameters 

transparency 
Type: Tekla.Structures.Model.UI..::..TemporaryTransparency 
[Missing <param name="transparency"/> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTransparencyForAll(Tekla. 

Return Value 

Type: Boolean 
[Missing <returns> documentation for "M:Tekla.Structures.Model.UI.ModelObjectVisualization.SetTransparencyForAll(Tekla.Struct 
See Also 
ModelObjectVisualization Class 
ModelObjectVisualization Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2444 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ModelViewEnumerator Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ModelViewEnumerator class is an enumerator class for model views. The enumerator enables model view items to be looped. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ModelViewEnumerator : IEnumerator 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ModelViewEnumerator 
Implements IEnumerator 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ModelViewEnumerator 
See Also 
ModelViewEnumerator Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2445 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelViewEnumerator Members 
ModelViewEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelViewEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next view in the enumerator. 
Reset	Resets the enumerator. 
Properties 
  	Name	Description 
Count	Returns the number of views in the enumerator. Current Returns the current view. 
See Also 
ModelViewEnumerator Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2446 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelViewEnumerator Methods 
ModelViewEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelViewEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next view in the enumerator. 
Reset	Resets the enumerator. 
See Also 
ModelViewEnumerator Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2447 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelViewEnumerator..::..MoveNext Method 
ModelViewEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next view in the enumerator. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
ModelViewEnumerator Class ModelViewEnumerator Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2448 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelViewEnumerator..::..Reset Method 
ModelViewEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
ModelViewEnumerator Class ModelViewEnumerator Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2449 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ModelViewEnumerator Properties 
ModelViewEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ModelViewEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Count	Returns the number of views in the enumerator. Current Returns the current view. 
See Also 
ModelViewEnumerator Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2450 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelViewEnumerator..::..Count Property 
ModelViewEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the number of views in the enumerator. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Count { get; } 
Visual Basic 
Public ReadOnly Property Count As Integer 
Get 
Property Value 
Type: Int32 
See Also 
ModelViewEnumerator Class ModelViewEnumerator Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2451 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ModelViewEnumerator..::..Current Property 
ModelViewEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the current view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View Current { get; } Visual Basic 
Public ReadOnly Property Current As View 
Get 
Property Value 
Type: View 
See Also 
ModelViewEnumerator Class ModelViewEnumerator Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2452 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Picker class can be used to query the user to do manual picks of objects and points from the Tekla Structures model. The methods throw an exception if the user interrupts (cancels) the pick command. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class Picker 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class Picker 
Remarks 
Prompts 
Tekla Structures prefixes the given prompt with "prompt_" and looks for a translation in the prompts.ail file. If the translation (e.g. "prompt_Pick_first_position") is not found in the prompts.ail file, the prompt string is displayed as such. This feature can be used to give already translated strings to the picker. 
Examples 
  	Copy 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
       { 
           Picker Picker = new Picker(); 
           Point p = null; 
try 

Examples	2453 


Point Fields 
           { 
               p = Picker.PickPoint(); 
           } 
catch (Exception e) 
           { 
               MessageBox.Show(e.ToString()); 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..Picker 
See Also 
Picker Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	2454 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker Members 
Picker Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Picker type exposes the following members. 
Constructors 
  	Name	Description 
Picker  Creates a new picker instance. 
Methods 
  	Name	Description 
PickFace()()()()	Queries the user to pick a face from 
the model. 
PickFace(String)	Queries the user to pick a face from 
the model with the given prompt. PickLine()()()()	Queries the user to pick a line from 
the model. 
PickLine(String)	Queries the user to pick a line from 
the model with the given prompt. PickObject(Picker..::..PickObjectEnum)	Queries the user to pick one model 
object from the model. 
PickObject(Picker..::..PickObjectEnum, 
String) 



Queries the user to pick model objects from the model with the given prompt. 
PickPoint()()()()	Queries the user to pick a point 
from the model. PickPoint(String)	Queries the user to pick a point 
from the model with the given 

Methods	2455 


Point Fields 
prompt. PickPoints(Picker..::..PickPointEnum)	Queries the user to pick points from 
the model. PickPoints(Picker..::..PickPointEnum, String) Queries the user to pick points from 
the model with the given prompt. 
See Also 
Picker Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





































See Also	2456 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker Constructor 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new picker instance. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Picker() 
Visual Basic 
Public Sub New 
See Also 
Picker Class 
Picker Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2457 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker Methods 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Methods 
  	Name	Description 
PickFace()()()()	Queries the user to pick a face from 
the model. 
PickFace(String)	Queries the user to pick a face from 
the model with the given prompt. PickLine()()()()	Queries the user to pick a line from 
the model. 
PickLine(String)	Queries the user to pick a line from 
the model with the given prompt. PickObject(Picker..::..PickObjectEnum)	Queries the user to pick one model 
object from the model. 
PickObject(Picker..::..PickObjectEnum, 
String) 



Queries the user to pick model objects from the model with the given prompt. 
PickPoint()()()()	Queries the user to pick a point 
from the model. 
Queries the user to pick a point 
from the model with the given prompt. 
PickPoints(Picker..::..PickPointEnum)	Queries the user to pick points from 
the model. PickPoints(Picker..::..PickPointEnum, String) Queries the user to pick points from 
the model with the given prompt. 


Methods	2458 


Point Fields 

See Also 
Picker Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2459 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickFace Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PickFace()()()()	Queries the user to pick a face from the model. PickFace(String) Queries the user to pick a face from the model with the given 
prompt. 
See Also 
Picker Class 
Picker Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2460 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickFace Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Queries the user to pick a face from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PickInput PickFace() 
Visual Basic 
Public Function PickFace As PickInput 
Return Value 

Type: PickInput 
A list of the vertices of the face and the object the user picked as one PickInput instance. 
See Also 
Picker Class 
Picker Members 
PickFace Overload 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2461 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickFace Method (String) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Queries the user to pick a face from the model with the given prompt. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PickInput PickFace( 
string Prompt 
) 
Visual Basic 
Public Function PickFace (  
Prompt As String 
) As PickInput 
Parameters 

Prompt 
Type: System..::..String 
The string to display as user guidance. 

Return Value 

Type: PickInput 
A list of the vertices of the face and the object the user picked as one PickInput instance. 
See Also 
Picker Class 
Picker Members 
PickFace Overload 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2462 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickLine Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PickLine()()()()	Queries the user to pick a line from the model. 
PickLine(String) Queries the user to pick a line from the model with the given 
prompt. 
See Also 
Picker Class 
Picker Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2463 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickLine Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Queries the user to pick a line from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList PickLine() 
Visual Basic 
Public Function PickLine As ArrayList 
Return Value 

Type: ArrayList 
A list of points the user picked. 
See Also 
Picker Class 
Picker Members 
PickLine Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2464 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickLine Method (String) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Queries the user to pick a line from the model with the given prompt. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList PickLine( 
string Prompt 
) 
Visual Basic 
Public Function PickLine (  
Prompt As String 
) As ArrayList 
Parameters 

Prompt 
Type: System..::..String 
The string to display as user guidance. 

Return Value 

Type: ArrayList 
A list of points the user picked. 
See Also 
Picker Class 
Picker Members 
PickLine Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2465 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObject Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PickObject(Picker..::..PickObjectEnum)	Queries the user to pick one model 
object from the model. 
PickObject(Picker..::..PickObjectEnum, 
String) 

See Also 
Picker Class 
Picker Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2466 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObject Method (Picker..::..PickObjectEnum) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Queries the user to pick one model object from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject PickObject( 
Picker..::..PickObjectEnum Enum 
) 
Visual Basic 
Public Function PickObject (  
Enum As Picker..::..PickObjectEnum 
) As ModelObject 
Parameters 

Enum 
Type: Tekla.Structures.Model.UI..::..Picker..::..PickObjectEnum Indicates the type of objects to pick. 

Return Value 

Type: ModelObject 
One model object instance. 
See Also 
Picker Class 
Picker Members 
PickObject Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2467 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObject Method (Picker..::..PickObjectEnum, String) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Queries the user to pick one model object from the model with the given prompt. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObject PickObject( 
Picker..::..PickObjectEnum Enum, 
string Prompt 
) 
Visual Basic 
Public Function PickObject (  
Enum As Picker..::..PickObjectEnum, 
Prompt As String 
) As ModelObject 
Parameters 

Enum 
Type: Tekla.Structures.Model.UI..::..Picker..::..PickObjectEnum Indicates the type of objects to pick. 

Prompt 
Type: System..::..String 
The string to display as user guidance. 

Return Value 

Type: ModelObject 
One model object instance. 
See Also 
Picker Class 
Picker Members 
PickObject Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2468 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObjects Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PickObjects(Picker..::..PickObjectsEnum)	Queries the user to pick model 
objects from the model. 
PickObjects(Picker..::..PickObjectsEnum, 
String) 

See Also 
Picker Class 
Picker Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2469 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObjects Method (Picker..::..PickObjectsEnum) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Queries the user to pick model objects from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator PickObjects( 
Picker..::..PickObjectsEnum Enum 
) 
Visual Basic 
Public Function PickObjects (  
Enum As Picker..::..PickObjectsEnum 
) As ModelObjectEnumerator 
Parameters 

Enum 
Type: Tekla.Structures.Model.UI..::..Picker..::..PickObjectsEnum Indicates the type and amount of objects to pick. 

Return Value 

Type: ModelObjectEnumerator 
An enumerator of model object instances. 
See Also 
Picker Class 
Picker Members 
PickObjects Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2470 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObjects Method (Picker..::..PickObjectsEnum, String) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Queries the user to pick model objects from the model with the given prompt. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ModelObjectEnumerator PickObjects( 
Picker..::..PickObjectsEnum Enum, 
string Prompt 
) 
Visual Basic 
Public Function PickObjects (  
Enum As Picker..::..PickObjectsEnum, 
Prompt As String 
) As ModelObjectEnumerator 
Parameters 

Enum 
Type: Tekla.Structures.Model.UI..::..Picker..::..PickObjectsEnum Indicates the type and amount of objects to pick. 

Prompt 
Type: System..::..String 
The string to display as user guidance. 

Return Value 

Type: ModelObjectEnumerator 
An enumerator of model object instances. 
See Also 
Picker Class 
Picker Members 
PickObjects Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2471 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPoint Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PickPoint()()()()	Queries the user to pick a point from the model. PickPoint(String) Queries the user to pick a point from the model with the given 
prompt. 
See Also 
Picker Class 
Picker Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2472 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPoint Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Queries the user to pick a point from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point PickPoint() 
Visual Basic 
Public Function PickPoint As Point 
Return Value 

Type: Point 
The point the user picked. 
See Also 
Picker Class 
Picker Members 
PickPoint Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2473 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPoint Method (String) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Queries the user to pick a point from the model with the given prompt. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point PickPoint( 
string Prompt 
) 
Visual Basic 
Public Function PickPoint (  
Prompt As String 
) As Point 
Parameters 

Prompt 
Type: System..::..String 
The string to display as user guidance. 

Return Value 

Type: Point 
The point the user picked. 
See Also 
Picker Class 
Picker Members 
PickPoint Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2474 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPoints Method 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
PickPoints(Picker..::..PickPointEnum)	Queries the user to pick points from 
the model. 
PickPoints(Picker..::..PickPointEnum, 
String) 
See Also 
Picker Class 
Picker Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2475 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPoints Method (Picker..::..PickPointEnum) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Queries the user to pick points from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList PickPoints( 
Picker..::..PickPointEnum Enum 
) 
Visual Basic 
Public Function PickPoints (  
Enum As Picker..::..PickPointEnum 
) As ArrayList 
Parameters 

Enum 
Type: Tekla.Structures.Model.UI..::..Picker..::..PickPointEnum Indicates how many points the user must pick. 

Return Value 

Type: ArrayList 
A list of points the user picked. 
See Also 
Picker Class 
Picker Members 
PickPoints Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2476 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPoints Method (Picker..::..PickPointEnum, String) 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Queries the user to pick points from the model with the given prompt. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList PickPoints( 
Picker..::..PickPointEnum Enum, 
string Prompt 
) 
Visual Basic 
Public Function PickPoints (  
Enum As Picker..::..PickPointEnum, 
Prompt As String 
) As ArrayList 
Parameters 

Enum 
Type: Tekla.Structures.Model.UI..::..Picker..::..PickPointEnum Indicates how many points the user must pick. 

Prompt 
Type: System..::..String 
The string to display as user guidance. 

Return Value 

Type: ArrayList 
A list of points the user picked. 
See Also 
Picker Class 
Picker Members 
PickPoints Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2477 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObjectEnum Enumeration 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible model object pick types for a single object. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum PickObjectEnum 
Visual Basic 
Public Enumeration PickObjectEnum 
Members 
Member name	Value		Description PICK_ONE_OBJECT	0	Pick one model object of any type. 
PICK_ONE_PART	1	Pick one part. 
PICK_ONE_WELD	2	Pick one welding. 
PICK_ONE_BOLTGROUP	3	Pick one bolt group. PICK_ONE_REINFORCEMENT 4	Pick one reinforcement. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2478 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickObjectsEnum Enumeration 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible model object pick types for many objects. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum PickObjectsEnum 
Visual Basic 
Public Enumeration PickObjectsEnum 
Members 
Member name	Value	Description 
PICK_N_OBJECTS	0	Pick multiple model objects of any type. PICK_N_PARTS	1	Pick multiple parts. 
PICK_N_WELDS	2	Pick multiple welds. 
PICK_N_BOLTGROUPS	3	Pick multiple bolt groups. PICK_N_REINFORCEMENTS 4	Pick multiple reinforcements. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2479 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Picker..::..PickPointEnum Enumeration 
Picker Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible point pick types. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum PickPointEnum 
Visual Basic 
Public Enumeration PickPointEnum 
Members 
Member name	Value		Description 
PICK_ONE_POINT	0	Pick one point (x,y,z). 
PICK_TWO_POINTS 1	Pick two points. 
PICK_POLYGON	2	Pick multiple points. 
PICK_LINE	3	Pick one line. 
PICK_FACE	4	Pick one face. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2480 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PickInput Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PickInput class handles the input of picked objects and positions. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class PickInput : ICollection,  
IEnumerable 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class PickInput 
Implements ICollection, IEnumerable 
Examples 
The following example asks the user to pick a face and then shows the input for the plug-in: 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
using TSG = Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; using System.Windows.Forms; 
public class Example 
{ 
public void Example1() 
    { 
        Picker Picker = new Picker(); 
try 
        { 
            PickInput Input = Picker.PickFace(""); 
            IEnumerator MyEnum = Input.GetEnumerator(); 
while (MyEnum.MoveNext()) 
            { 
                InputItem Item = MyEnum.Current as InputItem; 
if (Item.GetInputType() == InputItem.InputTypeEnum.INPUT_1_OBJECT) 

Examples	2481 


Point Fields 
                { 
                    ModelObject M = Item.GetData() as ModelObject; 
                    MessageBox.Show(M.Identifier.ToString()); 
                } 
if (Item.GetInputType() == InputItem.InputTypeEnum.INPUT_POLYGON) 
                { 
                    ArrayList Points = Item.GetData() as ArrayList; 
                    MessageBox.Show((Points[0] as TSG.Point).ToString()); 
                } 
            } 
        } 
catch (Exception e) 
        { 
            MessageBox.Show(e.ToString()); 
        } 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..PickInput 
See Also 
PickInput Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

























See Also	2482 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PickInput Members 
PickInput Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PickInput type exposes the following members. 
Methods 
  	Name	Description 
CopyTo	Copies the elements of the ICollection to an Array, starting at a 
particular Array index. 
GetEnumerator Returns an enumerator that iterates through a collection. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
PickInput Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2483 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PickInput Methods 
PickInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PickInput type exposes the following members. 
Methods 
  	Name	Description 
CopyTo	Copies the elements of the ICollection to an Array, starting at a 
particular Array index. 
GetEnumerator Returns an enumerator that iterates through a collection. 
See Also 
PickInput Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2484 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PickInput..::..CopyTo Method 
PickInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Copies the elements of the ICollection to an Array, starting at a particular Array index. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void CopyTo( 
Array array, 
int index 
) 
Visual Basic 
Public Sub CopyTo (  
array As Array, 
index As Integer 
) 
Parameters 

array 
Type: System..::..Array 
The one-dimensional Array that is the destination of the elements copied from the ICollection. The Array must have zero-based indexing. 

index 
Type: System..::..Int32 
The zero-based index in the array at which copying begins. 

Implements 

ICollection..::..CopyTo(Array, Int32) 
Exceptions 
Exception	Condition 
System..::..ArgumentNullException	The array is null. 
System..::..ArgumentOutOfRangeException	The index is less than zero. 


Exceptions	2485 







System..::..ArgumentException 




System..::..InvalidCastException 



Point Fields 
The array is multidimensional, or the index is equal to or greater than the length of the array, or the number of elements in the source ICollection is greater than the available space from the index to the end of the destination array. 
The type of the source ICollection cannot be cast automatically to the type of the destination array. 
See Also 
PickInput Class 
PickInput Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 































See Also	2486 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PickInput..::..GetEnumerator Method 
PickInput Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns an enumerator that iterates through a collection. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public IEnumerator GetEnumerator() 
Visual Basic 
Public Function GetEnumerator As IEnumerator 
Return Value 

Type: IEnumerator 
An IEnumerator object that can be used to iterate through the collection. 

Implements 

IEnumerable..::..GetEnumerator()()()() 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Geometry3d; 
using System; 
using System.Collections; 
public class Example 
{ 
public void Example1() 
    { 
        Beam B = new Beam(new Point(12000, 0, 0), new Point(12000, 0, 6000));         B.Profile.ProfileString = "380*380"; 
        B.Material.MaterialString = "K40-1"; 
if (B.Insert()) 
        { 
            Component C = new Component(); 
            C.Name = "Component Test"; 
            C.Number = 30000063; 
            ComponentInput CI = new ComponentInput();             CI.AddInputObject(B); 
Examples	2487 


Point Fields 

            C.SetComponentInput(CI); 
            C.LoadAttributesFromFile("standard"); 
            C.SetAttribute("side_bar_space", 333.0); 
if (!C.Insert()) 
            { 
                Console.WriteLine("Component Insert failed"); 
            } 
else 
            { 
// test fetching component input 
                ComponentInput ComponentSel = C.GetComponentInput(); 
                IEnumerator Enumerator = ComponentSel.GetEnumerator(); 
while (Enumerator.MoveNext()) 
                { 
                    InputItem ObjectInput = Enumerator.Current as InputItem; 
if (ObjectInput.GetInputType() == InputItem.InputTypeEnum.INPUT_1_OBJECT) 
                    { 
                        Beam BeamInput = ObjectInput.GetData() as Beam; 
                    } 
                } 
            } 
        } 
    } 
} 
See Also 
PickInput Class 
PickInput Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2488 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PickInput Properties 
PickInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PickInput type exposes the following members. 
Properties 
  	Name	Description 
Count	Gets the number of elements contained in the ICollection. IsSynchronized Gets a value indicating whether access to the ICollection is 
synchronized (thread safe). 
SyncRoot	Gets an object that can be used to synchronize access to the 
ICollection. 
See Also 
PickInput Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2489 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PickInput..::..Count Property 
PickInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the number of elements contained in the ICollection. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public int Count { get; } 
Visual Basic 
Public ReadOnly Property Count As Integer 
Get 
Property Value 

Type: Int32 

Implements 

ICollection..::..Count 
See Also 
PickInput Class 
PickInput Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2490 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PickInput..::..IsSynchronized Property 
PickInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a value indicating whether access to the ICollection is synchronized (thread safe). Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsSynchronized { get; } 
Visual Basic 
Public ReadOnly Property IsSynchronized As Boolean 
Get 
Property Value 

Type: Boolean 

Implements 

ICollection..::..IsSynchronized 
See Also 
PickInput Class 
PickInput Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2491 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PickInput..::..SyncRoot Property 
PickInput Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets an object that can be used to synchronize access to the ICollection. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object SyncRoot { get; } 
Visual Basic 
Public ReadOnly Property SyncRoot As Object 
Get 
Property Value 

Type: Object 

Implements 

ICollection..::..SyncRoot 
See Also 
PickInput Class 
PickInput Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2492 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
TemporaryTransparency Enumeration 
See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The possible temporary transparencies. Used to temporarily change transparency of a model object to visualize some state in the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum TemporaryTransparency 
Visual Basic 
Public Enumeration TemporaryTransparency 
Members 
Member name	Value		Description 
HIDDEN	0	Object is hidden. 
TRANSPARENT	1	Object is transparent. 
SEMITRANSPARENT 3	Object is semi transparent. 
SEMIVISIBLE	5	Object is almost fully visible. 
VISIBLE	10	Object is fully visible. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2493 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The View class contains methods related to views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class View 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class View 
Examples 
An example of using the View and ViewHandler classes: 

  	Copy 
using System; 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
public class ViewExample 
{ 
public void ViewExample1() 
       { 
           View View = new View(); 
           View.Name = "Example View"; 
           View.ViewCoordinateSystem.AxisX = new Vector(1, 0, 0); 
           View.ViewCoordinateSystem.AxisY = new Vector(0, 1, 0); 
// Work area has to be set for new views 
           View.WorkArea.MinPoint = new Point(-3000, -3000, -3000); 
           View.WorkArea.MaxPoint = new Point(15000, 33000, 12000);            View.ViewDepthUp = 10000; 
           View.ViewDepthDown = 2000; 
           View.Insert(); 
           View.WorkArea.MinPoint = new Point(-3000, -3000, -3000);            View.WorkArea.MaxPoint = new Point(5000, 3000, 2000); 
           View.Modify(); 
       } 
} 
  	Copy 

Examples	2494 


Point Fields 
using Tekla.Structures.Model.UI; 
public class Example 
{ 
public void Example1() 
       { 
           ModelViewEnumerator ViewEnum = ViewHandler.GetAllViews(); 
while(ViewEnum.MoveNext()) 
           { 
               View View = ViewEnum.Current; 
               ViewHandler.HideView(View); 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..View 
See Also 
View Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	2495 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
View Members 
View Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The View type exposes the following members. 
Constructors 
  	Name	Description 
View	Initializes a new instance of the View class 
Methods 
  	Name	Description 
Delete	Deletes the view. 
GetClipPlanes	Returns all the clip planes of the view. 
Insert	Inserts a new view to the model. 
IsPerspectiveViewProjection Tells whether the view projection is a perspective 
projection. 
IsVisible	Tells whether the view is currently visible. 
Modify	Modifies the view parameters. 
Select	Selects the view. 
Properties 
  	Name	Description 
DisplayCoordinateSystem The local coordinate system for the display. DisplayType	The display plane type. 
Identifier	The view identifier. 
Name	The name of the view. 84 characters at most. 
SharedView	The property which tells if the view is shared. The value is meaningful only when the model is shared. 
ViewCoordinateSystem	The local coordinate system for the view. Can be set when creating a view. The origin is always set to zero. 
ViewDepthDown	The view depth down. 

Properties	2496 


Point Fields 
ViewDepthUp	The view depth up. 
ViewFilter	The name of the view filter. 256 characters at most. ViewProjection	The view projection type. 
ViewRendering	The view rendering type. 
WorkArea	The view working area. 
See Also 
View Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




































See Also	2497 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View Constructor 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the View class 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View() 
Visual Basic 
Public Sub New 
See Also 
View Class 
View Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2498 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
View Methods 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The View type exposes the following members. 
Methods 
  	Name	Description 
Delete	Deletes the view. 
GetClipPlanes	Returns all the clip planes of the view. 
Insert	Inserts a new view to the model. 
IsPerspectiveViewProjection Tells whether the view projection is a perspective 
projection. 
IsVisible	Tells whether the view is currently visible. 
Modify	Modifies the view parameters. 
Select	Selects the view. 
See Also 
View Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2499 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..Delete Method 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Deletes the view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Delete() 
Visual Basic 
Public Function Delete As Boolean 
Return Value 

Type: Boolean 
True if the operation was successful. 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2500 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..GetClipPlanes Method 
View Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns all the clip planes of the view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ClipPlaneCollection GetClipPlanes() 
Visual Basic 
Public Function GetClipPlanes As ClipPlaneCollection 
Return Value 
Type: ClipPlaneCollection 
The clip planes of the view. 
Examples 
The following example shows how all ClipPlanes are deleted from the first visible view: 

  	Copy 
using System; 
using System.Collections; 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
public class GetClipPlanesExample 
{ 
public void GetClipPlanesExample1() 
    { 
        ModelViewEnumerator ViewEnum = ViewHandler.GetVisibleViews();         ViewEnum.MoveNext(); 
        View ActiveView = ViewEnum.Current; 
        ClipPlaneCollection ClipPlanes = ActiveView.GetClipPlanes(); 
if (ClipPlanes.Count > 0) 
        { 
            IEnumerator PlaneEnum = ClipPlanes.GetEnumerator(); 
while (PlaneEnum.MoveNext()) 
            { 
                ClipPlane CPlane = PlaneEnum.Current as ClipPlane; 
if (CPlane != null) 
                    CPlane.Delete(); 
            } 

Examples	2501 


Point Fields 
        } 
    } 
} 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 








































See Also	2502 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..Insert Method 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Inserts a new view to the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Insert() 
Visual Basic 
Public Function Insert As Boolean 
Return Value 

Type: Boolean 
True if the operation was successful. 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2503 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 View..::..IsPerspectiveViewProjection Method 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Tells whether the view projection is a perspective projection. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsPerspectiveViewProjection() 
Visual Basic 
Public Function IsPerspectiveViewProjection As Boolean 
Return Value 

Type: Boolean 
True if the view projection type is perspective projection. 
See Also 
View Class 
View Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2504 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..IsVisible Method 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Tells whether the view is currently visible. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsVisible() 
Visual Basic 
Public Function IsVisible As Boolean 
Return Value 

Type: Boolean 
True if the view is visible. 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2505 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..Modify Method 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Modifies the view parameters. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Modify() 
Visual Basic 
Public Function Modify As Boolean 
Return Value 

Type: Boolean 
True if the operation was successful. 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2506 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..Select Method 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Selects the view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Select() 
Visual Basic 
Public Function Select As Boolean 
Return Value 

Type: Boolean 
True if the operation was successful. 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2507 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
View Properties 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The View type exposes the following members. 
Properties 
  	Name	Description 
DisplayCoordinateSystem The local coordinate system for the display. DisplayType	The display plane type. 
Identifier	The view identifier. 
Name	The name of the view. 84 characters at most. 
SharedView	The property which tells if the view is shared. The value is meaningful only when the model is shared. 
ViewCoordinateSystem	The local coordinate system for the view. Can be set when creating a view. The origin is always set to zero. 
ViewDepthDown	The view depth down. 
ViewDepthUp	The view depth up. 
ViewFilter	The name of the view filter. 256 characters at most. ViewProjection	The view projection type. 
ViewRendering	The view rendering type. 
WorkArea	The view working area. 
See Also 
View Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2508 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 View..::..DisplayCoordinateSystem Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The local coordinate system for the display. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CoordinateSystem DisplayCoordinateSystem { get; set; } 
Visual Basic 
Public Property DisplayCoordinateSystem As CoordinateSystem 
Get 
Set 
Property Value 

Type: CoordinateSystem 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2509 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..DisplayType Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The display plane type. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View..::..DisplayOrientationType DisplayType { get; set; } 
Visual Basic 
Public Property DisplayType As View..::..DisplayOrientationType 
Get 
Set 
Property Value 

Type: View..::..DisplayOrientationType 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2510 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..Identifier Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view identifier. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier Identifier { get; set; } 
Visual Basic 
Public Property Identifier As Identifier 
Get 
Set 
Property Value 
Type: Identifier 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2511 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..Name Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the view. 84 characters at most. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; set; } 
Visual Basic 
Public Property Name As String 
Get 
Set 
Property Value 
Type: String 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2512 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..SharedView Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The property which tells if the view is shared. The value is meaningful only when the model is shared. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool SharedView { get; set; } 
Visual Basic 
Public Property SharedView As Boolean 
Get 
Set 
Property Value 
Type: Boolean 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2513 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewCoordinateSystem Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The local coordinate system for the view. Can be set when creating a view. The origin is always set to zero. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public CoordinateSystem ViewCoordinateSystem { get; set; } 
Visual Basic 
Public Property ViewCoordinateSystem As CoordinateSystem 
Get 
Set 
Property Value 

Type: CoordinateSystem 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2514 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewDepthDown Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view depth down. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ViewDepthDown { get; set; } 
Visual Basic 
Public Property ViewDepthDown As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2515 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewDepthUp Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view depth up. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ViewDepthUp { get; set; } 
Visual Basic 
Public Property ViewDepthUp As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2516 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewFilter Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the view filter. 256 characters at most. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string ViewFilter { get; set; } 
Visual Basic 
Public Property ViewFilter As String 
Get 
Set 
Property Value 
Type: String 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2517 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewProjection Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view projection type. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View..::..ViewProjectionType ViewProjection { get; } 
Visual Basic 
Public ReadOnly Property ViewProjection As View..::..ViewProjectionType 
Get 
Property Value 

Type: View..::..ViewProjectionType 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2518 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewRendering Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view rendering type. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View..::..ViewRenderingType ViewRendering { get; } 
Visual Basic 
Public ReadOnly Property ViewRendering As View..::..ViewRenderingType 
Get 
Property Value 

Type: View..::..ViewRenderingType 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2519 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..WorkArea Property 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view working area. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AABB WorkArea { get; set; } 
Visual Basic 
Public Property WorkArea As AABB 
Get 
Set 
Property Value 
Type: AABB 
See Also 
View Class 
View Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2520 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 View..::..DisplayOrientationType Enumeration 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view plane types. The plane type can be changed. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum DisplayOrientationType 
Visual Basic 
Public Enumeration DisplayOrientationType 
Members 
Member name	Value	Description 
DISPLAY_VIEW_PLANE 0	The display orientation is in the view plane defined 
by the view coordinate system. 
DISPLAY_3D	1	The display orientation is in 3D defined by the 
display coordinate system. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2521 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewProjectionType Enumeration 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The view projection types. The projection type can be read but not changed. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ViewProjectionType 
Visual Basic 
Public Enumeration ViewProjectionType 
Members 
Member name	Value	Description 
ORTHOGONAL_PROJECTION 0	The orthogonal view projection type. PERSPECTIVE_PROJECTION	1	The perspective view projection type. See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2522 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
View..::..ViewRenderingType Enumeration 
View Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The view rendering types. Only rendered views can be modified. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum ViewRenderingType 
Visual Basic 
Public Enumeration ViewRenderingType 
Members 
Member name	Value		Description 
WIREFRAME_VIEW 0	The wireframe view type. 
RENDERED_VIEW	1	The rendered view type. 
See Also 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2523 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ViewCamera class defines a camera which can be used together with a visible view. Always supply a properly orthogonalized camera up vector when rotating the camera. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] public class ViewCamera 
Visual Basic 
<SerializableAttribute> Public Class ViewCamera 
Examples 
The following example shows how the ViewCamera class can be used: 

  	Copy 
using System; 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
public class ViewCameraExample 
{ 
public void ViewCameraExample1() 
    { 
        ModelViewEnumerator ViewEnum = ViewHandler.GetVisibleViews();         ViewEnum.MoveNext(); 
        View CurrentView = ViewEnum.Current; 
        ViewCamera Camera = new ViewCamera(); 
// Set the view to the camera 
        Camera.View = CurrentView; 
if(CurrentView.IsVisible() && CurrentView.IsPerspectiveViewProjection()) 
        { 
// Query camera settings from the application 
            Camera.Select(); 
// Tilt the camera 
            Vector DirectionVector = Camera.DirectionVector; 

Examples	2524 


Point Fields 
            Vector UpVector = Camera.UpVector; 
            Vector CrossVector = DirectionVector.Cross(UpVector); 
            Matrix RotationMatrix = new Matrix(); 
            RotationMatrix = MatrixFactory.Rotate(Math.PI/20.0, CrossVector); 
            Tekla.Structures.Geometry3d.Point RotPoint = RotationMatrix * (Tekla.Structures.Geome             DirectionVector = new Vector(RotPoint); 
            DirectionVector.Normalize(); 
            Camera.DirectionVector = DirectionVector;  
// Orthogonalize the camera UpVector 
            UpVector = CrossVector.Cross(DirectionVector); 
            UpVector.Normalize(); 
            Camera.UpVector = UpVector; 
// Modify the camera settings in the application             Camera.Modify(); 
        } 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ViewCamera 
See Also 
ViewCamera Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2525 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera Members 
ViewCamera Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ViewCamera type exposes the following members. 
Constructors 
  	Name	Description 
ViewCamera Instantiates a new view camera instance with zero length vectors. Methods 
  	Name	Description 
Modify Updates the camera to the application view. 
Select	Updates the camera parameters from the application view. 
Properties 
  	Name	Description 
DirectionVector The camera direction (controls the camera pan and tilt). FieldOfView	The camera field of view as an angle (degrees) in the perspective 
view. 
Location	The camera location in global coordinates (XYZ). 
UpVector	The camera up vector (controls the camera roll). 
View	The view where the camera belongs to. 
ZoomFactor	The camera zoom factor (meter/pixel) in the orthogonal view. 
See Also 
ViewCamera Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	2526 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera Constructor 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Instantiates a new view camera instance with zero length vectors. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ViewCamera() 
Visual Basic 
Public Sub New 
See Also 
ViewCamera Class 
ViewCamera Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2527 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera Methods 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ViewCamera type exposes the following members. 
Methods 
  	Name	Description 
Modify Updates the camera to the application view. 
Select	Updates the camera parameters from the application view. 
See Also 
ViewCamera Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2528 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..Modify Method 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Updates the camera to the application view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Modify() 
Visual Basic 
Public Function Modify As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2529 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..Select Method 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Updates the camera parameters from the application view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool Select() 
Visual Basic 
Public Function Select As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2530 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera Properties 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ViewCamera type exposes the following members. 
Properties 
  	Name	Description 
DirectionVector The camera direction (controls the camera pan and tilt). FieldOfView	The camera field of view as an angle (degrees) in the perspective 
view. 
Location	The camera location in global coordinates (XYZ). 
UpVector	The camera up vector (controls the camera roll). 
View	The view where the camera belongs to. 
ZoomFactor	The camera zoom factor (meter/pixel) in the orthogonal view. 
See Also 
ViewCamera Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2531 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewCamera..::..DirectionVector Property 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The camera direction (controls the camera pan and tilt). 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector DirectionVector { get; set; } 
Visual Basic 
Public Property DirectionVector As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2532 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..FieldOfView Property 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The camera field of view as an angle (degrees) in the perspective view. Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double FieldOfView { get; set; } 
Visual Basic 
Public Property FieldOfView As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2533 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..Location Property 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The camera location in global coordinates (XYZ). 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Location { get; set; } 
Visual Basic 
Public Property Location As Point 
Get 
Set 
Property Value 
Type: Point 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2534 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..UpVector Property 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The camera up vector (controls the camera roll). 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector UpVector { get; set; } 
Visual Basic 
Public Property UpVector As Vector 
Get 
Set 
Property Value 
Type: Vector 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2535 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..View Property 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view where the camera belongs to. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public View View { get; set; } 
Visual Basic 
Public Property View As View 
Get 
Set 
Property Value 
Type: View 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2536 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewCamera..::..ZoomFactor Property 
ViewCamera Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The camera zoom factor (meter/pixel) in the orthogonal view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public double ZoomFactor { get; set; } 
Visual Basic 
Public Property ZoomFactor As Double 
Get 
Set 
Property Value 
Type: Double 
See Also 
ViewCamera Class 
ViewCamera Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2537 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ViewHandler class contains methods for handling views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class ViewHandler 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class ViewHandler 
Examples 
  	Copy 
using Tekla.Structures.Model.UI; 
public class Example 
{ 
public void Example1() 
       { 
           ViewHandler.SetRepresentation("standard"); 
           ModelViewEnumerator ViewEnum = ViewHandler.GetAllViews(); 
while (ViewEnum.MoveNext()) 
           { 
               View ViewSel = ViewEnum.Current; 
               ViewHandler.ShowView(ViewSel); 
               ViewHandler.RedrawView(ViewSel); 
               ViewHandler.HideView(ViewSel); 
           } 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.UI..::..ViewHandler 




Inheritance Hierarchy	2538 


Point Fields 

See Also 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2539 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler Members 
ViewHandler Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ViewHandler type exposes the following members. 
Constructors 
  	Name	Description 
ViewHandler Initializes a new instance of the ViewHandler class Methods 
  	Name	Description 
GetAllViews	Fetches all the views from the 
model. 
GetPermanentViews	Returns the permanent views. 
GetSelectedViews	Returns the views the user has 
selected. 
GetTemporaryViews	Returns the temporary views. 
GetVisibleViews	Returns the visible views. 
HideView	Closes a model view. 
RedrawView	Redraws a model view. 
SetRepresentation	Sets the object representation. 
ShowView	Opens a model view. 
ZoomToBoundingBox(AABB)	Zooms the current model 
view. ZoomToBoundingBox(View, AABB)	Zooms a model view. 
See Also 
ViewHandler Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


See Also	2540 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler Constructor 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes a new instance of the ViewHandler class 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ViewHandler() 
Visual Basic 
Public Sub New 
See Also 
ViewHandler Class 
ViewHandler Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2541 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler Methods 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ViewHandler type exposes the following members. 
Methods 
  	Name	Description 
GetAllViews	Fetches all the views from the 
model. 
GetPermanentViews	Returns the permanent views. 
GetSelectedViews	Returns the views the user has 
selected. 
GetTemporaryViews	Returns the temporary views. 
GetVisibleViews	Returns the visible views. 
HideView	Closes a model view. 
RedrawView	Redraws a model view. 
SetRepresentation	Sets the object representation. 
ShowView	Opens a model view. 
ZoomToBoundingBox(AABB)	Zooms the current model 
view. ZoomToBoundingBox(View, AABB)	Zooms a model view. 
See Also 
ViewHandler Class 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2542 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler..::..GetAllViews Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Fetches all the views from the model. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelViewEnumerator GetAllViews() 
Visual Basic 
Public Shared Function GetAllViews As ModelViewEnumerator 
Return Value 

Type: ModelViewEnumerator 
A model view enumerator with all the views. 
See Also 
ViewHandler Class 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2543 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..GetPermanentViews Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the permanent views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelViewEnumerator GetPermanentViews() 
Visual Basic 
Public Shared Function GetPermanentViews As ModelViewEnumerator 
Return Value 

Type: ModelViewEnumerator 
A model view enumerator with the permanent views. 
See Also 
ViewHandler Class 
ViewHandler Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2544 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..GetSelectedViews Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the views the user has selected. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelViewEnumerator GetSelectedViews() 
Visual Basic 
Public Shared Function GetSelectedViews As ModelViewEnumerator 
Return Value 

Type: ModelViewEnumerator 
A model view enumerator with the selected views. 
See Also 
ViewHandler Class 
ViewHandler Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2545 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..GetTemporaryViews Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the temporary views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelViewEnumerator GetTemporaryViews() 
Visual Basic 
Public Shared Function GetTemporaryViews As ModelViewEnumerator 
Return Value 

Type: ModelViewEnumerator 
A model view enumerator with the temporary views. 
See Also 
ViewHandler Class 
ViewHandler Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2546 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..GetVisibleViews Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the visible views. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static ModelViewEnumerator GetVisibleViews() 
Visual Basic 
Public Shared Function GetVisibleViews As ModelViewEnumerator 
Return Value 

Type: ModelViewEnumerator 
A model view enumerator with the visible views. 
See Also 
ViewHandler Class 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2547 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler..::..HideView Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Closes a model view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool HideView( 
View view 
) 
Visual Basic 
Public Shared Function HideView (  
view As View 
) As Boolean 
Parameters 

view 
Type: Tekla.Structures.Model.UI..::..View The view that is to be closed. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ViewHandler Class 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2548 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler..::..RedrawView Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Redraws a model view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool RedrawView( 
View view 
) 
Visual Basic 
Public Shared Function RedrawView (  
view As View 
) As Boolean 
Parameters 

view 
Type: Tekla.Structures.Model.UI..::..View The view that is to be redrawn. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ViewHandler Class 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2549 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..SetRepresentation Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Sets the object representation. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool SetRepresentation( 
string Representation 
) 
Visual Basic 
Public Shared Function SetRepresentation (  
Representation As String 
) As Boolean 
Parameters 

Representation 
Type: System..::..String 
The representation that is to be used. 257 characters at most. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ViewHandler Class 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2550 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ViewHandler..::..ShowView Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Opens a model view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool ShowView( 
View view 
) 
Visual Basic 
Public Shared Function ShowView (  
view As View 
) As Boolean 
Parameters 

view 
Type: Tekla.Structures.Model.UI..::..View The view that is to be shown. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ViewHandler Class 
ViewHandler Members Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2551 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..ZoomToBoundingBox Method 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
ZoomToBoundingBox(AABB)	Zooms the current model view. ZoomToBoundingBox(View, AABB)	Zooms a model view. 
See Also 
ViewHandler Class 
ViewHandler Members 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2552 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..ZoomToBoundingBox Method (AABB) 
ViewHandler Class  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Zooms the current model view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool ZoomToBoundingBox( 
AABB box 
) 
Visual Basic 
Public Shared Function ZoomToBoundingBox (  
box As AABB 
) As Boolean 
Parameters 

box 
Type: Tekla.Structures.Geometry3d..::..AABB 
The bounding box the current view is zoomed to. 

Return Value 
Type: Boolean 
True on success. 
Examples 
In the following example a part is picked and all the visible views are zoomed using the part's bounding box as a parameter. 

  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.UI; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
       { 
           Picker MyPicker = new Picker(); 

Examples	2553 


Point Fields 
           Part PickPart = MyPicker.PickObject(Picker.PickObjectEnum.PICK_ONE_PART) as Part;            AABB PartBoundingBox = new AABB(); 
if (PickPart != null) 
           { 
               Solid PartSolid = PickPart.GetSolid(); 
               PartBoundingBox.MaxPoint = PartSolid.MaximumPoint;                PartBoundingBox.MinPoint = PartSolid.MinimumPoint;            } 
           ModelViewEnumerator ViewEnum = ViewHandler.GetVisibleViews(); 
while (ViewEnum.MoveNext()) 
           { 
               View ViewSel = ViewEnum.Current; 
               ViewHandler.ZoomToBoundingBox(ViewSel, PartBoundingBox);            } 
       } 
} 
See Also 
ViewHandler Class 
ViewHandler Members 
ZoomToBoundingBox Overload 
Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 


























See Also	2554 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ViewHandler..::..ZoomToBoundingBox Method (View, AABB) 
ViewHandler Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Zooms a model view. 
Namespace:  Tekla.Structures.Model.UI 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public static bool ZoomToBoundingBox( 
View view, 
AABB B 
) 
Visual Basic 
Public Shared Function ZoomToBoundingBox (  
view As View, 
B As AABB 
) As Boolean 
Parameters 

view 
Type: Tekla.Structures.Model.UI..::..View The view that is to be zoomed. 

B 
Type: Tekla.Structures.Geometry3d..::..AABB The bounding box the view is zoomed to. 

Return Value 
Type: Boolean 
True on success. 
See Also 
ViewHandler Class 
ViewHandler Members ZoomToBoundingBox Overload Tekla.Structures.Model.UI Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2555 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 Tekla.Structures.Model.Welding Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 

[Missing <summary> documentation for "N:Tekla.Structures.Model.Welding"] 
Classes 
  	Class	Description 
WeldGeometry Class that represents weld seam specific geometry. Enumerations 
  	Enumeration	Description 
WeldSeamPositionEnum Weld seam position types. 

Copyright  © Tekla 2013. All rights reserved. 

























Enumerations	2556 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
WeldGeometry Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Class that represents weld seam specific geometry. 
Namespace:  Tekla.Structures.Model.Welding 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class WeldGeometry 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class WeldGeometry 
Examples 
  	Copy 
using System.Collections; 
using System.Text; 
using Tekla.Structures.Geometry3d; 
using Tekla.Structures.Model; 
using Tekla.Structures.Model.Welding; 
public class Example 
{ 
private static Model _teklaModel; 
private Model TeklaModel 
   { 
get 
        { 
if (_teklaModel == null) 
            { 
                _teklaModel = new Model(); 
            } 
return _teklaModel; 
        } 
   } 
public void Example1() 
   { 
        ModelObjectEnumerator weldEnumerator = 
         TeklaModel.GetModelObjectSelector().GetAllObjectsWithType(ModelObject.ModelObjectEnum.WE 

Examples	2557 


Point Fields 

        Weld weld = null; 
while (weldEnumerator.MoveNext()) 
        { 
            weld = weldEnumerator.Current as Weld; 
if (weld != null) 
            { 
break; 
            } 
        } 
if (weld != null) 
        { 
            ArrayList weldGeometries = weld.GetWeldGeometries();             StringBuilder sb = new StringBuilder(); 
foreach (WeldGeometry weldGeometry in weldGeometries) 
            { 
if (weldGeometry != null) 
                { 
int polygonIndex = 1; 
                    sb.AppendLine(weldGeometry.Position.ToString()); 
foreach (Polygon polygon in weldGeometry.Polygons) 
                    { 
if (polygon != null) 
                        { 
                           sb.AppendLine("Polygon: " + polygonIndex); 
if (polygon.Points != null) 
                           { 
foreach (Point point in polygon.Points) 
                               { 
if (point != null) 
                                   {  
                                       sb.AppendLine(point.ToString()); 
                                   } 
                               }                                     
                           } 
                        } 
                        polygonIndex++; 
                    } 
                } 
                sb.AppendLine(); 
                sb.AppendLine(); 
            } 
// Print the string builder content to the desired place by calling sb.ToString(); 
        } 
   } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Model.Welding..::..WeldGeometry 


Inheritance Hierarchy	2558 


Point Fields 

See Also 
WeldGeometry Members Tekla.Structures.Model.Welding Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2559 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
WeldGeometry Members 
WeldGeometry Class  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The WeldGeometry type exposes the following members. 
Properties 
  	Name	Description 
Polygons Gets the weld seam specific ArrayList of Polygon objects. Position	Gets the weld seam position (above or below). 
See Also 
WeldGeometry Class 
Tekla.Structures.Model.Welding Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2560 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
WeldGeometry Properties 
WeldGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The WeldGeometry type exposes the following members. 
Properties 
  	Name	Description 
Polygons Gets the weld seam specific ArrayList of Polygon objects. Position	Gets the weld seam position (above or below). 
See Also 
WeldGeometry Class 
Tekla.Structures.Model.Welding Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2561 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
WeldGeometry..::..Polygons Property 
WeldGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the weld seam specific ArrayList of Polygon objects. 
Namespace:  Tekla.Structures.Model.Welding 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ArrayList Polygons { get; } 
Visual Basic 
Public ReadOnly Property Polygons As ArrayList 
Get 
Property Value 
Type: ArrayList 
See Also 
WeldGeometry Class 
WeldGeometry Members Tekla.Structures.Model.Welding Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2562 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
WeldGeometry..::..Position Property 
WeldGeometry Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the weld seam position (above or below). 
Namespace:  Tekla.Structures.Model.Welding 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public WeldSeamPositionEnum Position { get; } 
Visual Basic 
Public ReadOnly Property Position As WeldSeamPositionEnum 
Get 
Property Value 

Type: WeldSeamPositionEnum 
See Also 
WeldGeometry Class 
WeldGeometry Members Tekla.Structures.Model.Welding Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2563 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
WeldSeamPositionEnum Enumeration 
See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Weld seam position types. 
Namespace:  Tekla.Structures.Model.Welding 
Assembly:  Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum WeldSeamPositionEnum 
Visual Basic 
Public Enumeration WeldSeamPositionEnum 
Members 
Member name  Value		Description 
SEAM_ABOVE	1	Seam above. 
SEAM_BELOW	2	Seam below. 
See Also 
Tekla.Structures.Model.Welding Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2564 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Tekla.Structures.Plugins Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Plugins namespace includes all the functionality to create a 
plug-in into Tekla Structures. Please see the Plug-in Guide to get started with 
developing plug-ins. 
Classes 
  	Class	Description 
The AutoDirectionTypeAttribute class is used for type. Based on the type the system will then calc the connection/detail if the "Auto" up direction is 
AutoDirectionTypeAttribute 





ConnectionBase 







CustomPartBase 


attribute is initialized from the custom attribute [AutoDirectionType(AutoDirectionTypeEnum.AU connection/detail source. 
The ConnectionBase class is a base class for defi and seams. These types are more specialized an values than the ones derived from PluginBase. 
The coordinate system for connections, details a the Tekla Structures help, in the part about the  components. The position type defines the origin relative to the main part. 
The CustomPartBase class is a base class for def types are more specialized and restricted by the  derived from PluginBase. 
The coordinate system for connections, details a the Tekla Structures help, in the part about the  components. The position type defines the origin relative to the main part. 
The DetailTypeAttribute class is used for storing the type the system will then position the detail i attribute is initialized from the custom attribute [DetailType(DetailTypeEnum.END)] in the conne 
DrawingPluginBase	The DrawingPluginBase class is an abstract base DrawingPluginBase..::..InputDefinition	The InputDefinition class is a class for defining t 
the input (points or identifiers). The user implem DefineInput() of the DrawingPluginBase interfac list of input definition instances. This defines the 

Classes	2565 







InputObjectDependencyAttribute 




InputObjectTypeAttribute 



PluginAttribute 





PluginBase 



Point Fields 
plug-in will receive as input when the Run() met 
The InputObjectDependencyAttribute class is us object dependency which determines when the p system. The attribute is initialized from the cust [InputObjectDependency(PluginBase.InputObjec plug-in source. 
The InputObjectTypeAttribute class is used for s Based on the type the system can then correctly  creation. The attribute is initialized from the cus [InputObjectType(ConnectionBase.InputObjectT in the connection source. 
The PluginAttribute class is used for storing the  system. The attribute is initialized from the cust [Plugin("PluginName")] in the plug-in source. 
The PluginBase class in an abstract base class fo plug-ins have to be inherited from this class. Dra inherited from the DrawingPluginBase. 
A plug-in is always executed in the plug-in's loca origin of the plug-in's coordinate system is defin object or point. In case the first input is an objec coordinate system is the first input point of the o is a point, the origin of the plug-in's coordinate s The X- and Y-axes of the coordinate system are d 
The InputDefinition class is a class for defining t the input (points or identifiers). The user implem 
DefineInput() of the PluginBase interface should definition instances. This defines the points and  receive as input when the Run() method is called 
PluginDescriptionAttribute	Not supported at the moment. PluginNameAttribute	Not supported at the moment. 
The PluginUserInterfaceAttribute class is used f the plug-in user interface to the system. The attr custom attribute [PluginUserInterface(PluginName.UserInterface 
PluginUserInterfaceAttribute 


plug-in source. In this case the description string in inp format. If the plug-in dialog is inherited fr description string contains a class name of the d [PluginUserInterface("Model_Plug_in1.MainFor 
The PositionTypeAttribute class is used for stori connection. Based on the type the system will th in the creation. The attribute is initialized from t [PositionType(PositionTypeEnum.COLLISION_P source. 
SeamInputTypeAttribute	The SeamInputTypeAttribute class is used for id connection is a seam and defining the input type 
system will then ask for the correct number of in 

Classes	2566 









SecondaryTypeAttribute 




StructuresFieldAttribute 



Point Fields 
The attribute is initialized from the custom attrib [SeamInputType(ConnectionBase.SeamInputTyp connection source. 
The SecondaryTypeAttribute class is used for sto secondaries in the connection. Based on the type correctly ask for user input in the creation. The  the custom attribute i.e. [SecondaryType(ConnectionBase.SecondaryType in the connection source. 
The StructuresFieldAttribute class is used for m to a data field that the plug-in uses in execution. from the custom attribute [StructuresField(attri source. In the plug-in the data field must be pub double, integer or string. 
Enumerations 
  	Enumeration	Description 
ConnectionBase..::..InputObjectType	Defines the input object 
type. ConnectionBase..::..SeamInputType	Defines the type of the 
input. 
Defines how many secondaries a connection can have. 
DrawingPluginBase..::..InputDefinition..::..InputTypes	The possible input types 
for a drawing plug-in. 
Defines the update mode of the drawing plug-in. The update mode tells 
the system when the plug-in is executed. 
PluginBase..::..InputDefinition..::..InputTypeEnum	The possible input types 
for a plug-in. 
Defines the input object 
PluginBase..::..InputObjectDependency 


Copyright  © Tekla 2013. All rights reserved. 


dependency type for model plug-ins. 









Enumerations	2567 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
AutoDirectionTypeAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The AutoDirectionTypeAttribute class is used for storing the auto direction type. Based on the type the system will then calculate the up direction of the connection/detail if the "Auto" up direction is chosen in the dialog. The attribute is initialized from the custom attribute [AutoDirectionType(AutoDirectionTypeEnum.AUTODIR_DETAIL)] in the connection/detail source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class AutoDirectionTypeAttribute : Attribute 
Visual Basic 
Public NotInheritable Class AutoDirectionTypeAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..AutoDirectionTypeAttribute 
See Also 
AutoDirectionTypeAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2568 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
AutoDirectionTypeAttribute Members 
AutoDirectionTypeAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The AutoDirectionTypeAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [AutoDirectionType()] uses this to store the auto 
AutoDirectionTypeAttribute(Int32) 




AutoDirectionTypeAttribute(AutoDirectionTypeEnum) 


direction type to the system. This is not to be used by itself. 
The custom attribute [AutoDirectionType()] uses this to store the auto direction type to the system. This is not to be used by itself. 
Properties 
  	Name	Description 
Type	The custom attribute [AutoDirectionType()] uses this to store the auto 
direction type to the system. This is not to be used by itself. 
See Also 
AutoDirectionTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2569 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
AutoDirectionTypeAttribute Constructor 
AutoDirectionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
The custom attribute [AutoDirectionType()] uses this to store the auto 
AutoDirectionTypeAttribute(Int32) 




AutoDirectionTypeAttribute(AutoDirectionTypeEnum) 


See Also 
AutoDirectionTypeAttribute Class AutoDirectionTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


direction type to the system. This is not to be used by itself. 
The custom attribute [AutoDirectionType()] uses this to store the auto direction type to the system. This is not to be used by itself. 













See Also	2570 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
AutoDirectionTypeAttribute Constructor (Int32) 
AutoDirectionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [AutoDirectionType()] uses this to store the auto direction type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AutoDirectionTypeAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The auto direction type. 
See Also 
AutoDirectionTypeAttribute Class AutoDirectionTypeAttribute Members AutoDirectionTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2571 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
AutoDirectionTypeAttribute Constructor (AutoDirectionTypeEnum) AutoDirectionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [AutoDirectionType()] uses this to store the auto direction type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AutoDirectionTypeAttribute( 
AutoDirectionTypeEnum Type 
) 
Visual Basic 
Public Sub New (  
Type As AutoDirectionTypeEnum 
) 
Parameters 

Type 
Type: Tekla.Structures..::..AutoDirectionTypeEnum The auto direction type. 
See Also 
AutoDirectionTypeAttribute Class AutoDirectionTypeAttribute Members AutoDirectionTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2572 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
AutoDirectionTypeAttribute Properties 
AutoDirectionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The AutoDirectionTypeAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	The custom attribute [AutoDirectionType()] uses this to store the auto 
direction type to the system. This is not to be used by itself. 
See Also 
AutoDirectionTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2573 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 AutoDirectionTypeAttribute..::..Type Property 
AutoDirectionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [AutoDirectionType()] uses this to store the auto direction type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public AutoDirectionTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As AutoDirectionTypeEnum 
Get 
Property Value 

Type: AutoDirectionTypeEnum 
See Also 
AutoDirectionTypeAttribute Class AutoDirectionTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2574 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ConnectionBase class is a base class for defining connections, details and seams. These types are more specialized and restricted by the input values than the ones derived from PluginBase. 
The coordinate system for connections, details and seams is explained in the Tekla Structures help, in the part about the position type of custom components. The position type defines the origin of the custom component, relative to the main part. 

Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract class ConnectionBase : MarshalByRefObject 
Visual Basic 
Public MustInherit Class ConnectionBase 
Inherits MarshalByRefObject 
Examples 
In the following example, a .inp file is used for defining the dialog. Notice that starting from version 15.0, the System.Windows.Forms namespace can be used to create rich user interfaces. See e.g. the PluginFormBase class in the Tekla.Structures.Dialog documentation for more information. When using System.Windows.Forms, the name 
of the form has to be the same one as the connection name for ConnectionBase, otherwise the form will be loaded and shown but the apply method won't work (modify will work). 

  	Copy 
using System; 
using System.Windows.Forms; 
using Tekla.Structures; 
using Tekla.Structures.Plugins; using Tekla.Structures.Geometry3d; using Tekla.Structures.Model; 
public class StructuresData3 
{ 

Examples	2575 


Point Fields 
    [StructuresField("P1")] public double Parameter1; 
    [StructuresField("P2")] public string Parameter2; 
} 
[Plugin("BeamConnection")] // The name of the connection in the catalog [PluginUserInterface(UserInterfaceDefinitions.Plugin3)] [SecondaryType(SecondaryType.SECONDARYTYPE_ONE)] [AutoDirectionType(AutoDirectionTypeEnum.AUTODIR_BASIC)] [PositionType(PositionTypeEnum.COLLISION_PLANE)] 
public class BeamConnection : ConnectionBase 
{ 
private readonly StructuresData3 data; 
private readonly Model myModel; 
public BeamConnection(StructuresData3 data) 
    { 
this.data = data; 
        myModel = new Model(); 
    } 
static Beam CreateBeam(Point point1, Point point2, string profile) 
    { 
        Beam myBeam = new Beam(point1, point2); 
        myBeam.Profile.ProfileString = profile; 
        myBeam.Finish = "PAINT"; 
        myBeam.Position.Depth = Position.DepthEnum.MIDDLE; 
        myBeam.Position.Plane = Position.PlaneEnum.RIGHT; 
        myBeam.Insert(); 
return myBeam; 
    } 
void CreateFitting(double thickness, ModelObject mySecondary) 
    { 
        Fitting myFitting = new Fitting(); 
        myFitting.Plane.Origin = new Point(thickness, 0, 0); 
        myFitting.Plane.AxisX = new Vector(0, 1000, 0); 
        myFitting.Plane.AxisY = new Vector(0, 0, 1000); 
        myFitting.Father = mySecondary; 
        myFitting.Insert(); 
    } 
public override bool Run() 
    { 
try 
        { 
// The default values 
if (IsDefaultValue(data.Parameter1)) 
                data.Parameter1 = 300.0; 
if (IsDefaultValue(data.Parameter2)) 
                data.Parameter2 = "PL10*300"; 
// Get secondary 
            Beam secondary = myModel.SelectModelObject(Secondaries[0]) as Beam; 
            Point point1 = new Point(); 
            Point point2 = new Point(); 
            point1.Y -= data.Parameter1 / 2; 
            point2.Y += data.Parameter1 / 2; 


Examples	2576 


Point Fields 
            Beam newBeam = CreateBeam(point1, point2, data.Parameter2); 
double thickness = 0.0; 
            newBeam.GetReportProperty("PROFILE.WIDTH", ref thickness); 
this.CreateFitting(thickness, secondary); 
        } 
catch (Exception e) 
        { 
            MessageBox.Show(e.ToString()); 
        } 
return true; 
    } 
public class UserInterfaceDefinitions 
    { 
public const string Plugin3 = @"" + 
@"page(""TeklaStructures"","""")" + "\n" + 
"{\n" + 
"    joint(1, BeamConnection)\n" + 
"    {\n" + 
@"        tab_page(""Beam test"", ""Parameters"", 1)" + "\n" + 
"        {\n" + 
@"            parameter(""Plate Length"", ""P1"", distance, number, 1)" + "\n" + @"            parameter(""Profile"", ""P2"", profile, text, 2)" + "\n" + 
"        }\n" + 
"    }\n" + 
"}\n"; 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Plugins..::..ConnectionBase 
See Also 
ConnectionBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2577 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase Members 
ConnectionBase Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ConnectionBase type exposes the following members. 
Methods 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the component. Inside Run the user can implement the logic based on the user given 
Run 


attributes and input. Inside the method input can be 
found from the provided properties: Primary, Secondaries and Positions. 
Properties 
  	Name	Description 
Code	The connection code of the executable connection instance. The 
maximum length is 22 characters. 
Identifier	The identifier of the executable plug-in instance. 
Positions	The positional attributes for a detail or a seam instance; one for a 
detail, N for a seam. 
Primary	The identifier that was selected as the primary object. 
Secondaries A list of secondary identifiers of a connection or a seam. 
See Also 
ConnectionBase Class 
Tekla.Structures.Plugins Namespace 


See Also	2578 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2579 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase Methods 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ConnectionBase type exposes the following members. 
Methods 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the component. Inside Run the user can implement the logic based on the user given 
Run 


attributes and input. Inside the method input can be 
found from the provided properties: Primary, Secondaries and Positions. 
See Also 
ConnectionBase Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2580 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..IsDefaultValue Method 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
See Also 
ConnectionBase Class 
ConnectionBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2581 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..IsDefaultValue Method (Double) 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
double Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Double 
) As Boolean 
Parameters 

Value 
Type: System..::..Double The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
ConnectionBase Class ConnectionBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2582 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..IsDefaultValue Method (Int32) 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
int Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Integer 
) As Boolean 
Parameters 

Value 
Type: System..::..Int32 The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
ConnectionBase Class ConnectionBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2583 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..IsDefaultValue Method (String) 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value (empty string). Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
string Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As String 
) As Boolean 
Parameters 

Value 
Type: System..::..String The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
ConnectionBase Class ConnectionBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2584 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase..::..Run Method 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The main method of the component. Inside Run the user can implement the logic based on the user given attributes and input. Inside the method input can be found from the provided properties: Primary, Secondaries and Positions. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Run() 
Visual Basic 
Public MustOverride Function Run As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
ConnectionBase Class ConnectionBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2585 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase Properties 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ConnectionBase type exposes the following members. 
Properties 
  	Name	Description 
Code	The connection code of the executable connection instance. The 
maximum length is 22 characters. 
Identifier	The identifier of the executable plug-in instance. 
Positions	The positional attributes for a detail or a seam instance; one for a 
detail, N for a seam. 
Primary	The identifier that was selected as the primary object. 
Secondaries A list of secondary identifiers of a connection or a seam. 
See Also 
ConnectionBase Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2586 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase..::..Code Property 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The connection code of the executable connection instance. The maximum length is 22 characters. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Code { get; set; } 
Visual Basic 
Public Property Code As String 
Get 
Set 
Property Value 
Type: String 
See Also 
ConnectionBase Class ConnectionBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2587 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase..::..Identifier Property 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The identifier of the executable plug-in instance. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier Identifier { get; } 
Visual Basic 
Public ReadOnly Property Identifier As Identifier 
Get 
Property Value 
Type: Identifier 
See Also 
ConnectionBase Class ConnectionBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2588 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase..::..Positions Property 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The positional attributes for a detail or a seam instance; one for a detail, N for a seam. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public List<Point> Positions { get; } 
Visual Basic 
Public ReadOnly Property Positions As List(Of Point) 
Get 
Property Value 

Type: List<(Of <(<'Point>)>)> 
See Also 
ConnectionBase Class ConnectionBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2589 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase..::..Primary Property 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The identifier that was selected as the primary object. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier Primary { get; } 
Visual Basic 
Public ReadOnly Property Primary As Identifier 
Get 
Property Value 
Type: Identifier 
See Also 
ConnectionBase Class ConnectionBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2590 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ConnectionBase..::..Secondaries Property 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

A list of secondary identifiers of a connection or a seam. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public List<Identifier> Secondaries { get; } 
Visual Basic 
Public ReadOnly Property Secondaries As List(Of Identifier) 
Get 
Property Value 

Type: List<(Of <(<'Identifier>)>)> 
See Also 
ConnectionBase Class ConnectionBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2591 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..InputObjectType Enumeration 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the input object type. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum InputObjectType 
Visual Basic 
Public Enumeration InputObjectType 
Members 
Member name	Value	Description 
INPUTOBJECT_PART	0	The input object is a part instance. INPUTOBJECT_CUSTOMPART 1	The input object can be a custom part 
(component). 
See Also 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2592 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..SeamInputType Enumeration 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the type of the input. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum SeamInputType 
Visual Basic 
Public Enumeration SeamInputType 
Members 
Member name	Value	Description 
INPUT_2_POINTS	1	The input is two points. The data is returned as an array 
list of points. 
INPUT_POLYGON 2	The input is any number of points (a polygon). The data is 
returned as an array list of points. 
See Also 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2593 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 ConnectionBase..::..SecondaryType Enumeration 
ConnectionBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines how many secondaries a connection can have. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum SecondaryType 
Visual Basic 
Public Enumeration SecondaryType 
Members 
Member name	Value	Description 
The connection can have zero secondaries. Zero secondaries means that the connection is a detail. 
SECONDARYTYPE_ONE	1	The connection can have one secondary. SECONDARYTYPE_TWO	2	The connection can have two secondaries. SECONDARYTYPE_MULTIPLE 3	The connection can have multiple 
secondaries. 
See Also 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2594 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The CustomPartBase class is a base class for defining custom parts. These types are more specialized and restricted by the input values than the ones derived from PluginBase. 
The coordinate system for connections, details and seams is explained in the Tekla Structures help, in the part about the position type of custom components. The position type defines the origin of the custom component, relative to the main part. 

Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract class CustomPartBase : MarshalByRefObject 
Visual Basic 
Public MustInherit Class CustomPartBase 
Inherits MarshalByRefObject 
Examples 
In the following example, a .inp file is used for defining the dialog. Notice that starting from version 15.0, the System.Windows.Forms namespace can be used to create rich user interfaces. See e.g. the PluginFormBase class in the Tekla.Structures.Dialog documentation for more information. 

  	Copy 
using System; 
using System.Windows.Forms; 
using Tekla.Structures.Model; 
using Tekla.Structures.Plugins; using Tekla.Structures.Geometry3d; 
public class StructuresData3 
{ 
    [StructuresField("P1")] public double Parameter1; 
    [StructuresField("P2")] public string Parameter2; 
} 

Examples	2595 


Point Fields 

[Plugin("CustomBeam")] // The name of the connection in the catalog [PluginUserInterface(UserInterfaceDefinitions.Plugin3)] 
public class CustomBeam: CustomPartBase 
{ 
private readonly StructuresData3 data; 
public CustomBeam(StructuresData3 data) 
    { 
this.data = data; 
    } 
static Beam CreateBeam(Point point1, Point point2, string profile) 
    { 
        Beam myBeam = new Beam(point1, point2); 
        myBeam.Profile.ProfileString = profile; 
        myBeam.Finish = "PAINT"; 
        myBeam.Position.Depth = Position.DepthEnum.MIDDLE; 
        myBeam.Position.Plane = Position.PlaneEnum.RIGHT; 
        myBeam.Insert(); 
return myBeam; 
    } 
static void CreateFitting(double thickness, Beam myPart) 
    { 
        Fitting myFitting = new Fitting(); 
        myFitting.Plane.Origin = new Point(thickness, 0, 0);         myFitting.Plane.AxisX = new Vector(0, 1000, 0); 
        myFitting.Plane.AxisY = new Vector(0, 0, 1000); 
        myFitting.Father = myPart; 
        myFitting.Insert(); 
    } 
public override bool Run() 
    { 
try 
        { 
// The default values if(IsDefaultValue(data.Parameter1)) 
                data.Parameter1 = 300.0; 
if (IsDefaultValue(data.Parameter2)) 
                data.Parameter2 = "PL10*300"; 
// Get input points 
            Point point1 = new Point(this.Positions[0]); 
            Point point2 = new Point(this.Positions[1]); 
if (data.Parameter1 > 0) 
            { 
                point1.Y -= data.Parameter1 / 2; 
                point2.Y += data.Parameter1 / 2; 
            } 
            Beam newBeam = CreateBeam(point1, point2, data.Parameter2); 
double thickness = 0.0; 
            newBeam.GetReportProperty("PROFILE.WIDTH", ref thickness); 
            CreateFitting(thickness, newBeam); 
        } 
catch(Exception e) 
        { 
            MessageBox.Show(e.ToString()); 

Examples	2596 


Point Fields 
        } 
return true; 
    } 
public class UserInterfaceDefinitions  
    { 
public const string Plugin3 = @"" + 
@"page(""TeklaStructures"","""")" + "\n" + 
"{\n" + 
"    joint(1, BeamConnection)\n" + 
"    {\n" + 
@"        tab_page(""Beam test"", ""Parameters"", 1)" + "\n" + 
"        {\n" + 
@"            parameter(""Plate Length"", ""P1"", distance, number, 1)" + "\n" + @"            parameter(""Profile"", ""P2"", profile, text, 2)" + "\n" + 
"        }\n" + 
"    }\n" + 
"}\n"; 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Plugins..::..CustomPartBase 
See Also 
CustomPartBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2597 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase Members 
CustomPartBase Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CustomPartBase type exposes the following members. 
Methods 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the component. Inside Run the user can implement the logic based on the user given 
Run 


attributes and input. Inside the method input can be 
found from the provided properties: Primary, Secondaries and Positions. 
Properties 
  	Name	Description 
Identifier The identifier of the executable plug-in instance. Positions	The positional attributes for a custom part instance. 
See Also 
CustomPartBase Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2598 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase Methods 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CustomPartBase type exposes the following members. 
Methods 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the component. Inside Run the user can implement the logic based on the user given 
Run 


attributes and input. Inside the method input can be 
found from the provided properties: Primary, Secondaries and Positions. 
See Also 
CustomPartBase Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2599 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 CustomPartBase..::..IsDefaultValue Method 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
See Also 
CustomPartBase Class 
CustomPartBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2600 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CustomPartBase..::..IsDefaultValue Method (Double) CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
double Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Double 
) As Boolean 
Parameters 

Value 
Type: System..::..Double The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
CustomPartBase Class CustomPartBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2601 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CustomPartBase..::..IsDefaultValue Method (Int32) 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
int Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Integer 
) As Boolean 
Parameters 

Value 
Type: System..::..Int32 The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
CustomPartBase Class CustomPartBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2602 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 CustomPartBase..::..IsDefaultValue Method (String) 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value (empty string). Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
string Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As String 
) As Boolean 
Parameters 

Value 
Type: System..::..String The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
CustomPartBase Class CustomPartBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2603 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase..::..Run Method 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The main method of the component. Inside Run the user can implement the logic based on the user given attributes and input. Inside the method input can be found from the provided properties: Primary, Secondaries and Positions. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Run() 
Visual Basic 
Public MustOverride Function Run As Boolean 
Return Value 
Type: Boolean 
True on success. 
See Also 
CustomPartBase Class CustomPartBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2604 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase Properties 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The CustomPartBase type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the executable plug-in instance. Positions	The positional attributes for a custom part instance. 
See Also 
CustomPartBase Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2605 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase..::..Identifier Property 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The identifier of the executable plug-in instance. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier Identifier { get; } 
Visual Basic 
Public ReadOnly Property Identifier As Identifier 
Get 
Property Value 
Type: Identifier 
See Also 
CustomPartBase Class CustomPartBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2606 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
CustomPartBase..::..Positions Property 
CustomPartBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The positional attributes for a custom part instance. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public List<Point> Positions { get; } 
Visual Basic 
Public ReadOnly Property Positions As List(Of Point) 
Get 
Property Value 

Type: List<(Of <(<'Point>)>)> 
See Also 
CustomPartBase Class CustomPartBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2607 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The DetailTypeAttribute class is used for storing the detail type. Based on the type the system will then position the detail in the creation. The attribute is initialized from the custom attribute [DetailType(DetailTypeEnum.END)] in the connection source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class DetailTypeAttribute : Attribute 
Visual Basic 
Public NotInheritable Class DetailTypeAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..DetailTypeAttribute 
See Also 
DetailTypeAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2608 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute Members 
DetailTypeAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DetailTypeAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [DetailType()] uses 
DetailTypeAttribute(Int32) 


DetailTypeAttribute(DetailTypeEnum) 


this to store the type of the detail to the system. This is not to be used by itself. 
The custom attribute [DetailType()] uses this to store the type of the detail to the system. This is not to be used by itself. 
Properties 
  	Name	Description 
Type	The custom attribute [DetailType()] uses this to store the type of the detail 
to the system. This is not to be used by itself. 
See Also 
DetailTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2609 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute Constructor 
DetailTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
The custom attribute [DetailType()] uses 
DetailTypeAttribute(Int32) 


DetailTypeAttribute(DetailTypeEnum) 

See Also 
DetailTypeAttribute Class DetailTypeAttribute Members Tekla.Structures.Plugins Namespace 


this to store the type of the detail to the system. This is not to be used by itself. 
The custom attribute [DetailType()] uses this to store the type of the detail to the system. This is not to be used by itself. 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2610 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute Constructor (Int32) 
DetailTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [DetailType()] uses this to store the type of the detail to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DetailTypeAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The detail type. 
See Also 
DetailTypeAttribute Class DetailTypeAttribute Members DetailTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2611 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute Constructor (DetailTypeEnum) 
DetailTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [DetailType()] uses this to store the type of the detail to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DetailTypeAttribute( 
DetailTypeEnum Type 
) 
Visual Basic 
Public Sub New (  
Type As DetailTypeEnum 
) 
Parameters 

Type 
Type: Tekla.Structures..::..DetailTypeEnum The detail type. 
See Also 
DetailTypeAttribute Class 
DetailTypeAttribute Members 
DetailTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2612 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute Properties 
DetailTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DetailTypeAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	The custom attribute [DetailType()] uses this to store the type of the detail 
to the system. This is not to be used by itself. 
See Also 
DetailTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2613 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DetailTypeAttribute..::..Type Property 
DetailTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [DetailType()] uses this to store the type of the detail to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DetailTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As DetailTypeEnum 
Get 
Property Value 

Type: DetailTypeEnum 
See Also 
DetailTypeAttribute Class DetailTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2614 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DrawingPluginBase Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The DrawingPluginBase class is an abstract base class for drawing plug-ins. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract class DrawingPluginBase : MarshalByRefObject 
Visual Basic 
Public MustInherit Class DrawingPluginBase 
Inherits MarshalByRefObject 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Plugins..::..DrawingPluginBase 
See Also 
DrawingPluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2615 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DrawingPluginBase Members 
DrawingPluginBase Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DrawingPluginBase type exposes the following members. 
Methods 
  	Name	Description 
The method Tekla Structures calls for the plug-in to query the input. The plug-in must then return an array list of 
input definition instances. The plug-in will be dependent 
on the items it returns. Dependent means that if any of 
DefineInput 


these items change, for example the user moves the 
points, the plug-in will be re-run with new input. DefineInput is not called during the re-run, and thus all the actual implementation should be in the Run() method. The Run() method is always called in view coordinates. 
Initializes the lifetime service. 
(Overrides MarshalByRefObject..::..InitializeLifetimeService()()()().) 
IsDefaultValue(Double)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the plug-in. It is called after the input has been defined with DefineInput(). This is the "main" 
Run 


method of the plug-in and should contain all the actual implementation. 
See Also 
DrawingPluginBase Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2616 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
DrawingPluginBase Methods 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DrawingPluginBase type exposes the following members. 
Methods 
  	Name	Description 
The method Tekla Structures calls for the plug-in to query the input. The plug-in must then return an array list of 
input definition instances. The plug-in will be dependent 
on the items it returns. Dependent means that if any of 
DefineInput 


these items change, for example the user moves the 
points, the plug-in will be re-run with new input. DefineInput is not called during the re-run, and thus all the actual implementation should be in the Run() method. The Run() method is always called in view coordinates. 
Initializes the lifetime service. 
(Overrides MarshalByRefObject..::..InitializeLifetimeService()()()().) 
IsDefaultValue(Double)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the plug-in. It is called after the input has been defined with DefineInput(). This is the "main" 
Run 


method of the plug-in and should contain all the actual implementation. 
See Also 
DrawingPluginBase Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2617 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..DefineInput Method 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The method Tekla Structures calls for the plug-in to query the input. The plug-in must then return an array list of input definition instances. The plug-in will be dependent on the items it returns. Dependent means that if any of these items change, for example 
the user moves the points, the plug-in will be re-run with new input. DefineInput is not called during the re-run, and thus all the actual implementation should be in the Run() method. The Run() method is always called in view coordinates. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract List<DrawingPluginBase..::..InputDefinition> DefineInput() 
Visual Basic 
Public MustOverride Function DefineInput As List(Of DrawingPluginBase..::..InputDefinition) Return Value 

Type: List<(Of <(<'DrawingPluginBase..::..InputDefinition>)>)> 
An array list of input definition instances. If the plug-in is not dependent on input, it should return an empty array list (not null). 
See Also 
DrawingPluginBase Class 
DrawingPluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2618 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InitializeLifetimeService Method 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes the lifetime service. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override Object InitializeLifetimeService() 
Visual Basic 
Public Overrides Function InitializeLifetimeService As Object 
Return Value 

Type: Object 
A lifetime service object to control the lifetime policy. 
See Also 
DrawingPluginBase Class 
DrawingPluginBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2619 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..IsDefaultValue Method 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
See Also 
DrawingPluginBase Class 
DrawingPluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2620 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..IsDefaultValue Method (Double) 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
double Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Double 
) As Boolean 
Parameters 

Value 
Type: System..::..Double The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
DrawingPluginBase Class DrawingPluginBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2621 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..IsDefaultValue Method (Int32) 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
int Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Integer 
) As Boolean 
Parameters 

Value 
Type: System..::..Int32 The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
DrawingPluginBase Class DrawingPluginBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2622 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..IsDefaultValue Method (String) 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value (empty string). Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
string Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As String 
) As Boolean 
Parameters 

Value 
Type: System..::..String The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
DrawingPluginBase Class DrawingPluginBase Members IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2623 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
DrawingPluginBase..::..Run Method 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The main method of the plug-in. It is called after the input has been defined with DefineInput(). This is the "main" method of the plug-in and should contain all the actual implementation. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Run( 
List<DrawingPluginBase..::..InputDefinition> Input 
) 
Visual Basic 
Public MustOverride Function Run (  
Input As List(Of DrawingPluginBase..::..InputDefinition) 
) As Boolean 
Parameters 

Input 
Type: System.Collections.Generic..::..List<(Of 
<(<'DrawingPluginBase..::..InputDefinition>)>)> 
An array list of the same format and order as what was returned from DefineInput(). 

Return Value 
Type: Boolean 
True on success. 
See Also 
DrawingPluginBase Class DrawingPluginBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 



See Also	2624 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Class 
DrawingPluginBase Class  Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The InputDefinition class is a class for defining the plug-in dependency over the input (points or identifiers). The user implemented method DefineInput() of the DrawingPluginBase interface should return an array list of input definition instances. This defines the points and identifiers the plug-in will receive as input when the Run() method is called. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class InputDefinition : MarshalByRefObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class InputDefinition 
Inherits MarshalByRefObject 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Plugins..::..DrawingPluginBase..::..InputDefinition 
See Also 
DrawingPluginBase..::..InputDefinition Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2625 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Members DrawingPluginBase..::..InputDefinition 
Class  Constructors  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DrawingPluginBase..::..InputDefinition type exposes the following members. 
Constructors 
  	Name	Description 
DrawingPluginBase..::..InputDefinition(Identifier, 
List<(Of <<'(Point>)>>)) 
DrawingPluginBase..::..InputDefinition(Identifier, Point) 
DrawingPluginBase..::..InputDefinition(Identifier, Identifier) 
DrawingPluginBase..::..InputDefinition(Identifier, Point, Point) 
DrawingPluginBase..::..InputDefinition(Identifier, Point, Point, Point) 
Methods 
  	Name	Description 
Returns the input Tekla Structures gave to the plug-in. The input is either a point instance, an identifier instance, an array list of points or an array list of identifiers. This is based on the input format returned from the DefineInput() method. 
Properties 
  	Name	Description 
Type	The type of the input the current instance contains. 
ViewId The view object's identifier. 




Properties	2626 


Point Fields 

See Also 
DrawingPluginBase..::..InputDefinition Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2627 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Constructor DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
DrawingPluginBase..::..InputDefinition(Identifier, 
List<(Of <<'(Point>)>>)) 
DrawingPluginBase..::..InputDefinition(Identifier, Point) 
DrawingPluginBase..::..InputDefinition(Identifier, Identifier) 
DrawingPluginBase..::..InputDefinition(Identifier, Point, Point) 
DrawingPluginBase..::..InputDefinition(Identifier, Point, Point, Point) 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2628 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Constructor (Identifier, List<(Of <(<'Point>)>)>) 
DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition with multiple points. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Identifier viewId, 
List<Point> points 
) 
Visual Basic 
Public Sub New (  
viewId As Identifier, 
points As List(Of Point) 
) 
Parameters 

viewId 
Type: Tekla.Structures..::..Identifier The view identifier. 

points 
Type: System.Collections.Generic..::..List<(Of <(<'Point>)>)> The points. 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members DrawingPluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	2629 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Constructor (Identifier, Point) DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with one point. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Identifier viewId, 
Point point 
) 
Visual Basic 
Public Sub New (  
viewId As Identifier, 
point As Point 
) 
Parameters 

viewId 
Type: Tekla.Structures..::..Identifier The identifier for the view object. 

point 
Type: Tekla.Structures.Geometry3d..::..Point The point. 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members DrawingPluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2630 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Constructor (Identifier, Identifier) DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with one identifier. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Identifier viewId, 
Identifier ObjectId 
) 
Visual Basic 
Public Sub New (  
viewId As Identifier, 
ObjectId As Identifier 
) 
Parameters 

viewId 
Type: Tekla.Structures..::..Identifier The identifier for the view object. 

ObjectId 
Type: Tekla.Structures..::..Identifier 
The object identifier. 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members DrawingPluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2631 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Constructor (Identifier, Point, Point) DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with two points. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Identifier viewId, 
Point point1, 
Point point2 
) 
Visual Basic 
Public Sub New (  
viewId As Identifier, 
point1 As Point, 
point2 As Point 
) 
Parameters 

viewId 
Type: Tekla.Structures..::..Identifier The identifier for the view object. 

point1 
Type: Tekla.Structures.Geometry3d..::..Point The first point. 

point2 
Type: Tekla.Structures.Geometry3d..::..Point The second point. 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members DrawingPluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

See Also	2632 


Point Fields 
Copyright  © Tekla 2013. All rights reserved. 

















































See Also	2633 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Constructor (Identifier, Point, Point, Point) DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with three points. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Identifier viewId, 
Point point1, 
Point point2, 
Point point3 
) 
Visual Basic 
Public Sub New (  
viewId As Identifier, 
point1 As Point, 
point2 As Point, 
point3 As Point 
) 
Parameters 

viewId 
Type: Tekla.Structures..::..Identifier The identifier for the view object. 

point1 
Type: Tekla.Structures.Geometry3d..::..Point The first point. 

point2 
Type: Tekla.Structures.Geometry3d..::..Point The second point. 

point3 
Type: Tekla.Structures.Geometry3d..::..Point The third point. 



Syntax	2634 


Point Fields 

See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members DrawingPluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









































See Also	2635 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Methods DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DrawingPluginBase..::..InputDefinition type exposes the following members. 
Methods 
  	Name	Description 
Returns the input Tekla Structures gave to the plug-in. The input is either a point instance, an identifier instance, an array list of points or an array list of identifiers. This is based on the input format returned from the DefineInput() method. 
See Also 
DrawingPluginBase..::..InputDefinition Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2636 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition..::..GetInput Method DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns the input Tekla Structures gave to the plug-in. The input is either a point instance, an identifier instance, an array list of points or an array list of identifiers. This is based on the input format returned from the DefineInput() method. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object GetInput() 
Visual Basic 
Public Function GetInput As Object 
Return Value 

Type: Object 
The input to use in the Run() method. 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2637 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition Properties DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The DrawingPluginBase..::..InputDefinition type exposes the following members. 
Properties 
  	Name	Description 
Type	The type of the input the current instance contains. 
ViewId The view object's identifier. 
See Also 
DrawingPluginBase..::..InputDefinition Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2638 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition..::..Type Property DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the input the current instance contains. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public DrawingPluginBase..::..InputDefinition..::..InputTypes Type { get; set; } 
Visual Basic 
Public Property Type As DrawingPluginBase..::..InputDefinition..::..InputTypes 
Get 
Set 
Property Value 

Type: DrawingPluginBase..::..InputDefinition..::..InputTypes 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2639 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition..::..ViewId Property DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The view object's identifier. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier ViewId { get; set; } 
Visual Basic 
Public Property ViewId As Identifier 
Get 
Set 
Property Value 
Type: Identifier 
See Also 
DrawingPluginBase..::..InputDefinition Class DrawingPluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2640 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..InputDefinition..::..InputTypes Enumeration DrawingPluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible input types for a drawing plug-in. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum InputTypes Visual Basic 
Public Enumeration InputTypes 
Members 
Member name	Value	Description 
INPUT_ONE_POINT	1	The input has one point. 
INPUT_TWO_POINTS	2	The input has two points. INPUT_THREE_POINTS 3	The input has three points. 
INPUT_N_POINTS	4	The input has multiple points. 
The input has one drawing object. The supported drawing objects are bolts, parts and rebars. Bolts, 
INPUT_ONE_OBJECT	5 


parts and rebars are drawing objects derived from model objects. The parts include the beam, the contour plate and the polybeam. 
See Also 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	2641 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 DrawingPluginBase..::..UpdateMode Enumeration 
DrawingPluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Defines the update mode of the drawing plug-in. The update mode tells the system when the plug-in is executed. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum UpdateMode Visual Basic 
Public Enumeration UpdateMode 
Members 
Member name	Value	Description 
CREATE_ONLY	0 
The plug-in is updated when the input is a point and the point is moved or when the input is an object and the object changes. The plug-in is executed when the input 
INPUT_CHANGED	1 



DRAWING_OPENED 2 


is an object and its properties are changed in the drawing editor. This mode is the default which is used if the update mode is not defined in the plug-in source. 
The plug-in is updated also when a drawing is opened. The plug-in is executed when the input is changed or during drawing opening. 
See Also 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2642 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 InputObjectDependencyAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The InputObjectDependencyAttribute class is used for storing an input object dependency which determines when the plug-in is updated in the system. The attribute is initialized from the custom attribute 
[InputObjectDependency(PluginBase.InputObjectDependency Type)] in the plug-in source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class InputObjectDependencyAttribute : Attribute 
Visual Basic 
Public NotInheritable Class InputObjectDependencyAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..InputObjectDependencyAttribute 
See Also 
InputObjectDependencyAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2643 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectDependencyAttribute Members 
InputObjectDependencyAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The InputObjectDependencyAttribute type exposes the following members. 
Constructors 
  	Name 
The custom a [InputObject 
InputObjectDependencyAttribute(Int32) 




InputObjectDependencyAttribute(PluginBase..::..InputObjectDependency) 


Properties 
  	Name	Description 
Type	Returns the type of the input object dependency. See Also 
InputObjectDependencyAttribute Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


Type)] uses t determines w not to be use 
The custom a [InputObject Type)] uses t determines w not to be use 







See Also	2644 


Point Fields 
ï»¿  
  Collapse AllExpand All          	  Code: All  Code: Multiple  Code: C#  Code: 
Visual Basic          	  Members: Show All  Members: Filtered  Members: 
Filtered  Members: Filtered   
C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectDependencyAttribute Constructor 
InputObjectDependencyAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name 
The custom a [InputObject 
InputObjectDependencyAttribute(Int32) 




InputObjectDependencyAttribute(PluginBase..::..InputObjectDependency) 


See Also 
InputObjectDependencyAttribute Class InputObjectDependencyAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


Type)] uses t determines w not to be use 
The custom a [InputObject Type)] uses t determines w not to be use 















See Also	2645 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 InputObjectDependencyAttribute Constructor (Int32) InputObjectDependencyAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [InputObjectDependency(PluginBase.InputObjectDependency Type)] uses this to store a dependency attribute which determines when the plug-in is updated in the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputObjectDependencyAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The type of the input object dependency as an integer. 
See Also 
InputObjectDependencyAttribute Class InputObjectDependencyAttribute Members InputObjectDependencyAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 








See Also	2646 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 InputObjectDependencyAttribute Constructor (PluginBase..::..InputObjectDependency) 
InputObjectDependencyAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [InputObjectDependency(PluginBase.InputObjectDependency Type)] uses this to store a dependency attribute which determines when the plug-in is updated in the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputObjectDependencyAttribute( 
PluginBase..::..InputObjectDependency Type 
) 
Visual Basic 
Public Sub New (  
Type As PluginBase..::..InputObjectDependency 
) 
Parameters 

Type 
Type: Tekla.Structures.Plugins..::..PluginBase..::..InputObjectDependency The type of the input object dependency. 
See Also 
InputObjectDependencyAttribute Class 
InputObjectDependencyAttribute Members 
InputObjectDependencyAttribute Overload 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2647 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 InputObjectDependencyAttribute Properties 
InputObjectDependencyAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The InputObjectDependencyAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	Returns the type of the input object dependency. 
See Also 
InputObjectDependencyAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2648 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 InputObjectDependencyAttribute..::..Type Property 
InputObjectDependencyAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the type of the input object dependency. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PluginBase..::..InputObjectDependency Type { get; } 
Visual Basic 
Public ReadOnly Property Type As PluginBase..::..InputObjectDependency 
Get 
Property Value 

Type: PluginBase..::..InputObjectDependency 
See Also 
InputObjectDependencyAttribute Class InputObjectDependencyAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2649 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectTypeAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The InputObjectTypeAttribute class is used for storing the type of the input. Based on the type the system can then correctly ask for user input in the creation. The attribute is initialized from the custom attribute [InputObjectType(ConnectionBase.InputObjectType.INPUTOBJECT_PART)] in the connection source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class InputObjectTypeAttribute : Attribute 
Visual Basic 
Public NotInheritable Class InputObjectTypeAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..InputObjectTypeAttribute 
See Also 
InputObjectTypeAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2650 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectTypeAttribute Members 
InputObjectTypeAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The InputObjectTypeAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [InputObjectType()] uses this to store 
InputObjectTypeAttribute(Int32) 






InputObjectTypeAttribute(ConnectionBase..::..InputObjectType) 


the input object 
type to the system. This is not to be used by itself. 
The custom attribute [InputObjectType()] uses this to store the input object 
type to the system. This is not to be used by itself. 
Properties 
  	Name	Description 
Type	The custom attribute [InputObjectType()] uses this to store the input 
object type to the system. This is not to be used by itself. 
See Also 
InputObjectTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2651 


Point Fields 
ï»¿  
  Collapse AllExpand All          	  Code: All  Code: Multiple  Code: C#  Code: 
Visual Basic          	  Members: Show All  Members: Filtered  Members: 
Filtered  Members: Filtered   
C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectTypeAttribute Constructor 
InputObjectTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
The custom attribute [InputObjectType()] uses this to store 
InputObjectTypeAttribute(Int32) 






InputObjectTypeAttribute(ConnectionBase..::..InputObjectType) 



See Also 
InputObjectTypeAttribute Class InputObjectTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


the input object 
type to the system. This is not to be used by itself. 
The custom attribute [InputObjectType()] uses this to store the input object 
type to the system. This is not to be used by itself. 









See Also	2652 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectTypeAttribute Constructor (Int32) 
InputObjectTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [InputObjectType()] uses this to store the input object type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputObjectTypeAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The input object type. 
See Also 
InputObjectTypeAttribute Class InputObjectTypeAttribute Members InputObjectTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2653 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectTypeAttribute Constructor (ConnectionBase..::..InputObjectType) InputObjectTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [InputObjectType()] uses this to store the input object type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputObjectTypeAttribute( 
ConnectionBase..::..InputObjectType Type 
) 
Visual Basic 
Public Sub New (  
Type As ConnectionBase..::..InputObjectType 
) 
Parameters 

Type 
Type: Tekla.Structures.Plugins..::..ConnectionBase..::..InputObjectType The input object type. 
See Also 
InputObjectTypeAttribute Class 
InputObjectTypeAttribute Members 
InputObjectTypeAttribute Overload 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2654 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
InputObjectTypeAttribute Properties 
InputObjectTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The InputObjectTypeAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	The custom attribute [InputObjectType()] uses this to store the input 
object type to the system. This is not to be used by itself. 
See Also 
InputObjectTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2655 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 InputObjectTypeAttribute..::..Type Property 
InputObjectTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [InputObjectType()] uses this to store the input object type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ConnectionBase..::..InputObjectType Type { get; } 
Visual Basic 
Public ReadOnly Property Type As ConnectionBase..::..InputObjectType 
Get 
Property Value 

Type: ConnectionBase..::..InputObjectType 
See Also 
InputObjectTypeAttribute Class InputObjectTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2656 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PluginAttribute class is used for storing the name of the plug-in to the system. The attribute is initialized from the custom attribute [Plugin("PluginName")] in the plug-in source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class PluginAttribute : Attribute 
Visual Basic 
Public NotInheritable Class PluginAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..PluginAttribute 
See Also 
PluginAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2657 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginAttribute Members 
PluginAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginAttribute type exposes the following members. 
Constructors 
  	Name	Description 
PluginAttribute The custom attribute [Plugin("PluginName")] uses this to store 
the name to the system. This is not to be used by itself. 
Properties 
  	Name	Description 
Name	The name of the plug-in in the system. 
See Also 
PluginAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2658 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginAttribute Constructor 
PluginAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [Plugin("PluginName")] uses this to store the name to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PluginAttribute( 
string name 
) 
Visual Basic 
Public Sub New (  
name As String 
) 
Parameters 

name 
Type: System..::..String 
The name of the plug-in. 
See Also 
PluginAttribute Class 
PluginAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2659 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginAttribute Properties 
PluginAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginAttribute type exposes the following members. 
Properties 
  	Name	Description 
Name	The name of the plug-in in the system. 
See Also 
PluginAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2660 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginAttribute..::..Name Property 
PluginAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the plug-in in the system. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; } 
Visual Basic 
Public ReadOnly Property Name As String 
Get 
Property Value 
Type: String 
See Also 
PluginAttribute Class 
PluginAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2661 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PluginBase class in an abstract base class for model plug-ins. Model plug-ins have to be inherited from this class. Drawing plug-ins have to be inherited from the DrawingPluginBase. 
A plug-in is always executed in the plug-in's local coordinate system. The origin of the plug-in's coordinate system is defined based on the first input object or point. In case the first input is an object, the origin of the plug-in's coordinate system is the first input point of the object. In case the first input is a point, the origin of the plug-in's coordinate system is the input point. The X- and Y-axes of the coordinate system are defined in the current plane. 

Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract class PluginBase : MarshalByRefObject 
Visual Basic 
Public MustInherit Class PluginBase 
Inherits MarshalByRefObject 
Examples 
In the following example a .inp file is used for defining the dialog, because the designer code of the form is too large to present here. See this same plug-in implemented with Windows Forms in the Examples of the Start-Up package. The System.Windows.Forms namespace can be used starting from version 15.0. See the PluginFormBase class in the Tekla.Structures.Dialog documentation for more information. 

  	Copy 
using System; 
using System.Collections.Generic; 
using Tekla.Structures.Plugins; 
using Tekla.Structures.Geometry3d; 
using Tekla.Structures.Model.UI; 
using TSM = Tekla.Structures.Model; 
public class StructuresData  
Examples	2662 


Point Fields 
{ 
       [Tekla.Structures.Plugins.StructuresField("P1")] 
public double Parameter1; 
} 
[Plugin("BeamPlugin")] // Mandatory field which defines that this is the plug-in and stores the n [PluginUserInterface(BeamPlugin.UserInterfaceDefinitions.Plugin1)] // Mandatory field which defin public class BeamPlugin: PluginBase 
{ 
private readonly StructuresData data; 
// The constructor argument defines the database class StructuresData and sets the data to public BeamPlugin(StructuresData data) 
       { 
           TSM.Model M = new TSM.Model(); 
this.data = data; 
       } 
//Defines the inputs to be passed to the plug-in. 
public override List<InputDefinition> DefineInput() 
       { 
           Picker BeamPicker = new Picker(); 
           List<InputDefinition> PointList = new List<InputDefinition>(); 
           Point Point1 = BeamPicker.PickPoint();            Point Point2 = BeamPicker.PickPoint(); 
           InputDefinition Input1 = new InputDefinition(Point1);            InputDefinition Input2 = new InputDefinition(Point2);            PointList.Add(Input1); 
           PointList.Add(Input2); 
return PointList; 
       } 
//Main method of the plug-in. 
public override bool Run(List<InputDefinition> Input) 
       { 
try 
           { 
               Point Point1 = (Point)(Input[0]).GetInput(); 
               Point Point2 = (Point)(Input[1]).GetInput(); 
               Point LengthVector = new Point(Point2.X - Point1.X, Point2.Y - Point1.Y, Point2.Z  
if(data.Parameter1 > 0) 
               { 
                   Point2.X = data.Parameter1 * LengthVector.X + Point1.X; 
                   Point2.Y = data.Parameter1 * LengthVector.Y + Point1.Y; 
                   Point2.Z = data.Parameter1 * LengthVector.Z + Point1.Z; 
               } 
               CreateBeam(Point1, Point2); 
           } 
catch(Exception) 
           { 
           } 
return true; 
       } 
static void CreateBeam(Point Point1, Point Point2) 
       { 

Examples	2663 


Point Fields 
           TSM.Beam MyBeam = new TSM.Beam(Point1, Point2); 
           MyBeam.Profile.ProfileString = "HEA400";            MyBeam.Finish = "PAINT"; 
           MyBeam.Insert(); 
       } 
//.inp file user interface definition, check the Start-Up package for the Windows Forms di public class UserInterfaceDefinitions 
       { 
public const string Plugin1 = @"" + 
@"page(""TeklaStructures"","""")" + "\n" + 
"{\n" + 
"    plugin(1, BeamPlugin)\n" + 
"    {\n" + 
@"        tab_page(""Beam test"", ""Parametri_1"", 1)" + "\n" + 
"        {\n" + 
@"            parameter(""Length factor"", ""P1"", distance, number, 1)" + "\n" + 
"        }\n" + 
"    }\n" + 
"}\n"; 
       } 
} 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Plugins..::..PluginBase 
See Also 
PluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2664 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase Members 
PluginBase Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginBase type exposes the following members. 
Methods 
  	Name	Description 
The method Tekla Structures calls for the plug-in to query the input. The plug-in must then return a list of input definition instances. The plug-in will be dependent on the items it returns. Dependent means that if any of these 
DefineInput 


items change, for example the user moves the points, the plug-in will be re-run with new input. DefineInput is not called during the re-run, and thus all the actual implementation should be in the Run() method. The maximum number of InputDefinitions in the List is 10. 
Initializes the lifetime service. 
(Overrides MarshalByRefObject..::..InitializeLifetimeService()()()().) 
IsDefaultValue(Double)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the plug-in. It is called after the input has been defined with DefineInput(). This is the "main" 
Run 


method of the plug-in and should contain all the actual implementation. 
Properties 
  	Name	Description 
Identifier The identifier of the executable plug-in instance. 


Properties	2665 


Point Fields 

See Also 
PluginBase Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











































See Also	2666 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase Methods 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginBase type exposes the following members. 
Methods 
  	Name	Description 
The method Tekla Structures calls for the plug-in to query the input. The plug-in must then return a list of input definition instances. The plug-in will be dependent on the items it returns. Dependent means that if any of these 
DefineInput 


items change, for example the user moves the points, the plug-in will be re-run with new input. DefineInput is not called during the re-run, and thus all the actual implementation should be in the Run() method. The maximum number of InputDefinitions in the List is 10. 
Initializes the lifetime service. 
(Overrides MarshalByRefObject..::..InitializeLifetimeService()()()().) 
IsDefaultValue(Double)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
The main method of the plug-in. It is called after the input has been defined with DefineInput(). This is the "main" 
Run 


method of the plug-in and should contain all the actual implementation. 
See Also 
PluginBase Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2667 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..DefineInput Method 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The method Tekla Structures calls for the plug-in to query the input. The plug-in must then return a list of input definition instances. The plug-in will be dependent on the items it returns. Dependent means that if any of these items change, for example the user moves the points, the plug-in will be re-run with new input. DefineInput is not called during the re-run, and thus all the actual implementation should be in the Run() method. The maximum number of InputDefinitions in the List is 10. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract List<PluginBase..::..InputDefinition> DefineInput() 
Visual Basic 
Public MustOverride Function DefineInput As List(Of PluginBase..::..InputDefinition) Return Value 

Type: List<(Of <(<'PluginBase..::..InputDefinition>)>)> 
A list of input definition instances. If the plug-in is not dependent on input, it should return an empty list (not null). 
See Also 
PluginBase Class 
PluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2668 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginBase..::..InitializeLifetimeService Method 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Initializes the lifetime service. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public override Object InitializeLifetimeService() 
Visual Basic 
Public Overrides Function InitializeLifetimeService As Object 
Return Value 

Type: Object 
A lifetime service object to control the lifetime policy. 
See Also 
PluginBase Class 
PluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2669 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..IsDefaultValue Method 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
IsDefaultValue(Double) Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(Int32)	Returns true if the given value is set to the default value 
for this type. 
IsDefaultValue(String)	Returns true if the given value is set to the default value 
(empty string). 
See Also 
PluginBase Class 
PluginBase Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2670 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..IsDefaultValue Method (Double) 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
double Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Double 
) As Boolean 
Parameters 

Value 
Type: System..::..Double The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
PluginBase Class 
PluginBase Members 
IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2671 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..IsDefaultValue Method (Int32) 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value for this type. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
int Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As Integer 
) As Boolean 
Parameters 

Value 
Type: System..::..Int32 The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
PluginBase Class 
PluginBase Members 
IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2672 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..IsDefaultValue Method (String) 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns true if the given value is set to the default value (empty string). Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool IsDefaultValue( 
string Value 
) 
Visual Basic 
Public Function IsDefaultValue (  
Value As String 
) As Boolean 
Parameters 

Value 
Type: System..::..String The value to test. 

Return Value 

Type: Boolean 
True if the value is set to the default. 
See Also 
PluginBase Class 
PluginBase Members 
IsDefaultValue Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2673 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..Run Method 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The main method of the plug-in. It is called after the input has been defined with DefineInput(). This is the "main" method of the plug-in and should contain all the actual implementation. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public abstract bool Run( 
List<PluginBase..::..InputDefinition> Input 
) 
Visual Basic 
Public MustOverride Function Run (  
Input As List(Of PluginBase..::..InputDefinition) 
) As Boolean 
Parameters 

Input 
Type: System.Collections.Generic..::..List<(Of 
<(<'PluginBase..::..InputDefinition>)>)> 
A list of the same format and order as what was returned from DefineInput(). 

Return Value 
Type: Boolean 
True on success. 
See Also 
PluginBase Class 
PluginBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	2674 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase Properties 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginBase type exposes the following members. 
Properties 
  	Name	Description 
Identifier The identifier of the executable plug-in instance. See Also 
PluginBase Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2675 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..Identifier Property 
PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The identifier of the executable plug-in instance. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Identifier Identifier { get; } 
Visual Basic 
Public ReadOnly Property Identifier As Identifier 
Get 
Property Value 
Type: Identifier 
See Also 
PluginBase Class 
PluginBase Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2676 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Class 
PluginBase Class  Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The InputDefinition class is a class for defining the plug-in dependency over the input (points or identifiers). The user implemented method DefineInput() of the PluginBase interface should return an array list of input definition instances. This defines the points and identifiers the plug-in will receive as input when the Run() method is called. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
[SerializableAttribute] 
public sealed class InputDefinition : MarshalByRefObject 
Visual Basic 
<SerializableAttribute> 
Public NotInheritable Class InputDefinition 
Inherits MarshalByRefObject 
Inheritance Hierarchy 
System..::..Object 
    System..::..MarshalByRefObject 
        Tekla.Structures.Plugins..::..PluginBase..::..InputDefinition 
See Also 
PluginBase..::..InputDefinition Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2677 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Members 
PluginBase..::..InputDefinition Class  Constructors  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginBase..::..InputDefinition type exposes the following members. 
Constructors 
  	Name	Description 
Creates a new input definition instance with multiple point or identifier instances. 
PluginBase..::..InputDefinition(Identifier)	Creates a new input definition 
instance with one identifier. PluginBase..::..InputDefinition(Point)	Creates a new input definition 
instance with one point. 
PluginBase..::..InputDefinition(Point, 
Point) 
Methods 
  	Name	Description 
Returns the input Tekla Structures gave to the plug-in. The input is either a point instance, an identifier instance, an array list of points or an array list of identifiers. This is based on the input format 
returned from the DefineInput() method. 
GetInputType Returns the type of the input the current instance contains. 
See Also 
PluginBase..::..InputDefinition Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 




See Also	2678 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Constructor 
PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
Creates a new input definition instance with multiple point or identifier instances. 
PluginBase..::..InputDefinition(Identifier)	Creates a new input definition 
instance with one identifier. PluginBase..::..InputDefinition(Point)	Creates a new input definition 
instance with one point. 
PluginBase..::..InputDefinition(Point, 
Point) 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2679 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Constructor (ArrayList) 
PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Creates a new input definition instance with multiple point or identifier instances. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
ArrayList _Input 
) 
Visual Basic 
Public Sub New (  
_Input As ArrayList 
) 
Parameters 

_Input 
Type: System.Collections..::..ArrayList A list of either points or identifiers. 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members PluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2680 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Constructor (Identifier) 
PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with one identifier. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Identifier ID 
) 
Visual Basic 
Public Sub New (  ID As Identifier 
) 
Parameters 

ID 
Type: Tekla.Structures..::..Identifier The model object identifier. 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members PluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2681 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Constructor (Point) 
PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with one point. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Point Point 
) 
Visual Basic 
Public Sub New (  
Point As Point 
) 
Parameters 

Point 
Type: Tekla.Structures.Geometry3d..::..Point The point. 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members PluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 










See Also	2682 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Constructor (Point, Point) PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Creates a new input definition instance with two points. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public InputDefinition( 
Point P1, 
Point P2 
) 
Visual Basic 
Public Sub New (  
P1 As Point, 
P2 As Point 
) 
Parameters 

P1 
Type: Tekla.Structures.Geometry3d..::..Point The first point. 

P2 
Type: Tekla.Structures.Geometry3d..::..Point The second point. 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members PluginBase..::..InputDefinition Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





See Also	2683 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginBase..::..InputDefinition Methods 
PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginBase..::..InputDefinition type exposes the following members. 
Methods 
  	Name	Description 
Returns the input Tekla Structures gave to the plug-in. The input is either a point instance, an identifier instance, an array list of points or an array list of identifiers. This is based on the input format 
returned from the DefineInput() method. 
GetInputType Returns the type of the input the current instance contains. 
See Also 
PluginBase..::..InputDefinition Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


















See Also	2684 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginBase..::..InputDefinition..::..GetInput Method 
PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Returns the input Tekla Structures gave to the plug-in. The input is either a point instance, an identifier instance, an array list of points or an array list of identifiers. This is based on the input format returned from the DefineInput() method. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object GetInput() 
Visual Basic 
Public Function GetInput As Object 
Return Value 

Type: Object 
The input to use in the Run() method. 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2685 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginBase..::..InputDefinition..::..GetInputType Method PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the type of the input the current instance contains. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PluginBase..::..InputDefinition..::..InputTypeEnum GetInputType() 
Visual Basic 
Public Function GetInputType As PluginBase..::..InputDefinition..::..InputTypeEnum Return Value 
Type: PluginBase..::..InputDefinition..::..InputTypeEnum The type of the input. 
See Also 
PluginBase..::..InputDefinition Class PluginBase..::..InputDefinition Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2686 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginBase..::..InputDefinition..::..InputTypeEnum Enumeration PluginBase..::..InputDefinition Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The possible input types for a plug-in. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum InputTypeEnum 
Visual Basic 
Public Enumeration InputTypeEnum 
Members 
Member name	Value		Description 
INPUT_ONE_POINT	1	The input is one point (x,y,z). 
INPUT_TWO_POINTS 2	The input is two points. 
INPUT_POLYGON	3	The input is multiple points. INPUT_ONE_OBJECT	4	The input is one ID of any type. INPUT_N_OBJECTS	5	The input is N IDs of any type. 
See Also 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2687 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginBase..::..InputObjectDependency Enumeration PluginBase Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Defines the input object dependency type for model plug-ins. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum InputObjectDependency 
Visual Basic 
Public Enumeration InputObjectDependency 
Members 
Member name	Value	Description 
No dependency on input. Typically this 
type is applied to the import and export functionality. Not-dependent plug-ins are executed from the plug-in dialog instead of the component catalog. The created 
objects do not have any relation to the 
NOT_DEPENDENT	0 








DEPENDENT	1 



GEOMETRICALLY_DEPENDENT	2 


plug-in anymore. The plug-in dialog cannot be opened from the created objects. Note! The system does not automatically save a rollback point to the database for non-dependent plug-ins. If new objects are created, CommitChanges needs to be 
called at the end of the Run method. 
Dependent on input. The plug-in is executed if e.g. the definition points or the profile of the input part change. Boolean operations to the input part do not cause plug-in execution. 
Geometrically dependent on input. The plug-in is executed if the input part geometry changes i.e. if the input part is fitted. 


Members	2688 






NOT_DEPENDENT_MODIFIABLE 3 


See Also 
Tekla.Structures.Plugins Namespace 



Point Fields 
No dependency on input but the instance is modifiable in the model. The created 
objects have a relation to the plug-in. The plug-in dialog can be opened from the created objects. 

Copyright  © Tekla 2013. All rights reserved. 







































See Also	2689 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginDescriptionAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class PluginDescriptionAttribute : Attribute 
Visual Basic 
Public NotInheritable Class PluginDescriptionAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..PluginDescriptionAttribute 
See Also 
PluginDescriptionAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2690 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginDescriptionAttribute Members 
PluginDescriptionAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginDescriptionAttribute type exposes the following members. 
Constructors 
  	Name	Description 
PluginDescriptionAttribute Not supported at the moment. Properties 
  	Name	Description 
Description Not supported at the moment. Language	Not supported at the moment. 
See Also 
PluginDescriptionAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2691 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginDescriptionAttribute Constructor 
PluginDescriptionAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PluginDescriptionAttribute( 
string language, 
string description 
) 
Visual Basic 
Public Sub New (  
language As String, 
description As String 
) 
Parameters 

language 
Type: System..::..String 
Not supported at the moment. 

description 
Type: System..::..String 
Not supported at the moment. See Also 
PluginDescriptionAttribute Class PluginDescriptionAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2692 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginDescriptionAttribute Properties 
PluginDescriptionAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginDescriptionAttribute type exposes the following members. 
Properties 
  	Name	Description 
Description Not supported at the moment. Language	Not supported at the moment. 
See Also 
PluginDescriptionAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2693 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginDescriptionAttribute..::..Description Property 
PluginDescriptionAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Description { get; } 
Visual Basic 
Public ReadOnly Property Description As String 
Get 
Property Value 
Type: String 
See Also 
PluginDescriptionAttribute Class PluginDescriptionAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2694 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginDescriptionAttribute..::..Language Property 
PluginDescriptionAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Language { get; } 
Visual Basic 
Public ReadOnly Property Language As String 
Get 
Property Value 
Type: String 
See Also 
PluginDescriptionAttribute Class PluginDescriptionAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2695 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginNameAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class PluginNameAttribute : Attribute 
Visual Basic 
Public NotInheritable Class PluginNameAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..PluginNameAttribute 
See Also 
PluginNameAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2696 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginNameAttribute Members 
PluginNameAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginNameAttribute type exposes the following members. 
Constructors 
  	Name	Description 
PluginNameAttribute Not supported at the moment. Properties 
  	Name	Description 
Language Not supported at the moment. Name	Not supported at the moment. 
See Also 
PluginNameAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2697 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginNameAttribute Constructor 
PluginNameAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PluginNameAttribute( 
string language, 
string name 
) 
Visual Basic 
Public Sub New (  
language As String, 
name As String 
) 
Parameters 

language 
Type: System..::..String 
Not supported at the moment. 

name 
Type: System..::..String 
Not supported at the moment. 
See Also 
PluginNameAttribute Class PluginNameAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






See Also	2698 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginNameAttribute Properties 
PluginNameAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginNameAttribute type exposes the following members. 
Properties 
  	Name	Description 
Language Not supported at the moment. Name	Not supported at the moment. 
See Also 
PluginNameAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2699 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginNameAttribute..::..Language Property 
PluginNameAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Language { get; } 
Visual Basic 
Public ReadOnly Property Language As String 
Get 
Property Value 
Type: String 
See Also 
PluginNameAttribute Class PluginNameAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2700 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginNameAttribute..::..Name Property 
PluginNameAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Not supported at the moment. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Name { get; } 
Visual Basic 
Public ReadOnly Property Name As String 
Get 
Property Value 
Type: String 
See Also 
PluginNameAttribute Class PluginNameAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2701 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginUserInterfaceAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PluginUserInterfaceAttribute class is used for storing the description of the plug-in user interface to the system. The attribute is initialized from the custom attribute [PluginUserInterface(PluginName.UserInterfaceDefinitions.Plugin1)] in the 
plug-in source. In this case the description string Plugin1 is a dialog written in inp format. If the plug-in dialog is inherited from the PluginFormBase the description string contains a class name of the dialog i.e. [PluginUserInterface("Model_Plug_in1.MainForm")]. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class PluginUserInterfaceAttribute : Attribute 
Visual Basic 
Public NotInheritable Class PluginUserInterfaceAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..PluginUserInterfaceAttribute 
See Also 
PluginUserInterfaceAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2702 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginUserInterfaceAttribute Members 
PluginUserInterfaceAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginUserInterfaceAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [PluginUserInterface(PluginName.UserInterfaceDefinitions 
PluginUserInterfaceAttribute 


uses this to store the description of the plug-in user interfa system. This is not to be used by itself. 
Properties 
  	Name	Description 
Description The description of the plug-in user interface in inp format. See Also 
PluginUserInterfaceAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2703 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PluginUserInterfaceAttribute Constructor 
PluginUserInterfaceAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [PluginUserInterface(PluginName.UserInterfaceDefinitions.Plugin1)] uses this to store the description of the plug-in user interface to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PluginUserInterfaceAttribute( 
string description 
) 
Visual Basic 
Public Sub New (  
description As String 
) 
Parameters 

description 
Type: System..::..String 
The description of the plug-in user interface in inp format or the name of the dialog class for the PluginFormBase dialog. 
See Also 
PluginUserInterfaceAttribute Class 
PluginUserInterfaceAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 







See Also	2704 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PluginUserInterfaceAttribute Properties 
PluginUserInterfaceAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PluginUserInterfaceAttribute type exposes the following members. 
Properties 
  	Name	Description 
Description The description of the plug-in user interface in inp format. See Also 
PluginUserInterfaceAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2705 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 PluginUserInterfaceAttribute..::..Description Property 
PluginUserInterfaceAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The description of the plug-in user interface in inp format. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string Description { get; } 
Visual Basic 
Public ReadOnly Property Description As String 
Get 
Property Value 
Type: String 
See Also 
PluginUserInterfaceAttribute Class PluginUserInterfaceAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2706 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The PositionTypeAttribute class is used for storing the position type of the connection. Based on the type the system will then position the connection in the creation. The attribute is initialized from the custom attribute [PositionType(PositionTypeEnum.COLLISION_PLANE)] in the connection source. Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class PositionTypeAttribute : Attribute 
Visual Basic 
Public NotInheritable Class PositionTypeAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..PositionTypeAttribute 
See Also 
PositionTypeAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2707 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute Members 
PositionTypeAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PositionTypeAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [PositionType()] uses this to store the position type to 
PositionTypeAttribute(Int32) 



PositionTypeAttribute(PositionTypeEnum) 


the system. This is not to be used by itself. 
The custom attribute [PositionType()] uses this to store the position type to the system. This is not to be used by itself. 
Properties 
  	Name	Description 
Type	The custom attribute [PositionType()] uses this to store the position type 
to the system. This is not to be used by itself. 
See Also 
PositionTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2708 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute Constructor 
PositionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
The custom attribute [PositionType()] uses this to store the position type to 
PositionTypeAttribute(Int32) 



PositionTypeAttribute(PositionTypeEnum) 

See Also 
PositionTypeAttribute Class PositionTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


the system. This is not to be used by itself. 
The custom attribute [PositionType()] uses this to store the position type to the system. This is not to be used by itself. 
















See Also	2709 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute Constructor (Int32) 
PositionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [PositionType()] uses this to store the position type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PositionTypeAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The position type. 
See Also 
PositionTypeAttribute Class PositionTypeAttribute Members PositionTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2710 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute Constructor (PositionTypeEnum) 
PositionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [PositionType()] uses this to store the position type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PositionTypeAttribute( 
PositionTypeEnum Type 
) 
Visual Basic 
Public Sub New (  
Type As PositionTypeEnum 
) 
Parameters 

Type 
Type: Tekla.Structures..::..PositionTypeEnum The position type. 
See Also 
PositionTypeAttribute Class 
PositionTypeAttribute Members PositionTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2711 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute Properties 
PositionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The PositionTypeAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	The custom attribute [PositionType()] uses this to store the position type 
to the system. This is not to be used by itself. 
See Also 
PositionTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2712 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
PositionTypeAttribute..::..Type Property 
PositionTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [PositionType()] uses this to store the position type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public PositionTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As PositionTypeEnum 
Get 
Property Value 

Type: PositionTypeEnum 
See Also 
PositionTypeAttribute Class PositionTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2713 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SeamInputTypeAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The SeamInputTypeAttribute class is used for identifying that the connection is a seam and defining the input type. Based on the type the system will then ask for the correct number of input points in the creation. The attribute is initialized from the custom attribute [SeamInputType(ConnectionBase.SeamInputType.INPUT_POLYGON)] in the connection source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class SeamInputTypeAttribute : Attribute 
Visual Basic 
Public NotInheritable Class SeamInputTypeAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..SeamInputTypeAttribute 
See Also 
SeamInputTypeAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2714 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SeamInputTypeAttribute Members 
SeamInputTypeAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SeamInputTypeAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [SeamInputType()] uses this to store 
SeamInputTypeAttribute(Int32) 






SeamInputTypeAttribute(ConnectionBase..::..SeamInputType) 


the input type to the system. This is not to be used by itself. 
The custom attribute [SeamInputType()] uses this to store the input type to the system. This is not to be used by itself. 
Properties 
  	Name	Description 
Type	The custom attribute [SeamInputType()] uses this to store the input type 
to the system. This is not to be used by itself. 
See Also 
SeamInputTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2715 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SeamInputTypeAttribute Constructor 
SeamInputTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
The custom attribute [SeamInputType()] uses this to store 
SeamInputTypeAttribute(Int32) 






SeamInputTypeAttribute(ConnectionBase..::..SeamInputType) 



See Also 
SeamInputTypeAttribute Class SeamInputTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


the input type to the system. This is not to be used by itself. 
The custom attribute [SeamInputType()] uses this to store the input type to the system. This is not to be used by itself. 









See Also	2716 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SeamInputTypeAttribute Constructor (Int32) 
SeamInputTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [SeamInputType()] uses this to store the input type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SeamInputTypeAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The seam input type. 
See Also 
SeamInputTypeAttribute Class SeamInputTypeAttribute Members SeamInputTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2717 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SeamInputTypeAttribute Constructor (ConnectionBase..::..SeamInputType) SeamInputTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [SeamInputType()] uses this to store the input type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SeamInputTypeAttribute( 
ConnectionBase..::..SeamInputType Type 
) 
Visual Basic 
Public Sub New (  
Type As ConnectionBase..::..SeamInputType 
) 
Parameters 

Type 
Type: Tekla.Structures.Plugins..::..ConnectionBase..::..SeamInputType The seam input type. 
See Also 
SeamInputTypeAttribute Class 
SeamInputTypeAttribute Members 
SeamInputTypeAttribute Overload 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2718 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SeamInputTypeAttribute Properties 
SeamInputTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SeamInputTypeAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	The custom attribute [SeamInputType()] uses this to store the input type 
to the system. This is not to be used by itself. 
See Also 
SeamInputTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2719 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 SeamInputTypeAttribute..::..Type Property 
SeamInputTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [SeamInputType()] uses this to store the input type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ConnectionBase..::..SeamInputType Type { get; } 
Visual Basic 
Public ReadOnly Property Type As ConnectionBase..::..SeamInputType 
Get 
Property Value 

Type: ConnectionBase..::..SeamInputType 
See Also 
SeamInputTypeAttribute Class SeamInputTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2720 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SecondaryTypeAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The SecondaryTypeAttribute class is used for storing the number of needed secondaries in the connection. Based on the type the system can then correctly ask for user input in the creation. The attribute is initialized from the custom attribute i.e. [SecondaryType(ConnectionBase.SecondaryType.SECONDARYTYPE_ONE)] in the connection source. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class SecondaryTypeAttribute : Attribute 
Visual Basic 
Public NotInheritable Class SecondaryTypeAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..SecondaryTypeAttribute 
See Also 
SecondaryTypeAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 











See Also	2721 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SecondaryTypeAttribute Members 
SecondaryTypeAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SecondaryTypeAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [SecondaryType()] uses this to store 
SecondaryTypeAttribute(Int32) 






SecondaryTypeAttribute(ConnectionBase..::..SecondaryType) 


the secondary type to the system. This is not to be used 
by itself. 
The custom attribute [SecondaryType()] uses this to store the secondary type to the system. This is not to be used 
by itself. 
Properties 
  	Name	Description 
Type	The custom attribute [SecondaryType()] uses this to store the secondary 
type to the system. This is not to be used by itself. 
See Also 
SecondaryTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 

See Also	2722 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SecondaryTypeAttribute Constructor 
SecondaryTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Overload  List 
  	Name	Description 
The custom attribute [SecondaryType()] uses this to store 
SecondaryTypeAttribute(Int32) 






SecondaryTypeAttribute(ConnectionBase..::..SecondaryType) 



See Also 
SecondaryTypeAttribute Class SecondaryTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 


the secondary type to the system. This is not to be used 
by itself. 
The custom attribute [SecondaryType()] uses this to store the secondary type to the system. This is not to be used 
by itself. 









See Also	2723 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SecondaryTypeAttribute Constructor (Int32) 
SecondaryTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [SecondaryType()] uses this to store the secondary type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SecondaryTypeAttribute( 
int Type 
) 
Visual Basic 
Public Sub New (  
Type As Integer 
) 
Parameters 

Type 
Type: System..::..Int32 
The secondary type. 
See Also 
SecondaryTypeAttribute Class SecondaryTypeAttribute Members SecondaryTypeAttribute Overload Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2724 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
SecondaryTypeAttribute Constructor (ConnectionBase..::..SecondaryType) SecondaryTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [SecondaryType()] uses this to store the secondary type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public SecondaryTypeAttribute( 
ConnectionBase..::..SecondaryType Type 
) 
Visual Basic 
Public Sub New (  
Type As ConnectionBase..::..SecondaryType 
) 
Parameters 

Type 
Type: Tekla.Structures.Plugins..::..ConnectionBase..::..SecondaryType The secondary type. 
See Also 
SecondaryTypeAttribute Class 
SecondaryTypeAttribute Members 
SecondaryTypeAttribute Overload 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2725 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
SecondaryTypeAttribute Properties 
SecondaryTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The SecondaryTypeAttribute type exposes the following members. 
Properties 
  	Name	Description 
Type	The custom attribute [SecondaryType()] uses this to store the secondary 
type to the system. This is not to be used by itself. 
See Also 
SecondaryTypeAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2726 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 SecondaryTypeAttribute..::..Type Property 
SecondaryTypeAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [SecondaryType()] uses this to store the secondary type to the system. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public ConnectionBase..::..SecondaryType Type { get; } 
Visual Basic 
Public ReadOnly Property Type As ConnectionBase..::..SecondaryType 
Get 
Property Value 

Type: ConnectionBase..::..SecondaryType 
See Also 
SecondaryTypeAttribute Class SecondaryTypeAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2727 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
StructuresFieldAttribute Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The StructuresFieldAttribute class is used for mapping a database attribute to a data field that the plug-in uses in execution. The attribute is initialized from the custom attribute [StructuresField(attributeName)] in the plug-in source. In the plug-in the data field must be public and the type must be double, integer or string. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class StructuresFieldAttribute : Attribute 
Visual Basic 
Public NotInheritable Class StructuresFieldAttribute 
Inherits Attribute 
Inheritance Hierarchy 
System..::..Object 
    System..::..Attribute 
        Tekla.Structures.Plugins..::..StructuresFieldAttribute 
See Also 
StructuresFieldAttribute Members 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2728 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
StructuresFieldAttribute Members 
StructuresFieldAttribute Class  Constructors  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The StructuresFieldAttribute type exposes the following members. 
Constructors 
  	Name	Description 
The custom attribute [StructuresField(attributeName)] uses this to map a database attribute to a data field that 
StructuresFieldAttribute 


the plug-in uses in execution. This is not to be used by itself. 
Properties 
  	Name	Description 
AttributeName The name of the attribute. See Also 
StructuresFieldAttribute Class Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 













See Also	2729 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
StructuresFieldAttribute Constructor 
StructuresFieldAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The custom attribute [StructuresField(attributeName)] uses this to map a database attribute to a data field that the plug-in uses in execution. This is not to be used by itself. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public StructuresFieldAttribute( 
string attributeName 
) 
Visual Basic 
Public Sub New (  
attributeName As String 
) 
Parameters 

attributeName 
Type: System..::..String 
The name of the attribute. See Also 
StructuresFieldAttribute Class StructuresFieldAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 









See Also	2730 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
StructuresFieldAttribute Properties 
StructuresFieldAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The StructuresFieldAttribute type exposes the following members. 
Properties 
  	Name	Description 
AttributeName The name of the attribute. 
See Also 
StructuresFieldAttribute Class 
Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2731 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 StructuresFieldAttribute..::..AttributeName Property StructuresFieldAttribute Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The name of the attribute. 
Namespace:  Tekla.Structures.Plugins 
Assembly:  Tekla.Structures.Plugins (in Tekla.Structures.Plugins.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public string AttributeName { get; } 
Visual Basic 
Public ReadOnly Property AttributeName As String 
Get 
Property Value 
Type: String 
See Also 
StructuresFieldAttribute Class StructuresFieldAttribute Members Tekla.Structures.Plugins Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2732 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Tekla.Structures.Solid Namespace 
Send Feedback 
[This is preliminary documentation and is subject to change.] 
The Tekla.Structures.Solid namespace contains basic common solid related types that are shared between Tekla Structures Model and Drawing. 
Classes 
  	Class	Description 
Edge	The Edge class represents a single global edge in a solid. EdgeEnumerator	The EdgeEnumerator class is used to enumerate the edges of 
a solid. 
Face	The Face class represents a single face in a solid. 
FaceEnumerator	The FaceEnumerator class is used to enumerate the faces of a 
solid. 
Loop	The Loop class represents a single loop in a face. 
LoopEnumerator	The LoopEnumerator class is used to enumerate the loops of a 
face instance. 
Shell	The Shell class represents a single shell in a solid. 
ShellEnumerator 
VertexEnumerator The VertexEnumerator class is used to enumerate the 
vertexes of a loop instance. 
Interfaces 
  	Interface	Description 
The ISolid interface represents a physical object in the model or a drawing created by a part instance. The solid instance can be used to query the actual geometry of the part. 
Enumerations 
  	Enumeration	Description 
Edge..::..EdgeTypeEnum	The type of the edge. 

Copyright  © Tekla 2013. All rights reserved. 




Enumerations	2733 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Edge Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Edge class represents a single global edge in a solid. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class Edge : ICloneable 
Visual Basic 
Public NotInheritable Class Edge 
Implements ICloneable 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..Edge 
See Also 
Edge Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2734 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Edge Members 
Edge Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Edge type exposes the following members. 
Methods 
  	Name	Description 
Clone	Method for cloning the current object. Properties 
  	Name	Description 
EndPoint	Gets the end point of the edge. StartPoint Gets the start point of the edge. Type	Gets the type of the edge. 
See Also 
Edge Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2735 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Edge Methods 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Edge type exposes the following members. 
Methods 
  	Name	Description 
Clone	Method for cloning the current object. See Also 
Edge Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2736 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Edge..::..Clone Method 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Method for cloning the current object. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object Clone() 
Visual Basic 
Public Function Clone As Object 
Return Value 
Type: Object Cloned object. 

Implements 

ICloneable..::..Clone()()()() 
See Also 
Edge Class 
Edge Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2737 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Edge Properties 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Edge type exposes the following members. 
Properties 
  	Name	Description 
EndPoint	Gets the end point of the edge. StartPoint Gets the start point of the edge. Type	Gets the type of the edge. 
See Also 
Edge Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2738 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Edge..::..EndPoint Property 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the end point of the edge. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point EndPoint { get; } 
Visual Basic 
Public ReadOnly Property EndPoint As Point 
Get 
Property Value 
Type: Point 
See Also 
Edge Class 
Edge Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2739 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Edge..::..StartPoint Property 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the start point of the edge. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point StartPoint { get; } 
Visual Basic 
Public ReadOnly Property StartPoint As Point 
Get 
Property Value 
Type: Point 
See Also 
Edge Class 
Edge Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2740 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Edge..::..Type Property 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the type of the edge. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Edge..::..EdgeTypeEnum Type { get; } 
Visual Basic 
Public ReadOnly Property Type As Edge..::..EdgeTypeEnum 
Get 
Property Value 

Type: Edge..::..EdgeTypeEnum 
See Also 
Edge Class 
Edge Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2741 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Edge..::..EdgeTypeEnum Enumeration 
Edge Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The type of the edge. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public enum EdgeTypeEnum 
Visual Basic 
Public Enumeration EdgeTypeEnum 
Members 
Member name	Value		Description EDGE_TYPE_NORMAL	0	The normal edge type. EDGE_TYPE_CURVED_SURFACE 1	The curved surface edge type. 
EDGE_TYPE_HIDDEN	2	The hidden edge type. 
See Also 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2742 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator Class 
Members  Example  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The EdgeEnumerator class is used to enumerate the edges of a solid. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class EdgeEnumerator : IEnumerator 
Visual Basic 
Public NotInheritable Class EdgeEnumerator 
Implements IEnumerator 
Examples 
  	Copy 
using Tekla.Structures.Model; 
using Tekla.Structures.Solid; 
using Tekla.Structures.Geometry3d; 
public class Example 
{ 
public void Example1() 
    { 
        ModelObjectEnumerator myEnum = new Model().GetModelObjectSelector().GetAllObjectsWithType 
while (myEnum.MoveNext()) 
        { 
try 
            { 
                Part part = myEnum.Current as Part; 
if (part != null) 
                { 
                    Console.WriteLine("Part id: " + part.Identifier.ID.ToString()); 
                    Solid solid = part.GetSolid(); 
if (solid != null) 
                    { 
                        EdgeEnumerator edgeEnumerator = solid.GetEdgeEnumerator(); 
int edgeCount = 0; 
while (edgeEnumerator.MoveNext()) 
                        { 
var edge = edgeEnumerator.Current as Edge; 
if (edge != null) 
                            { 
                                Console.WriteLine("Start : " + edge.StartPoint.ToString()); 

Examples	2743 


Point Fields 
                                Console.WriteLine("End : " + edge.EndPoint.ToString()); 
                                Console.WriteLine("Type : " + edge.Type.ToString()); 
                                edgeCount++; 
                            } 
                        } 
                        Console.WriteLine("Edge count : " + edgeCount.ToString()); 
                    } 
                } 
            } 
catch { } 
        } 
    } 
} 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..EdgeEnumerator 
See Also 
EdgeEnumerator Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 



























See Also	2744 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator Members 
EdgeEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The EdgeEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
Properties 
  	Name	Description 
Current Gets the current edge. 
See Also 
EdgeEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2745 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator Methods 
EdgeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The EdgeEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
See Also 
EdgeEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2746 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator..::..MoveNext Method 
EdgeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next item in the enumerator. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
EdgeEnumerator Class EdgeEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2747 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator..::..Reset Method 
EdgeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator to the beginning. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
EdgeEnumerator Class EdgeEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2748 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator Properties 
EdgeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The EdgeEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Current Gets the current edge. 
See Also 
EdgeEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2749 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
EdgeEnumerator..::..Current Property 
EdgeEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the current edge. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object Current { get; } 
Visual Basic 
Public ReadOnly Property Current As Object 
Get 
Property Value 

Type: Object 

Implements 

IEnumerator..::..Current 
See Also 
EdgeEnumerator Class EdgeEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2750 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Face Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Face class represents a single face in a solid. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class Face Visual Basic 
Public NotInheritable Class Face 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..Face 
See Also 
Face Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2751 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Face Members 
Face Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Face type exposes the following members. 
Methods 
  	Name	Description 
GetLoopEnumerator Gets a new loop enumerator for enumerating through the 
face's loops. 
Properties 
  	Name	Description 
Normal	The normal vector of the face. 
OriginPartId The part id of the part that this face originated from. For example, a 
face create by a part cut has the id of the cutting part. 
See Also 
Face Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2752 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Face Methods 
Face Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Face type exposes the following members. 
Methods 
  	Name	Description 
GetLoopEnumerator Gets a new loop enumerator for enumerating through the 
face's loops. 
See Also 
Face Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 






















See Also	2753 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Face..::..GetLoopEnumerator Method 
Face Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
Gets a new loop enumerator for enumerating through the face's loops. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public LoopEnumerator GetLoopEnumerator() 
Visual Basic 
Public Function GetLoopEnumerator As LoopEnumerator 
Return Value 
Type: LoopEnumerator 
The new loop enumerator. 
See Also 
Face Class 
Face Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2754 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Face Properties 
Face Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Face type exposes the following members. 
Properties 
  	Name	Description 
Normal	The normal vector of the face. 
OriginPartId The part id of the part that this face originated from. For example, a 
face create by a part cut has the id of the cutting part. 
See Also 
Face Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 




















See Also	2755 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Face..::..Normal Property 
Face Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The normal vector of the face. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Vector Normal { get; } 
Visual Basic 
Public ReadOnly Property Normal As Vector 
Get 
Property Value 
Type: Vector 
See Also 
Face Class 
Face Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2756 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Face..::..OriginPartId Property 
Face Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The part id of the part that this face originated from. For example, a face create by a part cut has the id of the cutting part. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public Identifier OriginPartId { get; } 
Visual Basic 
Public ReadOnly Property OriginPartId As Identifier 
Get 
Property Value 
Type: Identifier 
See Also 
Face Class 
Face Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2757 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The FaceEnumerator class is used to enumerate the faces of a solid. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class FaceEnumerator : IEnumerator 
Visual Basic 
Public NotInheritable Class FaceEnumerator 
Implements IEnumerator 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..FaceEnumerator 
See Also 
FaceEnumerator Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2758 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator Members 
FaceEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The FaceEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
Properties 
  	Name	Description 
Current Returns the current face. 
See Also 
FaceEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2759 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator Methods 
FaceEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The FaceEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
See Also 
FaceEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2760 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator..::..MoveNext Method 
FaceEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next item in the enumerator. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
FaceEnumerator Class FaceEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2761 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator..::..Reset Method 
FaceEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator to the beginning. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
FaceEnumerator Class FaceEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2762 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator Properties 
FaceEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The FaceEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Current Returns the current face. 
See Also 
FaceEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2763 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
FaceEnumerator..::..Current Property 
FaceEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the current face. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Face Current { get; } Visual Basic 
Public ReadOnly Property Current As Face 
Get 
Property Value 
Type: Face 
See Also 
FaceEnumerator Class FaceEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2764 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ISolid Interface 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The ISolid interface represents a physical object in the model or a drawing created by a part instance. The solid instance can be used to query the actual geometry of the part. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public interface ISolid 
Visual Basic 
Public Interface ISolid 
See Also 
ISolid Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 



















See Also	2765 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ISolid Members 
ISolid Interface  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ISolid type exposes the following members. 
Methods 
  	Name	Description 
GetEdgeEnumerator Returns a new edge enumerator in the current plane. GetFaceEnumerator	Returns a new face enumerator in the current plane. 
Properties 
  	Name	Description 
MaximumPoint The maximum axis-aligned point of the solid in the current plane. MinimumPoint	The minimum axis-aligned point of the solid in the current plane. 
See Also 
ISolid Interface 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2766 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ISolid Methods 
ISolid Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ISolid type exposes the following members. 
Methods 
  	Name	Description 
GetEdgeEnumerator Returns a new edge enumerator in the current plane. GetFaceEnumerator	Returns a new face enumerator in the current plane. 
See Also 
ISolid Interface 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2767 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ISolid..::..GetEdgeEnumerator Method 
ISolid Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new edge enumerator in the current plane. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
EdgeEnumerator GetEdgeEnumerator() 
Visual Basic 
Function GetEdgeEnumerator As EdgeEnumerator 
Return Value 

Type: EdgeEnumerator 
An edge enumerator to enumerate through the solid's global edges. 
See Also 
ISolid Interface 
ISolid Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2768 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ISolid..::..GetFaceEnumerator Method 
ISolid Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new face enumerator in the current plane. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
FaceEnumerator GetFaceEnumerator() 
Visual Basic 
Function GetFaceEnumerator As FaceEnumerator 
Return Value 

Type: FaceEnumerator 
A face enumerator to enumerate through the solid's faces. 
See Also 
ISolid Interface 
ISolid Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2769 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ISolid Properties 
ISolid Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ISolid type exposes the following members. 
Properties 
  	Name	Description 
MaximumPoint The maximum axis-aligned point of the solid in the current plane. MinimumPoint	The minimum axis-aligned point of the solid in the current plane. 
See Also 
ISolid Interface 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2770 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ISolid..::..MaximumPoint Property 
ISolid Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The maximum axis-aligned point of the solid in the current plane. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
Point MaximumPoint { get; } 
Visual Basic 
ReadOnly Property MaximumPoint As Point 
Get 
Property Value 
Type: Point 
See Also 
ISolid Interface 
ISolid Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2771 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ISolid..::..MinimumPoint Property 
ISolid Interface  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The minimum axis-aligned point of the solid in the current plane. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
Point MinimumPoint { get; } 
Visual Basic 
ReadOnly Property MinimumPoint As Point 
Get 
Property Value 
Type: Point 
See Also 
ISolid Interface 
ISolid Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2772 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Loop Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Loop class represents a single loop in a face. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class Loop Visual Basic 
Public NotInheritable Class Loop 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..Loop 
See Also 
Loop Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2773 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Loop Members 
Loop Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Loop type exposes the following members. 
Methods 
  	Name	Description 
GetVertexEnumerator Gets a new vertex enumerator. See Also 
Loop Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2774 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Loop Methods 
Loop Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Loop type exposes the following members. 
Methods 
  	Name	Description 
GetVertexEnumerator Gets a new vertex enumerator. See Also 
Loop Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2775 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Loop..::..GetVertexEnumerator Method 
Loop Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets a new vertex enumerator. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public VertexEnumerator GetVertexEnumerator() 
Visual Basic 
Public Function GetVertexEnumerator As VertexEnumerator 
Return Value 

Type: VertexEnumerator 
A vertex enumerator to enumerate through the vertexes in the loop. 
See Also 
Loop Class 
Loop Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2776 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The LoopEnumerator class is used to enumerate the loops of a face instance. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public sealed class LoopEnumerator : IEnumerator 
Visual Basic 
Public NotInheritable Class LoopEnumerator 
Implements IEnumerator 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..LoopEnumerator 
See Also 
LoopEnumerator Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2777 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator Members 
LoopEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoopEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
Properties 
  	Name	Description 
Current Returns the current loop. 
See Also 
LoopEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2778 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator Methods 
LoopEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoopEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
See Also 
LoopEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2779 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator..::..MoveNext Method 
LoopEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next item in the enumerator. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
LoopEnumerator Class LoopEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2780 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator..::..Reset Method 
LoopEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator to the beginning. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
LoopEnumerator Class LoopEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2781 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator Properties 
LoopEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The LoopEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Current Returns the current loop. 
See Also 
LoopEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2782 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
LoopEnumerator..::..Current Property 
LoopEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the current loop. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Loop Current { get; } Visual Basic 
Public ReadOnly Property Current As Loop 
Get 
Property Value 
Type: Loop 
See Also 
LoopEnumerator Class LoopEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2783 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Shell Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Shell class represents a single shell in a solid. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class Shell 
Visual Basic 
Public NotInheritable Class Shell 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..Shell 
See Also 
Shell Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2784 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Shell Members 
Shell Class  Methods  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Shell type exposes the following members. 
Methods 
  	Name	Description 
GetEdgeEnumerator Returns a new edge enumerator in the current plane. GetFaceEnumerator	Returns a new face enumerator in the current plane. 
See Also 
Shell Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2785 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
Shell Methods 
Shell Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The Shell type exposes the following members. 
Methods 
  	Name	Description 
GetEdgeEnumerator Returns a new edge enumerator in the current plane. GetFaceEnumerator	Returns a new face enumerator in the current plane. 
See Also 
Shell Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2786 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Shell..::..GetEdgeEnumerator Method 
Shell Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new edge enumerator in the current plane. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public EdgeEnumerator GetEdgeEnumerator() 
Visual Basic 
Public Function GetEdgeEnumerator As EdgeEnumerator 
Return Value 

Type: EdgeEnumerator 
An edge enumerator to enumerate through the shell's edges. 
See Also 
Shell Class 
Shell Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2787 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
Shell..::..GetFaceEnumerator Method 
Shell Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns a new face enumerator in the current plane. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public FaceEnumerator GetFaceEnumerator() 
Visual Basic 
Public Function GetFaceEnumerator As FaceEnumerator 
Return Value 

Type: FaceEnumerator 
A face enumerator to enumerate through shell's faces. 
See Also 
Shell Class 
Shell Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2788 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

[Missing <summary> documentation for "T:Tekla.Structures.Solid.ShellEnumerator"] 

Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public sealed class ShellEnumerator : IEnumerator 
Visual Basic 
Public NotInheritable Class ShellEnumerator 
Implements IEnumerator 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..ShellEnumerator 
See Also 
ShellEnumerator Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 














See Also	2789 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator Members 
ShellEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ShellEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
Properties 
  	Name	Description 
Current Gets the current shell. 
See Also 
ShellEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2790 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator Methods 
ShellEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ShellEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
See Also 
ShellEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2791 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator..::..MoveNext Method 
ShellEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next item in the enumerator. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
ShellEnumerator Class ShellEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2792 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator..::..Reset Method 
ShellEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator to the beginning. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
ShellEnumerator Class ShellEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2793 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator Properties 
ShellEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The ShellEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Current Gets the current shell. 
See Also 
ShellEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2794 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
ShellEnumerator..::..Current Property 
ShellEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Gets the current shell. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Object Current { get; } 
Visual Basic 
Public ReadOnly Property Current As Object 
Get 
Property Value 

Type: Object 

Implements 

IEnumerator..::..Current 
See Also 
ShellEnumerator Class ShellEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2795 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
VertexEnumerator Class 
Members  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 
The VertexEnumerator class is used to enumerate the vertexes of a loop instance. Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 
(2016.0.2376.0) 
Syntax 
C# 
public sealed class VertexEnumerator : IEnumerator 
Visual Basic 
Public NotInheritable Class VertexEnumerator 
Implements IEnumerator 
Inheritance Hierarchy 
System..::..Object 
    Tekla.Structures.Solid..::..VertexEnumerator 
See Also 
VertexEnumerator Members 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 















See Also	2796 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
VertexEnumerator Members 
VertexEnumerator Class  Methods  Properties  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The VertexEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
Properties 
  	Name	Description 
Current Returns the current vertex. 
See Also 
VertexEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2797 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
VertexEnumerator Methods 
VertexEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The VertexEnumerator type exposes the following members. 
Methods 
  	Name	Description 
MoveNext Moves to the next item in the enumerator. Reset	Resets the enumerator to the beginning. 
See Also 
VertexEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 





















See Also	2798 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 VertexEnumerator..::..MoveNext Method 
VertexEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Moves to the next item in the enumerator. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public bool MoveNext() 
Visual Basic 
Public Function MoveNext As Boolean 
Return Value 
Type: Boolean False on failure. 

Implements 

IEnumerator..::..MoveNext()()()() 
See Also 
VertexEnumerator Class VertexEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 












See Also	2799 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
VertexEnumerator..::..Reset Method 
VertexEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Resets the enumerator to the beginning. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public void Reset() 
Visual Basic 
Public Sub Reset 
Implements 

IEnumerator..::..Reset()()()() 
See Also 
VertexEnumerator Class VertexEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 

















See Also	2800 


Point Fields 
 C# 
Visual Basic 
Include Protected Members 
Include Inherited Members 
Tekla Open API Reference for Tekla Structures 2016 
VertexEnumerator Properties 
VertexEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

The VertexEnumerator type exposes the following members. 
Properties 
  	Name	Description 
Current Returns the current vertex. 
See Also 
VertexEnumerator Class 
Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 























See Also	2801 


Point Fields 
 C# 
Visual Basic 
Tekla Open API Reference for Tekla Structures 2016 
VertexEnumerator..::..Current Property 
VertexEnumerator Class  See  Also  Send Feedback 
[This is preliminary documentation and is subject to change.] 

Returns the current vertex. 
Namespace:  Tekla.Structures.Solid 
Assembly:  Tekla.Structures (in Tekla.Structures.dll) Version: 2016.0.0.0 (2016.0.2376.0) 
Syntax 
C# 
public Point Current { get; } 
Visual Basic 
Public ReadOnly Property Current As Point 
Get 
Property Value 
Type: Point 
See Also 
VertexEnumerator Class VertexEnumerator Members Tekla.Structures.Solid Namespace 

Copyright  © Tekla 2013. All rights reserved. 
















See Also	2802 
